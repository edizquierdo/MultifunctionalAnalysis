(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    431405,       8538]
NotebookOptionsPosition[    424388,       8411]
NotebookOutlinePosition[    424780,       8427]
CellTagsIndexPosition[    424737,       8424]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Neural Variance", "Title",
 CellChangeTimes->{{3.8261273404510717`*^9, 3.826127345775985*^9}, {
  3.8264509495448227`*^9, 
  3.826450950093506*^9}},ExpressionUUID->"0e3017fc-6971-47e6-ace5-\
241f0c24c458"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cd", "=", 
   RowBox[{"ColorData", "[", 
    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dir", " ", "=", "\"\<../AnalysisData/best_categ_pass_agent/\>\""}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.826451006835874*^9, 3.826451009332971*^9}, {
   3.826464004781144*^9, 3.826464006108552*^9}, 3.82646442429115*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"c1f4041e-1d89-4e10-a752-4fee3d8691be"],

Cell[CellGroupData[{

Cell["V2 .0", "Chapter",
 CellChangeTimes->{{3.826450957329771*^9, 
  3.8264509738240023`*^9}},ExpressionUUID->"ce993321-b2b2-44e4-90e1-\
6dc5732a63e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ba1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_avoid_n1.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ba2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_avoid_n2.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ba3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_avoid_n3.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ba4", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_avoid_n4.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ba5", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_avoid_n5.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_catch_n1.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_catch_n2.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_catch_n3.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc4", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_catch_n4.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc5", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_catch_n5.dat\>\""}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.825753420066518*^9, 3.825753457705702*^9}, {
  3.825757772687665*^9, 3.825757774351603*^9}, {3.825759385944387*^9, 
  3.825759386280839*^9}, {3.826039733830529*^9, 3.826039745197775*^9}, {
  3.826039880860655*^9, 3.8260399361152077`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"bf5cecf0-a8ce-4152-883c-668c497770f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_avoid_n1.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_avoid_n2.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_avoid_n3.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa4", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_avoid_n4.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa5", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_avoid_n5.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ac1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_pass_n1.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ac2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_pass_n2.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ac3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_pass_n3.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ac4", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_pass_n4.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ac5", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_pass_n5.dat\>\""}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"6ed39aba-d4a9-40b7-abf0-03335a350299"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ba", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"Variance", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"Flatten", ",", 
      RowBox[{"{", 
       RowBox[{"ba1", ",", "ba2", ",", "ba3", ",", "ba4", ",", "ba5"}], 
       "}"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"bc", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"Variance", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"Flatten", ",", 
      RowBox[{"{", 
       RowBox[{"bc1", ",", "bc2", ",", "bc3", ",", "bc4", ",", "bc5"}], 
       "}"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"aa", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"Variance", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"Flatten", ",", 
      RowBox[{"{", 
       RowBox[{"aa1", ",", "aa2", ",", "aa3", ",", "aa4", ",", "aa5"}], 
       "}"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ac", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"Variance", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"Flatten", ",", 
      RowBox[{"{", 
       RowBox[{"ac1", ",", "ac2", ",", "ac3", ",", "ac4", ",", "ac5"}], 
       "}"}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.826451066760872*^9, 3.8264511746616917`*^9}, {
  3.826478512942286*^9, 3.826478515066002*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"2ff1fa49-72e7-471f-9048-e9585932a572"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.007462263262276769`", ",", "0.000012924617670223474`", ",", 
   "0.00001323058201286264`", ",", "0.05393613892235979`", ",", 
   "0.21419530917446203`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8264510892754307`*^9, 3.826451104363489*^9}, 
   3.826451175078244*^9, 3.826464007557311*^9, 3.8264782985030193`*^9, 
   3.826478520572378*^9, 3.826478573139933*^9, 3.826537734140335*^9, 
   3.826625955971752*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"ec5443ba-ef2b-414d-8442-f215cc5ae2f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.11736159312456228`", ",", "0.04423217038732231`", ",", 
   "0.23264934220757`", ",", "0.1916064379911624`", ",", 
   "0.23005498991993914`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8264510892754307`*^9, 3.826451104363489*^9}, 
   3.826451175078244*^9, 3.826464007557311*^9, 3.8264782985030193`*^9, 
   3.826478520572378*^9, 3.826478573139933*^9, 3.826537734140335*^9, 
   3.826625955981072*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"d100ed24-05d8-47fc-808c-39a45d07a653"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2125671179580457`", ",", "0.05005678895549286`", ",", 
   "0.0006664469881175504`", ",", "0.000012858336893859556`", ",", 
   "0.006835135799180024`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8264510892754307`*^9, 3.826451104363489*^9}, 
   3.826451175078244*^9, 3.826464007557311*^9, 3.8264782985030193`*^9, 
   3.826478520572378*^9, 3.826478573139933*^9, 3.826537734140335*^9, 
   3.826625956003381*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"f4ff0463-6fc8-4e9e-9875-74aff7fe971a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.006935325533683669`", ",", "0.0190673741952141`", ",", 
   "0.20897712510875024`", ",", "0.039670013896603275`", ",", 
   "0.006831213075380304`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8264510892754307`*^9, 3.826451104363489*^9}, 
   3.826451175078244*^9, 3.826464007557311*^9, 3.8264782985030193`*^9, 
   3.826478520572378*^9, 3.826478573139933*^9, 3.826537734140335*^9, 
   3.8266259560046587`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"75db8623-80e8-443f-bf0a-1f3fd7dbeb96"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ba", ",", "bc", ",", "aa", ",", "ac"}], "}"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", "\[FilledCircle]", "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Dashed"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Neuron\>\"", ",", "\"\<Variance\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<SubtaskVariance.eps\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8264594528122683`*^9, 3.8264595152885733`*^9}, {
  3.826459585248309*^9, 3.8264596361826887`*^9}, {3.8264782822675467`*^9, 
  3.8264783136078444`*^9}, {3.826478516360359*^9, 3.826478519139333*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"290648d5-4169-467f-87af-e6f1bc5fa2f0"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], 
      LineBox[{{1., 0.007462263262276769}, {2., 0.000012924617670223474`}, {
       3., 0.00001323058201286264}, {4., 0.05393613892235979}, {5., 
       0.21419530917446203`}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], 
      LineBox[{{1., 0.11736159312456228`}, {2., 0.04423217038732231}, {3., 
       0.23264934220757}, {4., 0.1916064379911624}, {5., 
       0.23005498991993914`}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], 
      LineBox[{{1., 0.2125671179580457}, {2., 0.05005678895549286}, {3., 
       0.0006664469881175504}, {4., 0.000012858336893859556`}, {5., 
       0.006835135799180024}}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], 
      LineBox[{{1., 0.006935325533683669}, {2., 0.0190673741952141}, {3., 
       0.20897712510875024`}, {4., 0.039670013896603275`}, {5., 
       0.006831213075380304}}]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], GeometricTransformationBox[InsetBox[
        StyleBox["\[FilledCircle]",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}], {0., 0.}], {{{1., 
       0.007462263262276769}}, {{2., 0.000012924617670223474`}}, {{3., 
       0.00001323058201286264}}, {{4., 0.05393613892235979}}, {{5., 
       0.21419530917446203`}}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], GeometricTransformationBox[InsetBox[
        StyleBox["\[FilledCircle]",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}], {0., 0.}], {{{1., 
       0.11736159312456228`}}, {{2., 0.04423217038732231}}, {{3., 
       0.23264934220757}}, {{4., 0.1916064379911624}}, {{5., 
       0.23005498991993914`}}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], GeometricTransformationBox[InsetBox[
        StyleBox["\[FilledCircle]",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}], {0., 0.}], {{{1., 
       0.2125671179580457}}, {{2., 0.05005678895549286}}, {{3., 
       0.0006664469881175504}}, {{4., 0.000012858336893859556`}}, {{5., 
       0.006835135799180024}}}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], GeometricTransformationBox[InsetBox[
        StyleBox["\[FilledCircle]",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]]}], {0., 0.}], {{{1., 
       0.006935325533683669}}, {{2., 0.0190673741952141}}, {{3., 
       0.20897712510875024`}}, {{4., 0.039670013896603275`}}, {{5., 
       0.006831213075380304}}}]}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Variance\"", TraditionalForm], None}, {
     FormBox["\"Neuron\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 0.23264934220757}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.826459481336589*^9, 3.82645953732533*^9}, 
   3.8264596369087343`*^9, 3.826464007670601*^9, {3.826478287873889*^9, 
   3.826478314509967*^9}, 3.826478522129301*^9, 3.826478573196084*^9, 
   3.826537734223235*^9, 3.826625956137162*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"967f3524-2e72-455c-b168-f589341822ff"],

Cell[BoxData["\<\"SubtaskVariance.eps\"\>"], "Output",
 CellChangeTimes->{{3.826459481336589*^9, 3.82645953732533*^9}, 
   3.8264596369087343`*^9, 3.826464007670601*^9, {3.826478287873889*^9, 
   3.826478314509967*^9}, 3.826478522129301*^9, 3.826478573196084*^9, 
   3.826537734223235*^9, 3.826625957074979*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"8c441079-73fd-4858-ac95-3fb4354d1fb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"EuclideanDistance", "[", 
    RowBox[{"ba", ",", "bc"}], "]"}], ",", 
   RowBox[{"EuclideanDistance", "[", 
    RowBox[{"aa", ",", "ac"}], "]"}], ",", 
   RowBox[{"EuclideanDistance", "[", 
    RowBox[{"ba", ",", "aa"}], "]"}], ",", 
   RowBox[{"EuclideanDistance", "[", 
    RowBox[{"bc", ",", "ac"}], "]"}], ",", 
   RowBox[{"EuclideanDistance", "[", 
    RowBox[{"ba", ",", "ac"}], "]"}], ",", 
   RowBox[{"EuclideanDistance", "[", 
    RowBox[{"ba", ",", "aa"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.826625930213647*^9, 3.826625948670939*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"9b79c062-929c-4a30-bb42-da22a59f0991"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2955628622677704`", ",", "0.2970030412376161`", ",", 
   "0.3007969051713032`", ",", "0.2937705446759553`", ",", 
   "0.2953517387829198`", ",", "0.3007969051713032`"}], "}"}]], "Output",
 CellChangeTimes->{3.826537734692339*^9, 3.8266259571764183`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"57d0bf94-84f1-45dd-b397-73362a17e5aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"ba", ",", "bc"}], "]"}], ",", 
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"aa", ",", "ac"}], "]"}], ",", 
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"ba", ",", "aa"}], "]"}], ",", 
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{"bc", ",", "ac"}], "]"}]}], "}"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", "Gray", "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<Euclidean Distance\>\""}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "2"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.5", ",", "4.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.0", ",", "0.325"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<SubtaskEucMI.eps\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.826470006234623*^9, 3.826470025143605*^9}, {
  3.826470123216297*^9, 3.826470124509375*^9}, {3.826477732476173*^9, 
  3.826477735714623*^9}, {3.826477796618561*^9, 3.826477851489355*^9}, {
  3.826478528083727*^9, 3.82647853329145*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"48aed63a-e238-4857-8f25-e526f0e8b74d"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.09759650400582665, 0.}, {4.902403495994173, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {GrayLevel[0.5], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             0.2955628622677704}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{45.74457392571013, 
            80.35542607428988}, {-40.53629733356176, 28.}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.2955628622677704]& ,
         TagBoxNote->"0.2955628622677704"],
        StyleBox["0.2955628622677704`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.2955628622677704, {}], "Tooltip"]& ]}, 
     {GrayLevel[0.5], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             0.2970030412376161}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{83.54457392571014, 
            118.15542607428989`}, {-40.867815454120475`, 28.}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.2970030412376161]& ,
         TagBoxNote->"0.2970030412376161"],
        StyleBox["0.2970030412376161`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.2970030412376161, {}], "Tooltip"]& ]}, 
     {GrayLevel[0.5], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             0.3007969051713032}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{121.34457392571014`, 
            155.9554260742899}, {-41.741133748086526`, 28.}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.3007969051713032]& ,
         TagBoxNote->"0.3007969051713032"],
        StyleBox["0.3007969051713032`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.3007969051713032, {}], "Tooltip"]& ]}, 
     {GrayLevel[0.5], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             0.2937705446759553}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{159.14457392571015`, 
            193.7554260742899}, {-40.123719610984324`, 28.}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.2937705446759553]& ,
         TagBoxNote->"0.2937705446759553"],
        StyleBox["0.2937705446759553`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.2937705446759553, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.09759650400582665, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox["\"Euclidean Distance\"", TraditionalForm], None}, {
     FormBox["\"\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  PlotRange->{{0.5, 4.5}, {0., 0.325}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.826477743873268*^9, {3.826477798377859*^9, 3.8264778096158857`*^9}, {
   3.826477842072207*^9, 3.826477851766747*^9}, {3.8264785239094143`*^9, 
   3.8264785338262577`*^9}, 3.826478573653008*^9, 3.826537734739171*^9, 
   3.826625957221498*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"ff615ae2-c84a-45be-8332-fcb5d9e288d7"],

Cell[BoxData["\<\"SubtaskEucMI.eps\"\>"], "Output",
 CellChangeTimes->{
  3.826477743873268*^9, {3.826477798377859*^9, 3.8264778096158857`*^9}, {
   3.826477842072207*^9, 3.826477851766747*^9}, {3.8264785239094143`*^9, 
   3.8264785338262577`*^9}, 3.826478573653008*^9, 3.826537734739171*^9, 
   3.82662595758668*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"50125b16-0f28-4f67-88fc-bf621a3700b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"CosineDistance", "[", 
      RowBox[{"ba", ",", "bc"}], "]"}], ",", 
     RowBox[{"CosineDistance", "[", 
      RowBox[{"aa", ",", "ac"}], "]"}], ",", 
     RowBox[{"CosineDistance", "[", 
      RowBox[{"ba", ",", "aa"}], "]"}], ",", 
     RowBox[{"CosineDistance", "[", 
      RowBox[{"bc", ",", "ac"}], "]"}]}], "}"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<Cosine Distance\>\""}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "2"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", "Black", "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.5", ",", "4.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.0", ",", "1.0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<SubtaskCosMI.eps\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.82646463467162*^9, 3.82646465634866*^9}, {
   3.826477675655264*^9, 3.826477700108885*^9}, 3.826477801243312*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"e3abc855-a115-4e3d-b11d-6847d96403a1"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.09759650400582665, 0.}, {4.902403495994173, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {GrayLevel[0], EdgeForm[{Opacity[0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             0.3146566986530056}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{40.90313182811363, 76.5968681718864}, {
            4.7124360727211325`, 29.500000000000007`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.3146566986530056]& ,
         TagBoxNote->"0.3146566986530056"],
        StyleBox["0.3146566986530056`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.3146566986530056, {}], "Tooltip"]& ]}, 
     {GrayLevel[0], EdgeForm[{Opacity[0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             0.9440124736930798}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{79.90313182811364, 
            115.59686817188641`}, {-43.8659628131846, 29.500000000000007`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9440124736930798]& ,
         TagBoxNote->"0.9440124736930798"],
        StyleBox["0.9440124736930798`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9440124736930798, {}], "Tooltip"]& ]}, 
     {GrayLevel[0], EdgeForm[{Opacity[0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             0.9368032553012703}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{118.90313182811366`, 
            154.59686817188643`}, {-43.30950126856681, 29.500000000000007`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9368032553012703]& ,
         TagBoxNote->"0.9368032553012703"],
        StyleBox["0.9368032553012703`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9368032553012703, {}], "Tooltip"]& ]}, 
     {GrayLevel[0], EdgeForm[{Opacity[0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             0.3037065208150893}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{157.90313182811366`, 193.59686817188646`}, {
            5.557652924585298, 29.500000000000007`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.3037065208150893]& ,
         TagBoxNote->"0.3037065208150893"],
        StyleBox["0.3037065208150893`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.3037065208150893, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.09759650400582665, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox["\"Cosine Distance\"", TraditionalForm], None}, {
     FormBox["\"\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->200,
  PlotRange->{{0.5, 4.5}, {0., 1.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.8264776870739517`*^9, 3.826477701143671*^9}, {
   3.826477801622863*^9, 3.826477811510886*^9}, 3.82647857414754*^9, 
   3.8265377351515017`*^9, 3.826625957641474*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"81e9149a-6a6d-4bc5-aff6-4035ec823b48"],

Cell[BoxData["\<\"SubtaskCosMI.eps\"\>"], "Output",
 CellChangeTimes->{{3.8264776870739517`*^9, 3.826477701143671*^9}, {
   3.826477801622863*^9, 3.826477811510886*^9}, 3.82647857414754*^9, 
   3.8265377351515017`*^9, 3.826625958014399*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"1caf1f35-26ac-4e28-9184-7b1cf6a4ba6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"DistributionChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"baV", "-", "bcV"}], ",", 
     RowBox[{"aaV", "-", "acV"}], ",", 
     RowBox[{"baV", "-", "aaV"}], ",", 
     RowBox[{"bcV", "-", "acV"}]}], "}"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<SouthwestColors\>\""}], ",", 
   RowBox[{"ChartElementFunction", "\[Rule]", "\"\<HistogramDensity\>\""}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<Differences\>\""}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<variance_diff.eps\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.826462662544066*^9, 3.8264626929271097`*^9}, {
  3.826462843567123*^9, 3.826462846760837*^9}, {3.826463053734147*^9, 
  3.8264630573791027`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"fdf4cdc9-7297-4699-8469-a9ed020f845e"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.19605693430634064`, 0.}, {2.1960569343063403`, 0.}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], {}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[
     0.7]], {}}, {}, {}}, {{{{}, {}}, {}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.8039430656936596, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox["\"Differences\"", TraditionalForm], None}, {
     FormBox["\"\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.8039430656936596, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      1.1960569343063403`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.8039430656936596, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      1.1960569343063403`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.8039430656936596, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     1.1960569343063403`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{{3.8264626871987*^9, 3.826462693386888*^9}, 
   3.82646284736095*^9, {3.826463054980267*^9, 3.8264630811088743`*^9}, 
   3.826464008686088*^9, 3.8264782994162416`*^9, 3.8264785745941143`*^9, 
   3.8265377391006393`*^9, 3.8266259583254642`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"532545db-6f4e-4f2d-a57a-daa191ca3606"],

Cell[BoxData["\<\"variance_diff.eps\"\>"], "Output",
 CellChangeTimes->{{3.8264626871987*^9, 3.826462693386888*^9}, 
   3.82646284736095*^9, {3.826463054980267*^9, 3.8264630811088743`*^9}, 
   3.826464008686088*^9, 3.8264782994162416`*^9, 3.8264785745941143`*^9, 
   3.8265377391006393`*^9, 3.826625958688802*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"2316438e-6ba0-4676-a9b7-e82c3cbac5e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["v1 .0", "Chapter",
 CellChangeTimes->{{3.826450961513262*^9, 
  3.826450968718154*^9}},ExpressionUUID->"0d65dc1e-a295-4f2b-ab1b-\
80d63a9b51dc"],

Cell[CellGroupData[{

Cell["Task 1: Object Recognition", "Section",
 CellChangeTimes->{{3.826127635167426*^9, 3.82612764714084*^9}, {
  3.826128075366658*^9, 3.826128077942148*^9}, {3.826128144391172*^9, 
  3.826128149148464*^9}},ExpressionUUID->"6d6065f0-19ab-4f8b-a668-\
3f5063252d1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ba1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_avoid_n1.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ba2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_avoid_n2.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ba3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_avoid_n3.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ba4", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_avoid_n4.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ba5", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_avoid_n5.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_catch_n1.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_catch_n2.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_catch_n3.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc4", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_catch_n4.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc5", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<B_catch_n5.dat\>\""}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.825753420066518*^9, 3.825753457705702*^9}, {
  3.825757772687665*^9, 3.825757774351603*^9}, {3.825759385944387*^9, 
  3.825759386280839*^9}, {3.826039733830529*^9, 3.826039745197775*^9}, {
  3.826039880860655*^9, 3.8260399361152077`*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"4c1009df-a675-416e-a9f9-eb947f9d7678"],

Cell[CellGroupData[{

Cell["Neural Variance in General", "Subsection",
 CellChangeTimes->{{3.826127635167426*^9, 3.82612764714084*^9}, {
  3.826128075366658*^9, 
  3.826128077942148*^9}},ExpressionUUID->"ce187f5b-13e5-472b-be1c-\
64d9826cd14a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Variance", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"ba1", ",", "bc1"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Variance", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"ba2", ",", "bc2"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Variance", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"ba3", ",", "bc3"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Variance", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"ba4", ",", "bc4"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Variance", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"ba5", ",", "bc5"}], "}"}], "]"}], "]"}], "]"}]}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Neuron\>\"", ",", "\"\<Total Variance\>\""}], "}"}]}], ",", 
   
   RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", "\[FilledCircle]", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<B_Var_General.eps\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.826128190491602*^9, 3.826128225034253*^9}, {
   3.8262940233482943`*^9, 3.826294056483326*^9}, 3.826294754118073*^9},
 CellLabel->
  "In[251]:=",ExpressionUUID->"a91ef87f-16c0-4388-a11e-689c973da5c2"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
    GeometricTransformationBox[InsetBox[
      StyleBox["\[FilledCircle]",
       StripOnInput->False,
       GraphicsBoxOptions->{DefaultBaseStyle->Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}], {0., 0.}], {{{1., 0.06950047394718602}}, {{2., 
     0.025677401914238895`}}, {{3., 0.1536261852163368}}, {{4., 
     0.13149060043191474`}}, {{5., 0.22217052053713965`}}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Total Variance\"", TraditionalForm], None}, {
     FormBox["\"Neuron\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 0.22217052053713965`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.826128079676895*^9, 3.8261282259004517`*^9, 3.826129728968354*^9, 
   3.8262925079098873`*^9, {3.826294029588277*^9, 3.826294056855158*^9}, 
   3.8262947807603683`*^9, 3.82629505358419*^9, 3.82646400956695*^9, 
   3.826537739814892*^9},
 CellLabel->
  "Out[251]=",ExpressionUUID->"4f2b9732-ecd9-4c6a-bab4-4764adba2966"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neural Variance Across the Task", "Subsection",
 CellChangeTimes->{{3.826127635167426*^9, 
  3.82612764714084*^9}},ExpressionUUID->"83cb1999-a583-4472-84a4-\
e3ade2097d4c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"max", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsColumn", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba1", ",", "bc1"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "False"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "10"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba2", ",", "bc2"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "False"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "10"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba3", ",", "bc3"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "False"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "10"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba4", ",", "bc4"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "False"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "10"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba5", ",", "bc5"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "False"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "10"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<B_Var_Task_Traces.eps\>\"", ",", "%"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"Variance", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"ba1", ",", "bc1"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Total", "[", 
      RowBox[{"Variance", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"ba2", ",", "bc2"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Total", "[", 
      RowBox[{"Variance", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"ba3", ",", "bc3"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Total", "[", 
      RowBox[{"Variance", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"ba4", ",", "bc4"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Total", "[", 
      RowBox[{"Variance", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"ba5", ",", "bc5"}], "}"}], "]"}], "]"}], "]"}]}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Neuron\>\"", ",", "\"\<Total Variance\>\""}], "}"}]}], ",", 
   
   RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", "\[FilledCircle]", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<B_Var_Task_Values.eps\>\"", ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8261277800679703`*^9, 3.826127957376429*^9}, {
   3.826128040574861*^9, 3.826128049301351*^9}, {3.826128232494413*^9, 
   3.826128252684923*^9}, 3.8262940623008423`*^9, {3.826294746435816*^9, 
   3.826294749852643*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"d5216cad-eb1c-4eb0-9bf9-34a069108eab"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdmHlYzOv//4ccWyiEEC3ipJKyVYhnSRJpIYowJbQ37XvN3swkslaEDtkO
WpRkKZNOyRKJkr0jS06WLCll+fW75tX1+Xr7x/W4bu+e92Nemfd9P7U9g5w3
9maxWBuUWKz//7fiT+t81u9/8Dv2Z7Aqg9UYrM5gDQZrMViHwboMnsRgPQbr
M9iQwUYMNmawCYOnMXg6g2cweCaDZzHYlMFmDDZn8GwGz2HwXAZbMHgeg+cz
GL8zl8EsS8Y6g1lWjHUGsxYw1hnMsmasM5i1kLHOYJYNY53BrEWMdQazbBnr
DGYtZqwzmGXHWGcwawljncGspYx1BrPsGesMZi1jrDOY5cBYZzDL8XcGg7kM
ljOY5cR4nsFcBssZzHJmPM9gLoPlDGYtZzzPYC6D5QxmrWA8z2Aug+UMZrkw
nmcwl8FyBrNWMp5nMJfBcgazVjGeZzCXwXIGs1wZzzOYy2A5g1lujOcZzGWw
nMGs1YznGcxdjXuz7dhRXeYWiucZ66w1jOcZzGWwnMEsd8bzDOYyWM5g1lrG
8wzmMljOYNY6xvMM5q6Dy64Z1uGbrcifsc5a//vng/WM59cjJc4Ejs5O9Dxj
ncX+nbUYDAazGcxl/76/LMa6nMGN7N/3w/L4/XktD0Y+g9kM5nogpP/0K88f
08/L8kBHxkrOIMdl5Ovx++fTyHie5fk7azEYnrgxbYbqL38DxfNsT6hDc5i7
n6OCuZ5wXKWTPlzZmfI9cbxd6/983p7YnG/+v/00euL5FwOWn/oi8t8A3X4T
/o8/g7EBCaEm/9s/m8HcDb/vL4vBcgY3boBRkbVc9HQu5XthSZVN9/oSyvdC
6mf9//nBC8qxJq315eTHZjDXC+mds3RaL6+gfC94dlh278+N8hnc6IUXSxbt
2N6+hvI3/s5aG/F49uTmLRlsymcwm8HcjXgaaWSiNWAD5W/E3E/6b/NzPCif
wY0b4eUzVdpURv+etel31toEg8NG/2MwmL0Jc5Xn/1UGX8rfhJe5Zq5GdzZT
/iY4BNr4v54dQPkMbtyEp/mL8112B1L+5t9ZazP8jk/21dQNpvzNKI42uW7Y
L4zyGczdDIMx5zL/mxhB+QyWb0ZA6vz+Z62iKX8z4itmxhREhVO+N+SzrxVW
ZcdRvjfQ22b2rXmxlO/d/RvgZ/bsby7le8M/0tnOc2ci5Xsj41dQ6R47PuV7
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
NSnE6snY1rLkw4Pjt+b/P7ctyeo=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0., 1.1368683772161603`*^-13}, {0., 
       1.4210854715202004`*^-14}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.3}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -37.916666666666664}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
2ZptuSdG/h+y5VmX
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0., 1.1368683772161603`*^-13}, {0., 
       1.4210854715202004`*^-14}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.3}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -113.75}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd2XlYzPv///GRLftkDSHZ1SGyZEkPEZEorZSa9tI27XvN1sw0cVocZIks
kQ+SPVtCiEhFZOtkLSEllCW+8/vN891cZ/xzrtv1ntc83vd5Xde5zrmMdgta
7anGYrHcO7NY/++fij9Nxqz//sF/qa5itooHqlhTxVoq1laxjorHqni8iieq
eLKK9VQ8RcX6Kp6m4ukqNlDxDBXPVPEsFc9WsaGK56h4rornqXi+io1UvEDF
xirGf81TMWuhynMVs0xUnquYtUjluYpZi1Weq5hlqvJcxawlKs9VzFqq8lzF
LDOV5ypmLVN5rmLWcpXnKmaZqzxXMWuFynMVsyxUnquYtVLluYpZq1Seq5hl
+V9DxTwVF6mYZaVyXsU8FRepmLVa5byKeSouUjHLWuW8innWiPp2y985/eJc
xXlr6Ikml/xvQp7CLBuV8zbY0rffRov5xYrnPJv/fr5IxSxbaD5VP3Pd45bC
sP3vHs8W1V9S9iSXP6TzKmbZ/dewQyFn9fEhVz/SeRUX2cGlflvNM9l3Om+P
OVOX9+5s94PO22PvjLHqQZrd5inO2yNg0zmdmee6Klxkj83Jf/1+zmMrzHKA
zqtRg4uyBisMB1RNF/cwFwyh8w4I2GuYX9JTk847oNO87U5BWdp0fg22Peqd
lWCoQ+fXIGHmjrl/TZlA59egZdkNbeMGPTq/BtPMe9Xu3TmVzq9F6ec3ut93
G9D5tTAIXNQn4dIsOr8WN1NPjgwvnUvn12J7y67ZlauM6Lwj2mZNspyXBDrv
CM++/5r18lpE5x2hmybrX+a5hM47wqv7xMrckGV03gnnLhYfrNOzoPNOKHxi
1fBumSWdd4JAMmfEec/VdN4JDRsrvVfstqHz61AecO6mTYUdnV+HpZvm9zUK
X0Pn16Hr+/JVK0qd6Pw6yPq9Mv3yyIXOO+PZsG8W48660nlnBIzs5pI/2J3O
O6PHO9mkvWWedN4ZtYWnCis+etN5F7wbYsmZOW49nXfByA0BFqwD/nTeBWML
7+0SsLh03gXRR1/kPHMIpvMclI90jN6uHqqwNgeP342ShjWG0fdxsHXIUNeU
WxEKczgYsq5r3on50fT9HOjKXomMXGMVzubA2SBaJ68xnvY4eNrj7fzt9jyF
azlwSbXIG3GTT/uuyHMK/KgZJaR9V3ifPv9Y4p9E+65IsCko2KMvoX1XrOQ6
Tl9onkz7rvDo0z+gj38K7bsiDWtySp5upH1XnBnLfrfBPI32XdHu0ugx/ks6
7buhe+jhcW/dN9G+Gz6NGxD+asBm2neD2OX1MJeCLbTvBovVNupnOm+jfTcI
b4zXMNLaQftuKJyx2tTdK4v23ZCSOD4/4P5u2ndDj53sT3k+e2jfHdMDslJv
vtxL++5gs+Y42yfsp313/DgzR7LB6QDtu0Ojk9potam5tO+O2ojlo+9P+x/t
u2PbbY8q06gjtO+O328fxra9yaN9d+w6POdhr+J82vfA1m+/vkyYe4L2PbBq
6q/pM4pP0r4Hwk+ozVkYfJr2PbA0q2RLpdNZ2vdA9gaT22zzc7TvAb8s48tS
9wu074GhemfEuhWXaN8D9SnPHk6eVET7nkjQrXBhJ16hfU9kdFs7+ZXaNdr3
xKHL0/dJdxTTviemqq0/UhJwg/Y9cfPV2H4jZ5fQvicCv3zMDll4m/Y9YWlf
ZT4u/g7te8J+apZgSEMZ7XshcpDvpvd3ymnfC94aHONNBpW074XW1j57dpbc
p30vmBh3+/zAp4r2vaB7WlP0fOoj2vfCHI1vm8qmPKZ9LzQvSDv60P4p7XtB
/Vt/Ufu+57TvjS2a46Deu5b2vTHCbdjyT/4vaN8bFiJrqwsNL2nfGzdm3rYq
4L2mfW9s7N/zPtvoLe17wzH557Bug+tp3xtBaW/5g8c20L43EhYutnxp/4H2
fcCTeNr+LGqkfR80x7UfzD/cRPs+GK/h9cSN/Zn2fWB+T3agcHML7fvg+9bu
fS2MvtK+D7b1yeuj072V9n2w3/+57nC177Tvg1K1+PWBWj9p3xdpZ6fbR7m3
074v+j38/Dq69g/t+6Jt7FIN32Wd5iv2fbF/lne3zRfVFOb5YmT/9z9lq7so
nO2L26v1Jzzt2U3hIl+Y3Mkb9utVd4VrfZGzI6b3iroeCrPWwyPB7vqhwb0V
1l6PZ6kpD6xi+yqM9fhn94QhfyexaX89choNr6d81KD99SjctN23f8gA2l+P
mn4tTnUDBtH+etgE9EuIfTKY9tdjdnHApiulmrTvh/Kq4ubNr4fRvh8yFhjf
mqM7gvb9sNHt3hiT7FG07wfWIQu7b+NG074fvm5mVXvv0KF9P1hfd5Ja/zWW
9v2gt90anV6No30/FBew140pnED7/gjYct/Zs2gS7ftDeiXzRfZHXdr3x8mI
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
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0., 1.1368683772161603`*^-13}, {0., 
       1.4210854715202004`*^-14}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.3}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -189.58333333333331}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
OYZH1ldl/EUulOPmmH05c7vR/VkkR1TH/jcyppJL5JCWddDaRJLNcojS/Ocu
SieXy1H6+qk+9zi5Uo758hZ9/IrIdXJUpK/1/lRB5hRolQ2H2KZ0fzdXoL7+
Rm1VT7KtAh8rZMOaeZHtFJjlkvclO5Rsr8CZnB5xCVuF+1+BhecWNf9UQHZW
YOaGFcb5L8nuCkw7NS0r81t6f4ACpwPvfj/ZnuylwPwfvEWmYWRfBRbFXimt
mUb2U6D/FN/bE1eSRQp0ilzQrxtPDlDgUOw/Nd8YyGIFzofr9uEyWaKA+J3k
7fHXwvu3AptNoj9O2tD7jcYyH7svdW3tRNZb5sNsqlowkZxhseliZ/18skEB
b2XtW+9gcpYCCxKvl+YmkY0KmMbyJwelkvMU2D2+ybYJv5JNCgz+5svR6uvk
QgXC/Ne32PyWXKSAJLVZ0mxb+n5QYpmvF+N7Zw8imxVo1ka2oHIyuVyBR8V1
25YsJVcqcK3A7Q+XMHKdAnvy5m1xk5I5JaJdGodkbyQ3V0L5k7rHkF/Itkqs
Wza9oHc+2U6JHkPbR798RLZXYumrswdv1pMdleD1G6Xru9H7o7MS9Tea+Hwe
SXZXYvi9a2/bzCJDiU2KCI95K8leSuiH+69rE0n2VSKpTf33h3iynxJeH50e
V68li5QYeG/yWLvt5AAlfry/dvTZg2Sx5fPdO/W+d5UsUcK9wMv93Asyr8T9
013TDzel91+NEugUUDCgF1mvRG1kRvAvY8gZSkR1fSG6OlP4fqZETfqXwrjl
5CwlGp8PLuwYSjYq0dK3m65XHDlPify2ewxiJdmkxLYR/XatSiUXKuHp/+X2
pf3kIiUk7nZLfywglyhx/v3dzH1mslmJUjfkXOfofb7cMh+1Fy+O/olcaalP
QnmToa7kOiUOPI421nkI7/8qy/2309U4i9xchWtuUzIuLCHbqnD9cNPoIwFk
O0v7qDkvoyPI9irceaude1hKdlQhbcG6zn3Tyc4q2LYy97l3hOyuwgafDfev
FZOhwqPbu+IfVJK9VDhUHeKR+S19X/FVIUr1katvQ/ZT4Xdd/98//EgWqWC0
ExeN6UoOUKHfR+crlx3IYhVeSM9Nze1Llqhw9Y+LH8SDybwKbtU+7TSjyBoV
Cv6W9O3kTdarEMf3/jRqITlDhfVNlIPGB5INKniXG45tjyZnqTAw+9eOP/Bk
owpiH6f+Q9XkPBW6JnR4nrNW+P6ugv/bt069N5ILVfjLuMQ2Ok34PqeC/t0i
Ud42cokK3bxTx4TvEb7fqXC7Sru78iC5XAXf/l0lD84J3/dU0I2y651zk1yn
Qn77Q+cKH5I5NbZ2jNd+fUFursaNTUfvLHlHtlVDXhZpDv5AtlPDNc11SHYd
2V6NosvOK5d9ITuq8X3vU5dy/yE7q7H8dZtlSsHuauz1SnfpKXwealwUdUx2
+ET2sow/c/f+9h+F+quRHjB3+l/C+H5q2MpTZ92pEuqvxr+bQqfa/CXUX43c
92f7xz4R6q/G2HSnSa7FQv3VuHZtS9bUfKH+ahgr+kaIDwn1V+OW3+S9O/cJ
9Vdj/NgbA0/vEuqvxm+bnN0u7RDqr0Z+euaAaVuF+qvRvdjvVYxQP6MaNacU
LTekCvVXY0SPFlm2QrtJjdSzd7YsF/oXquHxNTvm3E6h/mrsePNspWavUH81
/KYmxysPCPVX46dmv1zJzhXqb6lXrDhAbxTqb5nfvt+uyz0h1F8NJ7v1PZNP
C/XXwKH4yMxxZ4T6a9C34sW1YaeE+mswx23lYp+jQv01GHZxnSxbmC97DRJy
Ys+ECuvPUQOZ+fptb8HOGvwyoPzpG+H53DVY9vd3r/tlCfXXQH7gkcgk5PPS
wPO+XfuQ3UL9Lc8Td/3MGcF+GrzOCr6RI6x/kQZth6yc/cgg1F8DXe3NRrOF
+RRr0DVvX8pdYb9JNDBxxvVVwv7kLXnsX8/qEifUX4OiDL85w2OE+mtwfaeT
jyJCqL8GIwsntViyRqi/BmF5B2p85wr11yDpdcZJJwj11+Cxslejg85C/S3P
e3DIhP3CeWTS4PyR5yW/9RTqr8Hzkj+lmR2F+lvmt+pO/qTGQv01uPP5bFXx
ZTovzRp8MTT6IXq9cP5rsOZhtymTgoXzX4OIDTlbpnkL578Ge9YWKx61F85/
LYK6bNl04Zrw+x8tvs2uGh2jIttqsUX+bU3PeLKdFtfnhV96uYtsr0VulE8v
3R2yoxaFXyvyn9eRnbV4sif+YYJwH7lrcW3m49zfIJz/Wuha6Nwd/IXzXwvN
oojFJjXZV4vonIoOqblkPy2ef+Mek3WHLNLi0L8ZjXp/IAdoYVjo+EZmI9Rf
iwn3xj3+LNwPEi0k5cGzhv3f+a+F95Gi7L/HC/XXos+CVnMfzxLqr0Wo01+S
zBVC/bWY+UoT+CxMqL8WB0KOn5ElCfW3zOeV2ohFWqH+WmQeapQxd5NQfy1i
f9g7zF9YnyYtZk1N3LtB2O+Flvlb4VFcI6z3Ii1uPU99eeL/9r8WtbtOp78R
bNai0/49xUeF/VCuRb3nrbWOwn6o1GJJ554bQoTzqk6L4+q947K2CPtfh/Pj
tl76W7h/muswunblC48UYf/rsOvl05O75ML+12HbvXnv28UL+1+Hxnnqiv3C
fDjqkO6yp6PbamH/63BO8qrlMeH+dNfhWlxknP90Yf/r0P2PSqfdwvx76bBc
7lqkdBP2vw6fngWYv3cU9r8ONa6aG8GdhP2vQ/lK1d57Qr0DdGiTf3ba7Xpa
D2Id7jvMXjfjOVmig1fagPctrpN5HR4uCPv26mGyRocmU1ydZqaR9TqIa6cM
ksWRM3To2mLbaJelZIMOzv47yz0mkLN08B4W8jC7t/D7eh0GjhvQ1acFOU+H
woSXSwa9Ed7/dKja4OLseVN4/7Pk3bA2LfVX4f1Phyndbg2xWyu8/+nwpCp1
8/1A4f1Ph5G9/lN624tcrkO08oC+dW9ypaV+rw6ZtzQm1+mwtSjGKbaM3n+5
FER/t3hLwWly8xQUzS6bnbRZ+P1vCjSH3q6+/DPZLgV1xZrc/V7nx/4/+9zV
Lg==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0., 1.1368683772161603`*^-13}, {0., 
       1.4210854715202004`*^-14}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.3}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -265.41666666666663}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
z2UPJOeJ8Ynz3CN6JDlfDHeLLte5U8jFYvTNqmv7bEtWiiFhVd99vJRcJsab
HlOvjvclV7S/P+nFxtdiyJViFOW6jVomIteJMdrEaPDqDLJKjBfFeyHLITeJ
seD5uR83/yG3itG/6fPLACWZJcFU1zPfjpeTNSXonjMtvKKarCtB7s/pZq8b
yHoSdB5RdnrM147fhyXw3Ws+zaOzB61/++s3+Iua+pFNJBi0q7G/7RiyuQT3
jhsnrgYZEvw+MCB8vzvZQYJsvtMbKzbZUYKcc2HixxvJbhLkL1nz18gjZC8J
pAUWOsevkQMk6Bs/rsi3nhwhwR2P8JzrnT1p/SWAjkLReziZK8Eclb8hfxZZ
KsEEu4m2MzzICglYhasO6SSQMyUYxbYefGgrOUuCov2XSjsVkfMkMNJxmjr0
Pjlfgi0Zw2ZyPpKLJdiYOr5bSQ/6vUcpQUnfOfM0R5DLJGAfttrWMpNcIYHE
pbZiihu5UoJtqwJ1aqLJdRIM2beo5/ANZJUE3/azei3JJTdJcPDzkQ1OJeRW
CWq3F/ThPiCzpGjsFvuI956sKcVN9zdNBl1X0/pLwX6feyn6L7KeFPtulTw5
OYVsKEVO85NtwxaQx0hhO0iXt96bbCKFtUHV27R4srkUgz6cXlu7kQwptg3X
rj2US3aQQnvSvh0W58iOUoz+nfeupoLsJsWpu8r7C+rJXlIUf52QeKeNHCDF
a/2BqvHd6fe1CCn8J47RjulDjpciL+dD8cWhHb+/SRF2M/69xiiyVIq5BVPf
GJiQFVIUBseatVqQM9t7zBrXh9mSs6TQShuwoGghOU+K/aOTJfYu5HwpOs/w
C7D3IhdLEaeIX2YbRFZKcWlo1bTL0eQyKVxdTt25kUyukCLbuHZNs4hc2f7+
3KtTfN9IrpNC78bo0793kFVSbPK9KnbNJTdJYTdR4DiqgNwqxZOpQ2tZZ8ks
GX49nVmpKiVrylA00ipd8xZZV4Y4/3PPRPfJejJoPpge615NNpThnWtbkHkd
eYwMk2Nv5zx+RTaRofyZz4xpKrK5DOHc3McJb8mQwWBl6r2id2QHGS7Hsd69
7LCjDAMDvvi0dLzeTQa27s6Ypx3/npcMqZU1k9j15AAZ9rRaBGzuuJ4IGd7O
dHTs1XG98TKscMiXX7zbsf4yTDPWsN50rWP9ZfjB/s86suP9UcjQukkw3OVY
x/rLYJs7dIjt7o71l6GiRm5sk9ax/jLkpzRnecV1rL8M//EOri3y7lh/GZrn
5Rl5ze9YfxlS9gz5nmzasf7t5t2b2WdQx/rLkPaJP338N/r7rpRBsKpfw4Cz
5Lp2O/wj/pFMVslwzz3OuXIGuUkGG4Nt3eNbOj7/MnhIu684eKLj8y8HnIfN
c/Lt+PzLsf6N9dPVA8i6cuj3qxwgukT3L73215tncO2CyYZyHDwo07XuTR4j
h65EZO10vOP+3/76rBPdEx067v9yKFJKi549pe8PyGHeNtLqWxjZQY6UwsBA
/s+O7385oh11XRIlHd//cngM+F1Totvx/S/HTcOY0m+ZtP8IkGNFoGDUeUNy
hBwPI/MN9uV17P/k2NBTx3Wsacf+T46fKzhtlWdovyiVw/8077iZPVkhB0ew
Vnj5Pu13M+X41eO2cpQvOUuOLQdsXVmtHft/OSJ1tPZ83tix/5fjsNmAdSkT
Ovb/cph9Mxjyqrzj93s5OnlP6t47hlzW/n6Y7nm5TZ9c0d57V3Lq8S16HqqU
w+JAycguKeQ6ObYbGRX5mpJVctQojIMFrzue/+TILnc667e74/lPjqZ6jk6B
S8fzXxoa7UbPPdav4/kvDbMbg8/3ekTPm7ppSP67ZePevWS9NAjbdvo/inSa
9f8AYUdJpg==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0., 1.1368683772161603`*^-13}, {0., 
       1.4210854715202004`*^-14}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.3}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -341.25}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}]}, {}},
  ImageSize->{
    UpTo[600], 
    UpTo[350]},
  PlotRange->{{0, 735.}, {-379.16666666666663`, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.826127852226667*^9, 3.826127958188397*^9}, 
   3.826128254803986*^9, 3.8261297300022593`*^9, 3.826292508631618*^9, {
   3.8262940342939043`*^9, 3.826294063439456*^9}, 3.82629478159324*^9, 
   3.826295054291328*^9, 3.826464010262512*^9, 3.826537740502599*^9},
 CellLabel->
  "Out[254]=",ExpressionUUID->"31e37146-910a-4e3b-805f-c25d41527805"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
    GeometricTransformationBox[InsetBox[
      StyleBox["\[FilledCircle]",
       StripOnInput->False,
       GraphicsBoxOptions->{DefaultBaseStyle->Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}], {0., 0.}], {{{1., 37.314278584892726`}}, {{2., 
     16.63849792249841}}, {{3., 88.21451407588528}}, {{4., 
     43.00029671217713}}, {{5., 6.179628912173005}}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Total Variance\"", TraditionalForm], None}, {
     FormBox["\"Neuron\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 88.21451407588528}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.826127852226667*^9, 3.826127958188397*^9}, 
   3.826128254803986*^9, 3.8261297300022593`*^9, 3.826292508631618*^9, {
   3.8262940342939043`*^9, 3.826294063439456*^9}, 3.82629478159324*^9, 
   3.826295054291328*^9, 3.826464010262512*^9, 3.826537740639945*^9},
 CellLabel->
  "Out[256]=",ExpressionUUID->"67011eca-76d8-4ace-b35f-b231aa493bb1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neural Variance per Subtask", "Subsection",
 CellChangeTimes->{{3.826127635167426*^9, 
  3.8261276575390797`*^9}},ExpressionUUID->"d03c7290-8569-4efd-9bcc-\
66101fc1844a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"max", " ", "=", " ", "0.25"}], ";"}]], "Input",
 CellChangeTimes->{{3.8257754916568947`*^9, 3.825775506665517*^9}, 
   3.8261274027598677`*^9},
 CellLabel->
  "In[258]:=",ExpressionUUID->"63a83ac8-cc27-46a5-81f4-ae67176adeda"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GraphicsColumn", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "bc1", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "ba1", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "bc2", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "ba2", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "bc3", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "ba3", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "bc4", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "ba4", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "bc5", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "ba5", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<B_Var_SubTask_Traces.eps\>\"", ",", "%"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ba1", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ba2", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ba3", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ba4", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ba5", "]"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "bc1", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "bc2", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "bc3", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "bc4", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "bc5", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Neuron\>\"", ",", "\"\<Subtask Variance\>\""}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[FilledCircle]", ",", "\[FilledUpTriangle]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<B_Var_SubTask_Values.eps\>\"", ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.825775362505275*^9, 3.825775410214694*^9}, {
   3.825775466945022*^9, 3.825775482333872*^9}, {3.825775541413045*^9, 
   3.8257755417388153`*^9}, {3.82612772111032*^9, 3.826127721315235*^9}, {
   3.826128002282077*^9, 3.826128003821196*^9}, {3.826128271014618*^9, 
   3.82612828043778*^9}, 3.8262940709520893`*^9, {3.826294687639162*^9, 
   3.82629473825415*^9}, {3.826295007494533*^9, 3.826295049081599*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"d16cabfa-523e-4dbe-9a6a-75ff1a93c30e"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
mn0aur0to/wlqDJuLk+LJjaVIHv+uKjLjf+9/xLYvB0vqlpKbCGB+71DbTqP
LKX8JVg37syCuKBiyl+CgLRV3/Nj6fsCCYbG18/+O7CI8pegaX6k3WPPvyl/
CSL7H+5huq6A8pcg7vbphuiWfMpfgvUNjy+YFB2l/CVY+H7us+iNeZS/BJ3N
S8vSfOj7FyXBoz7b6izG/UX5S+Awc3Mvkc1Byl+CKR4PD/1xcx/lL8Fh/l3f
mi57KH8Jzo102GvfTkP5SxDybELAhsotlL8EzaZNYqFhCuUvwYr3EaffDaT9
aKEEPo0hEaef0v5IK8EemfnKjPa0H6+QwNvwdcTOsXMpfwlSthv1y30/nvKX
4HRSvev4+t8ofwlyREdF2ZMNKX8JHroMXXHF4R2d9yQIXpVl8jWOzpOfJKhM
MSur7E3nV54UK+ZllYs25+nZSIrWBR+6mE/OovOgFJcu9gu0f0X9AFMpch46
DVdOof6CmRSl5qvSZ1dTf8JCipBVY33bFlL/wlKK3NShqVETiW2kMOrm4epV
TgwpviyfF2OjidKzkxR/3l07M1IgovO0FAt+cxC97ULXd5HCeXHv73d3EfOl
+D10s+zFU2IfKQYO2SbK7hVD520pKgamRS3uTRwlxYc7LYfTWhNzUrzYP/X8
yXKar5Sis+LW7AvhxCm69RhwZPOV/sQZUrgYGplnFdD9aaRo2FWXV+VBnCPF
+sdHfCLMiXN163N5/L/epsSFUlTvHp4xw4dYK4Vy97c9PqPo+hVSFHqsn1S5
l+6vWor8yo2q5d+p31MjxcTHc27f20f9nlopzDj++vvPKY863fXcun/vcE5G
+UvRFN5mY4KbivKXIlU7r5/V3vWUfyLm7akaesCV+jtGiRB83qDsa7uR8k/E
s2Vdem6I20L5J0JZnxPxtMc2yj8RxwdPbXurIz0vFong9pg0pObupPwTUZie
uovfbg/ln4jd87dnXVbvpfwTMSl/8MPtjvsp/0QYl7v0Ov77IcpfN39KPZLt
qb/jkoj2kQE306fS88pPxP0H7SdObaJ+j08iDGK7n51USv0eQSIa7WUR9enH
Kf9EVCzzeuUWRf0fLhELzk+Z0cHrBOWfiEvlNzbM9jhF+SfCesmm9wL/Eso/
Eed23mwpmkr9IY1uPb6+cbixuIzyT8TIMU7eR4KoX5SbiDrraI/D685Q/jqf
No21vY6cpfwTsexD8Zu31fQ+ViQi9VpGbNH785R/ImRX3Tu9/JX6SzWJqLpv
72g5upLyT8S6xj/d9s2+QPkngl/f0ine6yLlnwg/22XSyRLqR31KRPrXjwdv
Z1VR/jJkDM8Zn1t6mfKXwWLwp2+j/7lC+cuw+r6m1bBo6l+ZylA36nZtscFV
yl+GXlWrPx+QEVvIMKQ5/+WpNtcofxnehzw6fS6B2EYGv1RhxwONxNDVv9zf
/bo/9cOcdNefcU5x/x9iZ939LHm5fITzDcpfhk+TKwounybmy/BPndr72tj/
Uf4yiJa8KLPfSSyQYXfJysAgI+qvRclQvrGTzyQ/Yk53vaFpS+aeJVbKMM/A
o9OHbrcofxkMrn9qtFpNnCHD0V3JLR2ziTUy/GJsPjfwGXGODAPCJ5TmDqmh
/GWYHTTqj7i1xIUybPV8//SvXcRaGfo15SpP3SOukGG64nNuc7fblL8M9/ql
nBE7ENfIMKE8ZPxzH+JaGZ52KPp2XEJcJ8NjL9GTNunE9TJcf7lppsN24k8y
5PXJ3d9HQ8yTY4N/wctZO4mN5Oj4NGF+03/jJnJ8Tvim6Z1FbCpHVbtdBeN3
EJvJcdq83+OCDGILOWanNXQYlUxsKUf1ylmtu0YT28jRtVjVqnY5MXTj4x3W
C0cSO8lxzHHOyaONtB7OcgzYIvUMKSJ2kSMqOeeyaQQxX45Z7a/tih9L7CPH
3aaOf4leUR4COfa1lTxrvY84Sg5VFF4PWEnMyVFbVeX21JhYKcec6qmdRYf/
68fKcTlWM0dpT5whR2WGYnXJBXq+NHJMev4g484M4hw5Ri39pbW8lJ7PXDnG
Byz0mmJFXCiHZTWce+yl51srR/SDX0TDexNXyPG6w642L1Lo/aiW49unzf5r
DIlr5Igp5Ue3iqX3rVYO00lpvfxf0PtZJ8fB6a7L28wirtetT7rq+dGJ9D5/
ksO413nr95f+e/8VmCtY/CLFh74PRgpM8nR9vmkyfT9MFFh0xGCj5176vpgq
UDjoXZ/IZBo3U8AtMCDjWh5d30KB1RHDDq27S76WCpQowrqkD6D+tY0Crd9e
uB7S9xnlr8C+HZcDVwW+pfwVcDC9vxTcR8pfgeKPbbscL/xG+SvwxCB81Pqv
BrT/U+Bo1cP/7f5oRPs/Bb4Ee11oN92E9n8K9D7TuUvS7W60/9P5vG/naPmR
+smcAqO9Jh+OnU37KaXufgfkGoz0ov5BigL3PgzfJnOh/kiGAmuKx6Ekm/oJ
GgVO7h1a+tWP+sk5Ciyr7Jhqu5T6ybkKuLywXTL5yFja/ymQY799Zaot7ee0
ClgXveo9rT31HyoUWN55zCWF2STa/ymwoVhlI0+dQvs/BS6VpsftHkP9iVoF
Tpjdnd12tgPt/3TrITAe/WYj9ZvrFeh8QB4S35X6zZ8U8I4cPD27ivoZPCXy
nhrtHn+R9ptGSlTt6T54nor6zyZKZDzeM/bDooW0/1di6989zn+cvpj2/0pU
erUy7rt2Ke3/lXgkCqsakk/9Nksl3F8M5BVbUz/ORomRBZNcujeuov2/EqOk
JUGZMdSfdlKin8G4vvd+o/2wsxLKkjm+I/6l/p+LEiXBTh4lD6lfzVeideei
vZlG1K/2UeLYjnG1Fl5+lL8SRRH9y9q2oX5jlBLjxDd2935L/WtOV3/K4M9+
W6k/o1Si9taV0S8EtD9PUcLX6cXpEjH1NzN09VqpF6b+j/rXGiVMW5Y9UYmo
f52jxOvSq61eiuMofyWa+7mnnJFSf7VQiXsbu91tTqF+j1aJJbZmrrM+UH+2
Qrc+jlXvWk5Sf7daCbO9wY6rv1F/uEYJl+BTWXWXkyl/JfqUrvY2zE6l/JXo
nzkl6w+rjZS/EmeUvJNPnm2m/JX4/eITB/6KTMpfhZpu92NmD9lG+atgJRyQ
cj2e+ksmKtzNu7rDze5Pyl+FCpNpXsbJdP4xU+Fi029lntm7KH8VPq4q2jpy
VTblr0JGmGnroeocyl+FwSndQqY00nkLKrxO3SIanXaE8lch5OPobnvz6Pzm
rEJE0dS/7uyn856LCuYVXdoKttN5kK9C5WybBHUcnRd9VOjqt9fKZSadJwUq
+BUMr1nx7QTlr4J7Wf61mLRTlL8KmgOWBRONqL+lVMEpwc62myudX1NU2Nvj
nzKRI51vM1TwqFxUs6GcWKPC0ceJ+Z/H0fk4R4X5CwZ2CUgizlWhZYpv3cIq
4kIV2tc4bTBrRedtrQrWxr1WTrMgrlBh7MNFrRwnE1ercNhlbY/ONsQ1uuuf
fHY2aSBxrQrqmQVjw9oS16mwet1RE8+7VK9ehQae9xbjLcSfVDjo+HqGqQ0x
T43GXm4mIy+Tj5Eae70D/Ys9iU3UWHQnNfHYS1oPUzVupPbt1PsDrZeZGhV7
HxW++0znews1vJfy51/pSmypxvN+W9p3GkfrbaPGo9Jxa8/a/nf+V4Nru35V
9QjKx0mNmgFzR2vMKD9nNe48HTBwnT31J13UyJzDW9WUSXnz1ViWPeaNuut/
+avx7GBxcOGO45S/Gv+zMxyhGE0cpUZgT9fXw87R88OpMb9my87TK4mVauwO
NjFe94H6oylqWD/zSB6oJs5QwyL45e4zvYk1ajyOjhh1aTc9nzlqfOTiw8PN
iXPVsHW6eWBqJvUnCtVwnhN0xbIdsVaN6HNLW0oD6HmvUMNIwPM9VE39imo1
hDOSsvZYE9eocWb5bas/ZtD7Uqtbj2G9DBfbUD+jTg3ZuFeqDjMOU/5qvA62
Hm8QcYjyV8NnrY+L0xl6/3hJmN/G4/iUYcRGSRiZiu2GGuofmyThf8+fWTv/
RmyahBuvj5nnZu23+z8q2lH0
           "]]}}, {{}, {}}}, {{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
U1sT2xDbtfv/AJ8Oxa8=
           "]]}}, {{}, {}}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{1.7763568394002505`*^-15, 1.1368683772161603`*^-13}, {
       0., 0.}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.25}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -37.916666666666664}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
54SpZq46S/njkbNmToeC+tcpfzwmrn75XVv3R5Q/Hkc8ZdLBea8pfzyKe8T8
6HOj1lBb/nhculniiaKmNqfGQ6Hp1Xv5s442G+KRW/bDzBut+9tsjEfAqbZD
4wtG22yKR9uu+xSJKQE2m+Ox+PEEw4y8IJst8Yj/3Vzs2T7O5vJ4vNeaB/d7
ucJmIQHvWw7+071Pls1OCQiekRUtCTba7JyA3NJh70e9OW6zWwIcEq8fW3fg
D5uRgL238h6/1Dyw2ScBJ3o+eDR28hubJQk4uOmbTelXHGz/rxiagJPbXtc0
/9LSZjEBr7+72vba/i42pybgaNCBO5IFHjYbEtAm/93i4NOeNhsTsCftUmNX
l8k2mxJw+dSTIyMbzrTZnICJbZdun9V/gc2WBNz1DSlMDfje5vIEZP4S0+lS
Whj9P2ciWqUfa1+zKMpmp0SUp86esMQ1zmbnRIQ1u+ta7W6SzW6J6FFQXm/i
vzKbkYiUJkuPNVyjtNknEcK/XvI/h2hsliRi+YbpDTo/1FH+RFSv3XjEkKSV
lD8R+292eVDweRXlT0T/RveuORxMpfyJ8Gqtrr3bkkb5EzHy+9qXHtdaS/mt
ftT6eW/XdZQ/EW9OB7rmjF1P+RPhM/DxhGchGyh/IvJudxo3b1M65U9C2V63
S6PPZ1B+q9V3AkY5bKL8SfDbN8Jjq+9myp+ERhP6X4rdm0n5k+Bb5nyjok0W
5U9C0ZyVn7/eu5XyJ+H4htmrtvxooPxJ+N+diiPVM7dR/iTkxn38afC27ZQ/
CZYd/S5dN+2g/Em4c/rqglcfdlL+JBRrvb8dGZBD+a3zrT34zJDff6D8SQjM
crjaetkuyp+EtQV/rdzhuofyJ6FVxaueqJ1H+ZPh2zgi+3a1fZQ/Gd9NPxAe
qDdS/mTEtlN/VbFxP+VPRunR6mse5R6g/MkwNDpez8GYT/mTsSO7Rp/7uQWU
PxntH5/+Kj3lIOVPRm56U49W0w5R/mRsyyz5pkb1nyh/MqZMkic4qsiGZHhm
95Q7/Ek2JqOs69T762sUUv5ktHXXP9z6jtrNyfCfFRJ44CTZkox7r869qb+Y
XJ6Mi+au13a9oPEFEZLw5McvIskOIopWh7+d84rm6yTieM91zVdFkluImNDW
IebzS8rnLGJwruOnIhnZVcSpsvs52V3IbiLy1w24HfWSro+HiK2xk6dKbpEh
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
SpZqkRsdrvx7Jx0vanGx5KvnZZcpn1aLisyHi9rfp/ZULVb3uDu1Rh2qX4YW
M0M+vlI8rfw+p0WdqTff7nOj73O5Wgz5OPDXK0Ll9zot3K/m6z6YK+uvxYcQ
5eN2p8kmLbZcLJGN2Ucu1mLtmcQrCSlksxbVD9YNlP5DLtXi46F23YqH0fqy
WP29/OGwJvT9r0yL1iXZTQ9epPf7cuv1OjjQa0Fv+t5XoUXhzq2Z9dzpe5+g
Q3K1X6Pe/k520CGnxrVtqzrR7wUnHaJirzW1+JNb6LDTb/D59gFkZx2OZx9a
X/KC+rvqEC6USy5/ovHcdDidvbt9noy+P3rokF3qXeb2M80XOmye7b1i5yXK
463DNxVnI/93hPL66OBoPlY8VqB6TNNhuf+z+v1+q7z/dfhYrfvgqx3p90eQ
DkfNur/kTyqf/zpc39qoR62XtL9LdeiwI/3HuMu0P4s61P+4zLJqDu1XWh2q
m33fbXlNTtVZf6H+VL9zh8r9X4ebp7Jr9M+i54tBh4j0JhL3gbRf5eow7bqb
V4grrVejDoHzvTdtrU7ru1CH4Cd+itO/035l0mH/wndHd0TTeinWwelM4P45
W2g/Meswuu7wt7l7qZ6lOmTFSDr7r6fra9HhXmbfX2ZGUT3KdPAwOhWOXkjf
a8t1mBTcan3RpC1Ufx1cQro1/fEr+j4r6CGe+WmL52T6/eigR97Xg+fP+Yq+
zzrp0Xr958v+F8gt9Dj5z+3QDcn0vdZZjxMFaYE7e9DvUVc9Av5eWXD/GdlN
j1+NrY4FnqXvtx56zHi9u15yXjbVXw/3fk8b115Jv2+99chv3rDimwj6nuuj
R4vuJw4Nj8il+uuhNWXPRwJ935XoMeFMzg/Dgun3cpAe51uvnzfenb73huqh
kgY5uZwjS/VYOPlzzWsee6n+egztF3Pmo5ys1WPE4Yo7zfeTU63HLxm+SzhH
zrDm15YWeJaSDXp8Gh3U/ffb5FzrfLw8n+XfIRv12Dt4UGGGhVyox+amq9+2
quxv0sOrsWejmyfIxdbx+ks1qzaRzXq8bvqk+dDp5FI9lr055eL7jvJY9Eip
46vfFk8u06Pp/mrdUm/T9SjXo2JZesUtV3KFHrUkyfMNC+j6CSswp7txz8Ms
ur4OKxCzvfo/LR7Q9XdagZZ17j9tMILcYgWkimoHnY7kDPs/IwLPrQ==
           
           "]]}}, {{}, {}}}, {{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Lbzn5dN/0fgmJ2JFyM1Ij0NFpD8R8SGlkbPVxLpEbLVN3RHQn8rrE5HRM+bH
GUHkR3EiWnZv3+XsDWrfkAivgtcp2/4krk6E1dH2z5b1p/JcEjZbFFXlqC6Q
/iT8md4t5ofx3/1PwrxhVga/OzQ/XJIQcXJQxIUlf5D+JLiVHJiyPes46U/C
yAsdLH99VkD6k/A53dpTOpbmmzAJlYKKyb2T9aQ/CdFP5j8Ib/cX6U/C4cqC
Y1bPqX9tEm4OLNu8xf+7fmN5/uK3+0OJ9Um4HnH80pYSKl+chNC+XodKZNSe
IQkFZxf+8VfuGdKfBNeuLbvf+PkU6eex3mn86vUNfzexDY/c6U75K4cfovHg
IXJudTpsaJaJ7XjcLZbNO7dvB40Pjz4zL9/42W6DiZ15rJjR1/1AHzmNF4+M
Y0Vzsg+LTOzGI3NezXG7PNovwKPjuWXNy3fQfujFw9EjYk7sk1E0njyOzlR7
HSj6ycR+PNzm2e7c2bwtjS+P8pCqZjfn/mfaz4N42H3LKne78pDyDR6us7sZ
729/mTjaWD75Wc9+gyl/4Hk0qbxuvj+ovjPdr5N58MLn5vt+Go+0eu99PCR1
41k8SkTvzfmVjsfBnDr3ywJj/PF2foAH9afn8Wl7k6h2XXeauMj4vTZVJ6Qf
DlI+w2NvJz+nDxWnTVzKI2e022L+30uU3/Co/XvO6ZnnSk1cycM3NftqdOAj
ynd4vDjy6uaWo9UmruUxfjWihJUf6fwTQ1NyTbfjLzofbcRY272j7OnBZuS/
GPKHRZiQRONtJ0bB5WWZZ/bSeeggNuYjq1rNSXEk/8WY2LlxXvM+vch/Y9z/
+pe3zeh8dBPD7dq72SlXB5P/YjiW/Tvr05Zh5L8YMYVtLbs3ofzBW4zejr/H
5z+l/MhPjEa1bnOs+k4g/8XwDeg9Vd1sqomDjO332Xo0Z990Wm9iTNtkvTQ0
3dfE0WJc3LwtumM+5Te8GD8+NVgvfDfHxCox/lz8xnKCcAGtRzGsap610Tag
fClNjH/cVO0MzwJofYpx6EJaz6IbNJ+zxOj8KU+Wf4jOP50Yn22EHzseovOz
QIw27dc08Euj81Avhv8kYfAxEZ3vRWIM2rWm0WBfOh+Lxdi6P6e7VVOhiUvF
4B+/Tne9R2wQIz5YP6JtbqiJK8XYdnv54znz6DytFuOWbNidsKbhJq4VY5/H
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
I/+VmPzr/F4WVhSPVuK/37e11/ekOK9ESEKQzSdRMfmvRHDjpzWxkr/JfyW8
lr68ml51hfxXovLlH5qjBcRaJRr5L9x90Ooy+a+Ea/Kejd1A9zOdEn+fubpc
PYTiBUpsHndqyfj/KK5XQnxuId9xxkXyXwltjW/XHpVF5L8Sv91pPy4z+zz5
bxyPETXuY3sSG5TYd7hOvFKJrcUr79WUnSP/lUi6962D3R7iWiWcXVp/+suF
7sOcCg498i5rmlDcRoVHx1uZ47YqzAzIKM3JPkv+q5Bc+F+qxy5iBxUkW+f+
mtuf2FkFv/P7+H0pZ8h/Fe4fOi3wt6f3eDcV1k+VRERYURwq9PlnnvZpe4p7
qVBa8co6hD9F/quQ6TjfHPdT4WjRvPI9v54g/1VIeZgj2xJK5YNUKPGbb44L
VXD09ym1CyGOViHr9ujAFi1Okv8qxFf6dePeFpD/KjQ4YX12XuBx8l+FL33r
xNOM7XUbc/3YJPp7g1aFjJBZ64raUTxLhcrIOnGdCp1zFY+f9jlK/quwLGM8
5sXkk/8qnNw/1ly+yDh+T5amDJ2ZR/6rcLxnnfKlKrw8MlnjaUlxgwoDe9Qp
X6nCpUaLkhdOIK5WwbL3SovkLYfIfxXm92tYYTVER/6roQm7cWSZjt4bbNTw
0zlne9gT26qxs0md8nZqpDztI3hdmEv+q5EgdFe/2rOf/Ffj1bBhZnZRY/lO
33En0nLIfzWsL00IOtt9H/lv7K9j51aKXlnkvxqxFjPN5b3VyPlt15CHz+m9
xk+Nm9b5rz8W7iH/1bDafbyD5zqqH6RGPt/h2Q8rKS5Uo9vXDoXiU7+R/2pc
iRz85sllivNqZI0fWWw9aDf5b2R7e3P5ZDW2d9eJFdvpfSbN2J/7mdz56kzy
X41sh9Pyl5cpnmUcH9c65XUMF6gxuPkX4/rZRf6rkVH8v79/byf/1ZC+Wnz8
5OMd5L8ad6ceNNcvVeNe1vtpPo23kv9qVIyasnxb/23kvxrrXhaY26tWo8B+
ibm9WjUavX1nrs9pMHj7breTtfT3NhsN9rWu056tBvmiwXbxCWnkvwY1TvEP
/RtvJv816MY5tXH3oLizBkv967TnooHjT8WfLnRPJf81WDOsTn0w7KVBSLsR
covz9Pd/bw2uvHW7Ot1+E/nPsECDS1qH83MvbCT/jd9bOkASnkn1hRp0HfVB
+LEsmfxn2uc12NGra0L/IGKVBmO9j2dnh24g/zXwi6ndMivyV/JfA7s7Lub2
tRo0jHtnbj9Lg40bJhwuXE+/d9BpMDnvQ0PLfCX5r4Gb6706v1/QIGXSO3P7
RRrYFGwxvw8Wa7DkzVtz+6UaCGtSzL9fMGhwP++Tuf1Khqs12Br7wNxfrQYf
uY/m/rjViAyo83sIm9VIeNTN/HsX29XYv65O3M7M/wec+ia4
           "]]}}, {{}, {}}}},
      
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{1.7763568394002505`*^-15, 1.1368683772161603`*^-13}, {
       0., 0.}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.25}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -113.75}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
ACUSUpo=
           "]]}}, {{}, {}}}, {{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
XZr/5mWiWPXdyk9DT1P/mZDdxT2/ppvmxUWZeHx6X+G0zyep/0w8f92rOfEn
zZfLM7HPLmqa1Bjiykzckp94fpwZzaNrMmH4+XaTc0Q59Z+JoshKOx33Y9R/
Jqx6D81/11FK/Wdi7duTR/220Ly7NRPac7r2+i0/Qv1nQkPkPOydymHqPxPm
2n+dr/9SQv1n4qyRnvKOpzRPZ/Ehu0Q/ouv+AeqfD+gOl9v7P5q/K/LR5/tO
jtXxD/XPR8zor7oz5InV+ZjVKNNzZi7N77X5CP3ddD49aB/1z4fcjj32Jgdp
3m/Ch1rO+jphRxH1z8flS3/XOFkQ2/BhFLj5mqIe7Rc48KFU9spWsb2Q+ucP
fB81Xbbpwr/7C3xYu0+6uW77Tuqfj80Px9s282g/InKAh485VZa8nfrnQzdc
1z0wjfYv2HykvkpwDc3eRv3zMfWjxvo9/9B+Rx4f6fZae+yvbaH++di9N6pd
/ivtjxTxsWlTRfZGHeKSgfvVixsrAjdT/3zMePgkq7WM9lcqB9aPedgc83sj
9c/HUwXh2SBH4no+WjsvmtiW0/5MEx+Ovz5cMx5N3MKHW7iNavhv2s9p5UPP
/da9Ic82UP98cOVUGl810P5PJx8zuzk2F2uzqX8+Pv5anjinTkz9Z2HU3PV7
uHdo/0g2C0qzlb5JvRNS/1n4Magi2FyGWCULJuPcDiQZ0P6TehaeqvY5L/XM
ov6zYCP+GG+4nfarDLPwPN9o0a9HmdR/FjyKpM+e0iBGFnAs3iIikva7bLLg
Nh4aBldpP8whCy+7S0xjNIlds3DIKe68FJ9D/WdB45mZkUY77acFZkFH8fKd
7LXEkVlI2mAt0C7MoP6zkBj4YLlqLu3HsbPQdS+q30KcRv1n4ba4Z/n3v1Op
/ywoVOyRereL9vMKstAo3B5182Qy9Z+FzWWmo3fepf2/koH7ma8nzfmeSP0P
3K9jbscVdYgrs1ClohNU4UH7hzVZMJNu0CkrjKf+s9DXP6ffoI32G5uyoDxp
ve+fmcQtWShtMvM4kx5L/Q/8/NIY19kPab/yXRaGLvac3DiHuHMgT2ZK9fFt
tL/Zl4WPLY4yd1nELAEKZ+/csjU8ivoXIIE3/2PoC9ofVRSgynvCFBs3YhUB
JpReqeAeiaD+BYh6cEFVUEr7q9oDXNtkufxMGPUvgF66irLujVDqXwB56fzY
hNe0PwsB0qUcxx+TIbYRYJ9o0BrD2cHUvwDPM5I0+7xpf9dVgCNSP2eb7gik
/gUw/tRxw66F9oMDBRjl9ib0sRpxpADvQ6NCpIL8qX8BWlRMp146S/vJbAEe
FqUu/6hILBRgxwGnMkGoL/UvgN+P+Wf9G2k/ukCAba/kfIPm/rs/LYBXdueR
LXtp/7pEAG2zK4/klInLBTCv5J2+mOVF/QtwTfHV/AgWcY0AxUWX03al0354
vQD197eMD2cRNwmwNeWl6N5wD+pfAEHxoStlk2k/vVWAkgjnzL/M1lH/A68/
WBrp62n/vVOAgt+/LsUL1lL/Aoz5vqgh5jTt17OECFS2zMhpd6P+hVBT1hZr
6BIrClHfn5y+MoL2+1WEUFk5u/jN6dXUvxCD0/b3sqSJtYXQGj5I96jbv+cF
hLjmMCJn1Uln6l+IjVIpOllKxBBC+8W1jvlxdN7ARoiajj/Kp584Uv9C7E5U
aJxlS+wqxMLPHCOpC3RewVOI95pP3hbMIg4U4ovaOb+KI3S+IVKIj5FeUi46
xIlCdN0wdc054kD9C5GvmfaRN4tYKMThI0G/lePpvESeEMfrHb735i2n/oWw
tLvJPVVO5yuKhBg0/8ypmy321L8QdUGOys+kicuFMFp3I2yrqR31L4TPovL3
e2PovEaNEPaHN04bUrGU+hdi+8zR479+p/MdTULYuI1TOfsXcYsQH+ytGjO2
WVP/Qiw98MBkWTudD3k30I+z6fGdNsSdQjhO2tk6ruQv6l8Ic9uTQ1fKE7NE
GNzmu2tOPJ03kRWhsuSqZ3cbnUdRFKHaL8jE04lYRYRfNwvq4xosqX8RFhiw
P721ItYW4XjRKsOMWjrfYiiC5jC17XxLYhMR1n2LP6BZT+dhIIKXnu2uqJXE
NiLknCsqflW1kPoX4dOfu7/H/Y/O07iKoD7o8b56FrGnCOkrWx0bdM2pfxGO
lu54a7jOjPofeP/J1k4+W+l8TqIIzT/Mnpo1z6f+RSg5V9JrPZpYKIJUQkjL
Ug8635MnwsNF8ZE4YkL9izBdv6PCj0VcJAI740Si/mo6H1QiQlrvR5HcSWPq
X4QpV1a5tSsTV4qg8cexZ38SnS+qESHzYN28ypdzqH8RrDxzXV85EjeJYDc9
fItdHZ1PahHBvXTi0gOmxK0D91/gvJhfQeeZ3omwbcwUP/Yc4k4RlL2+fmg7
NYv6F+FWsN52BRNilhgm6y53lNXS+ShZMZQM8a18ObGiGJOkDV72n6bzVCpi
dBU7XKx+rE/9i5G/dsoLeTlibTG2rvoWaW+iR/2LwZMNc3gVSeezTMSQuz56
kX6pLvUvhhp3rWPSJzrPZSPGjwtr6qRnEzuIYefKT32VpkP9i/FhwQ3FcXf+
PQ8mhs6bBKHGNOJAMf7xNR1zPWM69S+GlkhgXvuEzpMliuEx5OO6oxbEbDEm
7hxjKXVwKvUvxtxNTTNyRhPnieFoZXlnJZfOpxWIEeiFsv5eOr9WJEZpe7JL
ZhhxiRgJHyxfGH/SpP7FGPLion1uMHGlGEmBwT4zPtB5uBox0r/eLNkQRVwv
hrNjXBL7O52faxIjuc90wVYBcYsYlxo+2e8ZS9wqRqJ5smaF02Tqf+B+Gl99
XZwyifoX46nLIwvNMjqf1yfGwdzUCOm2idR/Nhwv9laMUCOWzca+S5M91dzp
fJ9iNhSM/h4mPqhK/Wfj/sNJKuP7xpv9HxOCNvY=
           "]]}}, {{}, {}}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{1.7763568394002505`*^-15, 1.1368683772161603`*^-13}, {
       0., 0.}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.25}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -189.58333333333331}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
ef+uOu0+g/K+psWaTspVDQfR/WC1jbfx8danttP9Umabn5Lse6015HItDm68
87Akm/xGixeq0JpLS8mCDpnnDyZ4u9L5nHQ4t0Ox+XBPskQHr5ritXUeZFcd
tHXdfnl0gfpLdWh9yKtO5U+0Pjx0UE/7ZmHdjbR+PHVwqiIuzXtE681Hh+RJ
odm5cbQeocO10hstPq2m9eqvQ2rRy1mLfckyHS7Vmt9uTscv61+HB1UabG7T
48v616FeSdVik9eX9a9Du40bMpo4fVn/OrxYsGvob0raTxQ6SPr+/OCHmbT/
iDoMC3tcemjNWMpfh8ulNWo3SaD9LEMHuRCwPC6Y9uNMHW5Nj6id2WAE5a+D
cPXe9DqvhlH+Otzv3uewfxo5Rwdzgw5Lfh1LztMh7OOrpr69yBYdir+/PXvf
W3/K31b/D4Ou5IwhF+mQPyLtgTR/COWvQ7iXPrPjUfoeYtXh0MDj/WJ796X8
dfCr9L3bohtelL8OA19s851/qi3lr0OdF6N+6fCCvr8IekRviFp7ub8T5a/H
TGn2UnXCG/oepMcfz4ryXT6X2e2qR3nzYZXGO5fQ9yE9Tm6tG96vzzm7PfTI
fNC95xXZCfpepMfujr32nr70u90+euhz1vnM87lE34/0OBL/oa5f0N92++tR
R+LX5uieh/Q9SY+0zt/e7F+/3O4JelQuOzYrz+kFfV/S40WD6S98Ory3O0yP
Zl5rX7375Ez56+G+rGZ/nbIV5a/HvNIzC+r59qD89cgd3vZ68klQ/nq0VA1d
geWDKX892mzZNSjReSjlr4erbI5U9ge1m/VIMM1abJhBeWTr0X0U9DXQn/LX
I7DDi22yH/pR/npUu4t5TVv5Uf563Mg251rf9qb89fjmusuK/q28KX89Jrrt
if2zT3fKX49GtSVNxVedKX89TjRaMHZX9/aUv218dxoveKp2p/z18PvzyN5X
Xaj+N3q0Hm2p0bNzc8rfgNFV3Wbvq9OE8jdg05ymSedWuNH6N0CMqOy5Jpz6
uxqQtXN36tNdHrT+DXh2fVeO+6VOtP4N8O4V3DRhAY3P04Bz3k0enijtSOvf
gMCgLc8WTybDgE7vGpVeu0/H+xugmzb/p26XPWn9G6A/2uPGnJ3daP0bYLDe
v2d4QO1yAwIiD4/JatqV1r8Bj52bbC6UUXukAa5bNcdyj9F8KgxIT72wW9uJ
8hENuGR40cY9kNaXwYBbSe/+yA+k9ZdhgCIv8vZ51Zf8DWh28mTu6Cw63mzA
x/PFirYlwyl/A5xr3/v7Rj3aX3IM+G3o6C0F5i/PfwMKE2tKjn953lls/WPq
PKn55flVaEDT6j+Ff2hE7UUGrFp1S/PMl3zNgKnhNS6uv0fvq1YDlj0r7WXp
S98zywz4XDI5YOvAGMrfgJRdSfVmn6b34zcGHAk623fWB7JgxP4nm1Yf/JG+
nzkZMW7LlvCBu+j9W2LEzKz8x8ln6PuOqxFJa5Om7qhF32OkRrQ/HfJWk/Dl
/d+I0tyxxZ9uU7unEUfH3giWr6HfAz5GVPtDJfvjb/o9ACO2P+p6e2R/+p7k
b0SdXjUicJ9+D8iMuKI9Ymp2ncYzwYjBZzILxnvS7wG5Ed16z210eACNP8zW
f+eckl0P6HtupBF/fjr/4aMvzY/CiLz0Y43M+XMofyNeFAT8NFU+g/I3wmXA
ruPDn9HzLMOI2vsD3OqXUZ6ZRgT32tAk5SK9D5uNeHK7+6MBc+l+yDbiVMue
70Ka036SY8TZmVsTB1fuRfkbcfJE4FzvGXR/Woy43CQ2s0o6ff8uNGLC9lYz
y31bUv62fEb5/Xs/itbnNSPiqoUHD8hvSPkb0dP/zqB/1n1D+Rvx+vN/9doF
k8uN+NR9vfPrpQ0ofyNGtq9ZUPqhEeVvQqug4aO8w7+sfxM+xtX4Nfcn2h8k
JnQ+2SHx4iUaj6sJq9SLQvZta0P5m1DrXe+hkcdo/B4mNG55et6IhrS+PU3Y
dFVy/UpmF8rfBOV8yeG+7Wk9w4QHr6STOren55W/CfsDRt1tOpq+/8tM6Fmq
Dm23geZvggmBzT7e7ivpQ/mb8PSo94HzP31H+Zvg8eelE+/jaL+NNKH70l/d
3nem9a4wYXyK4eD0vQMofxMuHjkU0Nh7EOVvwoir51PE/C/7vwlOp48umj7x
y/o34Zh6hfulp7Q/mE3Qux6v2kf/Zf2b4PKxqleP5gGUvwk10p9vXbuP3h/y
TPDq8zxi3BD6/WQxwa9zg4j98+h9o9A2nzvSHj3oSr+fikw4tf/tym7PyddM
uDR4hfR5Dr2vWE2omfapk3E+/b4qM6Fb1Tm/Dm1J92u5CWVjDg6Ze5H8xoRK
LZc8UyTT+5CwCPmz3SKeNKf3JadFaK3f0EhzmCxZhMYjFsmbjKH3NddFSKgj
KAtuj+/3f9mShTk=
           "]]}}, {{}, {}}}, {{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxd2XlcTPv/B/BDF2VJZSnLdRM3SZRskdyXSxSXIq7sY09U077XmX0RChEq
U7bsRZJ9yJJs2YUywrVdZEuu7Tffx7z9Mh//eDwfn3PO57w+rzNn5pw6zw4Z
P68hx3FzTDjuf/8b/tX8wRn/gzFNGVswbs3YhnFHxraM7Rh3ZWzP2IGxI2Mn
xr0YuzDuzdiVcR/GfRn3Y9yf8QDGbowHMh7E2J3xYMYejIcw/oMxjM0z5oYy
44y5P5lxxtwwZpwxN5wZZ8x5MuOMuRHMOGNuJDPOmPNixhlz3sw4Y24UM86Y
G82MM+b+YsYZc2OYccbcWGacMefDjDPmfI0NxjxjLWNuHLM/Y56xljE3ntmf
Mc9Yy5jzY/ZnzDPWMuYmMPsz5hlrGXMTmf0Z84y1jLm/mf0Z84y1jLlJzP6M
ecZaxpw/sz9jnrGWMTeZ2Z8xz1jLmJvC7M+YZ6xlzE1l9mfMM9Yy5qYx+zPm
GWsZc9OZ/RnzjLWMuRnM/ox5xlrG3Exmf8Y8Yy1jTmBsW8ZgLGDMM9Yw1jLW
MeZmMfMzBmMBY56xhrGWsY4xN5uZnzEYCxjzjDWMtYx1jLk5zPyMwVjAmGes
YaxlrGPMzWXmZwzGAsY8Yw1jLWMdY24eMz9jMBYw5hlrGGsZ6xhz85n5GYOx
gDHPWMNYy1jHmFvAzM8YjAWMecYaxlrGOsZcADM/YzAWMOYZaxhrGesYcwuZ
+RmDsYAxz1jDWMtYx5gLxMW5upHi7YM8DPMzRiAyJnNNGhaONFjAmA/E2kiX
bX929DFYEwjXYZA1ODvOYC1jXSC4ETHpOdLxBnOLjG27yHh7LDI+voAxv8j4
fDSMtYuM8+gYc4uN18OWMRgLGPOMNYy1jHWMuSBmfsZgLGDMM9Yw1jLWMeaC
mfkZg7GAMc9Yw1gbzKx/sHE/XIixbUOM+wVjQYjx9cEz1oQYX09aZlzHmBMa
H9+Csa3Q+PxchMznQwhnn73KhjljDPYVQlF7pn5cIETBsWeN/39/IWNeiJFl
VvXzpTLWCNHYx7n+fPOF+Jw5/6d8jMuZ7XVC/LnjUUbujBkG1wiRLbysP78p
lD8UODx+6ZXfZ1P+UExJnlBv21AUPb9Vv71LKKqGva4/HkKN19M3FBke5XNP
jBZQfsbCUMwfa3tGdHQu5Q/Fd7/Uf064zaf8jDXM9vn68xXeTL36PYjyh2Kv
uXXLq1YBlD8U19Ls9esXQvlDcbCYd7ZatpDyh2LOYVn98bkwCG676c8/lPKH
Yakkb/PQP8MpfxiaTSrati2U7MJsjzDkDGrcLPBhNOUPQ+6TgfXjgjCIQtc8
7x4QRfnD0Cr/ZO2sWjKv395SHDP7YQLlD8P5ik0Dqv+Npfxh2Dchu37//DDo
OjeOnGUmovxhuCsoSwksT6T8+v2PRuivBzHlZ45fE4bXeSb1+3PhaLXKPvlx
MtkiHAWfwur3tw1HYFrn0n43pJQ/HE17uVrnhiopP7O9bzjCZ8r1662i/OEY
49GnfnthuPH58eEwbfTT9qnh2HCtd/32GmY8Pxwh37cNXP2LmvKH42zjn1we
DsHDxWEjMlMofzg+nsyrH68JxzfBDf31s5TyR+BC0dPFadtTKX8EAg//NG4b
YTyfSwQ+D+iuv76WU/4IPM68Vr+9bwRi/1pUP78gAuLP3eq3FzLH5yOQMfOg
/v5BTo1AXkPI715No/wRcCj6KU9+BGbe03n3P/kjfwR9Hmj/8ghsHHqo/ni6
CERF95+9pWoJ5Y8wXk8uEk823K8/nkUkdu3e8iptjZzyRxr36RIJD9efjEjs
1CzLCn34o/9IbHJqq/88Un+CSGyxbqydF0XXjzASYxyW12/PR6Kkr7/+fkNO
jTS+vjWRMKmsCfY8yVP+SHyblVf/+dDqj/dX7UFv5wjKH4mHW1/Vb6+LRMLS
DfXb10Ti1uRX9dtzUbh/N2mtWWEY5Y9iPv9RGFb40/YuUbB7kVy/PaJwLbJW
fz9fQPn1x1td9tP9Lwo3zUcFnPx9MeWPQsbwafX3Vz4K8yfu1K/3j/tflPH9
UhNl/H2UH8X8volCn3H+NzvHT6T8UfT9RPdrHeOaKOb3V7Tx/duCsW008/3H
GNHG34e+0cbfh4Jo4+8zIWM+2vj7KjXa+PtMwzg/GnO2PNB/Xml9tIzLGesY
1zDmYoxtEYPo3Hf1fdoydokxvl7A2JexIMb4/iiMQZbN+M72T+nzwcfg65vb
Ad3j6f6TGoPb3au+9Z64hvLHwMH3f/vnUv4YND3SJMq9TQHlj0G4TSuL17VH
Kb/eHb9nNl12ifLHwKZPj7cmPXWUPwZtV4pzu219Q/ljkT0rKnDniV+GGPLH
orLYqVDu085g21j033Vob6srvQx20Y/3Fvhc4f80GLGYvqCnrEPYRIN9Y5GD
LHO7VgEGC2IhT3mxo7Aq1mBhLAY3Gtn8Ua7aYD4Weess9kUOXGdwaixWKO49
Gbcvz2CN/vzQ9Wzi8CKD82Oxfu4MayvXEoO1sXCzbShunnPB4PJYXM9q2utY
1FWDdbHwaqYMLeh/w+CaWHxJPJm3PPimwVwcDhT1zdRGkS3i8KSF7sy9fNre
Ng5c7u7ZRxOvU/44BN9q2/eB1TXKH4chTluPtc+8QvnjEJFxampxz3LKH4d3
k/PNjmVcpPxxmOr14XV48/OUPw65b54NsDxaSvnjMO0/p2BJ3hnKH4cvX/9w
/6A9RfnjkLqp18OVDX7kj4PHpV4DJiaeoPxxGHxfN+HLEC3lj4PpxV87VCiO
Uf44rN+bkxHU6ijlj0enwd080xyPUP54nL54Z6LH48OUPx7bO+z46iqjcZd4
2Hl3mnLpOh0P8fg6/uTDa6dpfl/99u09D6ZUnqb88XjfLa7gTRr1I4zHN519
ZdoWWj8+HmVbngsvO9+j/PEYcb1yyaEbjyh/PCLyZwc0D3xN+eNx73GP9mUv
P1L+eDz593PnhiMbGv5uVx6Pm+EWrc9eb2awLh7mv+xyjm3SxuCaeMS/ul6X
Gv4b/Z0vAe79Un7z9+hmsEUCBC6lK/xeuhhsm4B2L/pntBniZrBLAj4LC9fZ
NRlqMBLwaE+C7EDQSIN9E9A/5Mb+C0t9DBYkYP7wu0m6CxMMFiZg0z7h1b8r
pxjMJ6BSHWw++MQsg1MTcG3qyLB9LwMM1iTArEFvryG1YQbnJ8Bu9fovK9on
G6xNgH1RyuEIbzXlT0BWz6OjBWnplD8BiZu6XtjNayh/AtrPCCsZP24r5U/E
Hh9L27mndlP+RGzk+Kethuyj/Ik4b9E4MdX0AOVPxIouRQVrpYcofyJOp8qm
Zi49SvkToZ67qEcfSy3lT8Sb5HmOKd1PUP5EDFSbJEzpeJLyJyJm1GPz4hpy
aiL+2Oy4MndtCeXXH2+zZ3qnxqcofyJe6pbt3DiUrE3Epjc5a2ctIpcnYt0/
PUXTUsi6RJhl1oYNVpNrEpGZYG3W15PMJeH1nk+O447TfBZJ6HHk7xmXu5Ft
k5DXcdfnKwV0fi5J6DjrxQ3rQDKSYP2746rtA8m+SXCri7rq8ZnyCpJw20q6
J17+I38ShrV9efnbIVofXj//hSMeJr2PU/4k9P6vIE+2+QjlT8KonNCK/Hm0
3vlJ2DH9UoM+R4spfxLMmzY8/CGb+ilPgl16pd2Iu0WUX388j+tbtg0j1yTh
5rheve/s20/5k+EYmjs315RskYzw7KbR41sXUv5kDAzY8US+bi/lT8YD9yeb
ls3Kp/zJmG7Vfyeubaf8yXjh/ja8wmMT5U/G9ebH+rZZnUn5k3G8RuNySLqS
8ifjL7exezun0/WbmozKuYMkK2eLKX8yPB1HD5OaxFH+ZDyd9qlJ3H36PGiT
cXDy+bQtnospfzLSFLLe+ZvnU/5klJ5TtijNnEf5k3Fzj2mH921pe47HgYnT
7vAR0Qab8pBNWHraZr+U1oPHorsD55n2TjPYhkf67p6lUW3X0frw+LSsk6XY
JddgBx4Z1bbljun0+XLhsfH9vt3mx3ca7Maj4uTZwBF7fqwfjxerUsa/30Pr
68UjaP532egFtP6+PKx6XBR/vEX9+PO4J0tYc/cD9Sngkdzo3vb5h6j/AB4n
bDwCa1zp+hDyKH5/vvHxYHIMj/svYlxmLCTzPPJ80p5esSIreZTsNT+yIYCO
l8pjmPyj03glzZfBwz/NMet1Lp2PhsdSX5sb/1yk883jYfclbfNvX+j+kc8j
YUBHxaJm5GIenbz9hp+uKKD+eJy13eNUMpvWo5RHh6dKN/eMXdSnfv1FS8oX
baXr67Z+vYoqLb5OzKN+eXgV1ZnOL95i8FMeZb27pAZu3Ex982g2qrvIuZKu
xzoeXU2yA/o5kDkRlvSIT/jVeyP1L4Lk3LV2gRz1aSFCjf0bq6zWdP+0EaH6
yX3Ziuof/YtwqaNXeNn6VdS/CH2Uvz7S7Uuh/kUoGSqxnjiCrmc3EcosLk/b
cjSS+hehm3jcnLvX6X7vJUIXkxZ9/qybSv2LMKXq0rl1lr7UvwjvXrmuTe0w
nPoXoUk/hyNn/IdQ/yJg2q7aFlYe1L8IOzZ0+VUZDOpfhPfnlcUh+4dR/yIk
y3YvGGRG319KEQ4N3jp3UpA39S9C5Yj+moHmo6h/EfY7zeq+TeZF/YuwZumA
4V52ntS/CNbnO/TXnqb58kXYeq9z5dtS+v4s1p/fhvR7n4b3pv5FUB749NHD
jL5/S0VY+7BRgcy8E/UvQnh6+wlr/m1F/YuQvXt8p3bq5tS/CClrh1j2X96E
+hfB3My5S+qZxtS/vr9Nmj5DVppS/yJ8S+n/tdEV+n3AifHcquLgneKW1L8Y
G+auFNk/sqT+xehpWeRgc5vmtxFj23/FzlYa+j1hK0ZJ1W8Lj7hYU/9ifD84
t7WP1Ib614/nrzk2eH076l8Mk5G+vV5Ft6f+xeg7re8D604dqH8xLvjPrCpd
QfYVwz/VPqjRHbK/GLX5Kuvbn8gCMXL3pppZfCQHiLHrWGZaxXWyUH98V5+q
MRnkGDE8Fja71tGTzIuRfHxw9fAqOh+l3uZJk+wWkFPFmDPe7tyqajr/DDFu
BSSNmzCerBFj3LO8FjEHKW+eGAOd2jm2a0fOF+PRqfzK1+G0PsVidBzwa3jb
srbUvxjDjve9ObATuVSMoFO3fDqH0vqWi7H2YERLSUlr6l+f1/2cIK4tWSeG
1827F/YFUj9PxSgd2GhkmtaK+hfjSPMXK9LbkevEiHog7MFFUr+cBOOCax+W
XbOg/iXIqju316M/2UICx1ayVWMH0vVhI8GT/X7HTc3NqX8J7Dzfbkl8Ttej
gwR5u0Ird5bT9eUigdPpXfnHjzWl/iUoPZjT5Np+M+pfAs/Atakti+j69JKg
S0lP7z3H6Hr2lWBS3F/y5uV0PftLEP6to8DieSPqX4LTwduK05qTAySYd3L8
ga4DfqH+9ec/VWTWLNCE+peg+q7L9pxN9HuZl0A6vPB8wT8NqH8JpmXuXhbm
Qk6VwC9ufWW2iKP+Jajqt/jOrr3f6fe5BBHCnbH2wm8G50mwsfLF3OWDvtLv
dQlCZmg6XbP8YnCxBCkX7as17/+j3+8SVCxY6Vbx8JPBpRIsELtbOlbV0fOM
BGELZrytq6bf+7cl4FYVvuv+tpaebyQYmv6lR1Yz8lMJTMLbTpL3+kDPOxI4
rPHZ83zKe4PrJHi3IHdBzvJ39PwjxeayLSNNL7412FSKIOeyB2FWZAspLm2I
jzw6843BNlK8FG9pN7mwhp6PpMjSxW0dbUF20DtvrbfH41f0vCRF34Kgu2+K
XhrsJoXlW8fqL+n/0vOTFF6aq7Nd+BcGe0kxSyte1TnqOT1PSWGz8GxXr+hn
BvtLMdNGdKlW/JSer6TQBpWcOrzmicEBUuQstjbRFf1Dz1tSXH9jGnS96rHB
MVL8kdPwnn9LMi+FX9sS61te9LyllGLfX8/+dVY9pOcxKXYPOpXlfbXa4Az9
+cbcmHfCjqyRwtzSo3VF7APqX4rErHGhQ27pqH8pjpW+WhUxmFwsxca3i80L
x9yn/qVY69q9XYBTFfUvRTV3V+bUrpL6lyK2Xefkxhb0fHhbik4LR4c0srhL
/Uuxa92Fo5Yd71D/UoSf++3RFJcK6l8K7ya1rzuMvU39S1HQNCzSMuIW9S+D
35CC6i+59PxvKoP/s1kbL1XQ87+FDNXxDa6EWpNtZFj5/b2n3Qx6H2Arw9Dy
VgmabfQ86yDDIbz4+8MXev/goj+eSnK6zySymwzN2mTnNiim9wWQodU7h9i3
HcleMgSMNwkJUNL7A18ZWvYa+m3++8vUv/585uQMK9Zdov5lmP62Mu/hLXq/
ECDDladLRHzFj+dtGX5/8c79bDW9b4iRoUPzFS97fSij/mWwst5w5JkFWSlD
wYXJKRf7nqP+ZVjiWdpizUx6P5EhQyermId+K85S/zJMO77y8pGL9L4iT4ZV
/YZFvmpJzpfhRt9zk10n0fuAYhkq1q3z7bqF3mdoZZBmuPVr+pneZ5TKkKfJ
LJo8iVwug/J9sK/uwEnqX4ajv3pdNe9E1slwq1+zwWdU9P7hqQz7u/63esAn
ev9RI8OHsZb7M4LJdTLY/mIy4vWV49S/HEHv3z4o/vE+w1SOdtv7+D+/Te9H
LOTgIv9JkT+h9x82cuSNijn+6duP9yNydDi+6ZOnLdlBjqevrzgu8zxE/cth
fvR6gmXEQepfjpESu21ttxVT/3LYRxZUtH58gPqXY3nomwkjupN95ciQLJAM
CKX3X/5yvJwweGr18f3UvxxdNJOS0tuQA+SYc+z7fb/QQupfjq0hxcfKLu+j
/uXoc8d/3pm+ZF6O/jdy4pZl76X+5dj4od/6j+bkVP38ew56jxUXUP9y5EYl
R178lE/9y7HfXtXRMZqcJ8e1SfE3E9/uof7lmLyz31iXz7upfzlOj/dZ3tmc
rNWPN3s2S9ptF/UvxxjX7MBS753UvxxNAt4NcwjZQf3r9x+sezA4azv1L8e7
QdPNrK9to/7lONh8caW4JblGDlNhzMiT4+h9Yp0cbvPhXr1uK/WvwIZHGbd6
/rOF+ldAeOymW8kgsoUCJS9NT+xP30z9K/D0QNvpru82Uf8KOF5/XHnRj+yg
QOY36YxpRzZS/wr0O68b2s2R7KZA0OkxS33X5FL/Cngtr1o6yYLspUBWl0Vl
Eeoc6l9/Ps6NX0lNyf4KbE8rVpsoNdS/Ai3O7t5b3JIcoMC4Nv0P1rpsoP4V
mF74X3awdzb1r4C6yQmvzQFZ1L8Cn96LZg1anUn9KxDQv1v2o2PrqX8F/m3d
+X7cR3o/m6HAvccX9hW5kjUKfLxRvDsobC31r1+f58UzXhzKoP4V6PN1+t7n
v5CLFXirVGptJqyh/hVIklYtGZG3mvpXYKnplKVuZuRyBdoIX38dvCCd+ldg
0ampzrVlq6h/BbpsE/x60o38VIHiizH2EzatpP4V4P422XLamlyngFl2sOXn
JSuofyX+G9tlg3cTsqkS7XKeeI+TpVH/SqSa9x3r2Yhso4TI/Yp41fJU6l+J
gWOvOc5pT3ZQwmHxhUueXsupfyWeFG1PlAQto/6V8NnxTd1p9VLqXwnNjQkF
v51Kof6VWPV9X4dRH5dQ/0qoH7s55vQg+yuxV5PduNsien8uUML5yNitL/er
qH8lGvQsOxJep6T+lXgWG1v1YTQ5Rgk/h2+RZZkK6l+JX3K6voyplVP/StTJ
Okxv4k9O1fuPpIGH98mofyUsPlUVTbIja5R4NaB9yDyVlPpX6n/PpGhcPkuo
fyW8J9v89UBILlYiKf7hHOsnYupfCUuhT+ccAblUie+S2y8cHoiofyUGReel
uM4l31biUP+kTd1f8tS/EibBTmuDoslPlejZZ9EhIUeuUeJh1zmv3e2TqX/9
fPLsAxt9k6h/Fa4scF6YmJhI/aswu7zvwq77E6h/FcR7Hyp3PI+n/lWwPHVm
8cZeZFsV/HLPvZm9OI76V2HizG+XGh+mv3e4qNBideyN3g3IbiooKkOifPxj
qH8Vms5P3xe9M5r6V6HLhsIXfZqSfVUY3P5m87WBUdS/CtPHFoXtuRxJ/atw
ImCO/fGB5AAVJDPurN2UF0H9q7DYt3xCYHtyjAr3HhV/vJQeTv2rkCl5rjZv
SVaq8HBI6+mjpGHUvwp20zf3jvyFnKGCU0DQ9CfLQ6l/FW6XfIkZ2Yqcp4JV
8sj82VlC6l8FZ/NjWYFO5GIVtFZRq8GHUP8q1KV1dvbIDqb+9euz5tBBs6tB
1L8KuTe+/hnJkW+r4J76YX+nUYupf73HtL2yVbyI+ldh2oOabU8vBlL/KiT+
mZ4w7FdynQorPeVTHOYtpP7VaOh1uE30Afp7lakaj2YMOlHdgmyhhr3b0AtT
hAuofzX6HRVU9Dw/n/pXY5n9wsLRfckOavw30OPFgg3zqH81Kp03b601I7up
4T4yt9P5hLnUvxrhG5snD6+bQ/2rsVXauO3JALKvGtMH7CyXvpxN/asRcH/d
sFPTyAK9A8Narfx3FvWvRuKAfrkNQ8hCNVrH3Ti5/LOA+lfjgGBwyXo1mVcj
Vp6i829HVqoRcye/hfWkmdS/Go3Cokb1TplB/avx+5U7LWOLp1P/aoQcfs+5
PplG/auxPuyvhNW9yflqRFSccE+LmEr9q9Fg9+6O7oVTqH/98dt0vdfv42Tq
X59n8VLFWz9yuX79cjYt3LDZn/pXQ9e4cLZTA7JOn7fbrveFwZOofzXW7B8T
fVn7N/WvRqmD9QgTV3KdGk7zMn+rSqe/V3JLsH32pxTPLxOo/yWY82JA3PYY
ssUSfPQrWdnxox/1vwTDfYbFfYj2G/J/K+kUvg==
           "]]}}, {{}, {}}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{1.7763568394002505`*^-15, 1.1368683772161603`*^-13}, {
       0., 0.}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.25}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -265.41666666666663}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxd2XdYjf//B/Ajq7KysyMfsvt+rOwnooxIkbIK0dZpn/Z99kiJjMg4ISJR
QoU4mRURGRlR4lNWsinjd37XeXW5vPvH9XCf+37dz/frHu/7vvuu8rVbo8fj
8VY35fH+/1/dX90U3t9/+Jv6jI0Yd2JszLgnYxPG/Rj3ZzyAsRnjwYyHMh7O
2Jzx/xj/y3gk41GMRzMew3gsYwvG4xiPZzyB8UTGkxhPZjyFMf42x5g3lVnO
mDeNWc6YN51ZzphnySxnzJvBLGfMm8ksZ8yzYpYz5lkzyxnzZjHLGfNmM8sZ
8+Ywyxnz5jLLGfNsmOWMefOY5Yx585nljHm2fxuMOcYaxrwFzPqMOcYaxjw7
Zn3GHGMNY549sz5jjrGGMW8hsz5jjrGGMW8Rsz5jjrGGMc+BWZ8xx1jDmLeY
WZ8xx1jDmOfIrM+YY6xhzHNi1mfMMdYw5i1h1mfMMdYw5i1l1mfMMdYw5i1j
1mfMMdYw5i1n1mfMMdYw5q1g1mfMMdYw5jkz6zPmGGsY81z+tgljMHZhzDFW
M9YwrnBBohOvpd4Jq0m6/1jJ1GcMxi6MuZUodq2wEh0er9uemlmuYVzBmLeK
qc8YqyD/cuXP9l1Wwaqow6FpPefrzDG/VzPWMK5gzFvN1GcMxi6MOcZqxhrG
Fav/Hi+eK7YHmf/JY+KKf6dD2uTqAp3hCt5MwZZkiR3lZ8wxv1cz1jCuYOrx
1jD1GYOxC2OOsXoNU59xBWPe2r9tsvbvfGDswphj1lcz1jCuWMvkd2PyM4bb
3+eLC2POjTn+GWvcMGL+cYVesg3Vd0PmuZct/px/7n/bxP3v4xuMXdzRYv6I
P3k4xmp3NOxc+2d8NIwrmN/zPDAt7Xni3hUrqL4HcMYu9tY/q6g+YxcPLIle
+MccY7UHnkx/92d7Gg+ccmvQ5nOj+h5InFTimj/Hhep7Yu2iI7Ubt62l+lrP
M7kizHOl+p5IdFk/okOcB9X3xG/7+P/yLej3nCf114/qe6LYOiNl6rQAqu9J
/fSl+p44PlO23eCEP9X3wrW8QO34kE284NV50p/twQux9omvBrkHU30vjPyZ
c+iQH22f84Jb4eX1niWRVN8L8k2j0g/Piab6jCu8YPxJL2ilgZDqe8P09KU/
65t4I/O7v3Z/RFTfG3cfbqwJspVRfW/YTBrZda+fgup7o3rP01ljLqiovjf0
m8u046Wk+t54sbM0/vbvWKrvjYaxg7TjsYHq++BMQp/I/7lvpPo+OBoA2aPb
ZPhghu1pbd4Equ+DdXs3VCdZbqX6PnD3y8f6xTuovg8W/RxtHBGZSPV90Obw
YckOv11U3we9zi81ffiblvPW4ViC1fE3sj1Ufx1Otjsnrb2eTPXXwUs1/vDW
kH1Ufx12jpvwx9w6KD4taDg15CDVX4eCvXPv+KxOofrrMDBguMuHK2lUfx3y
rENsp7Qj83xRdbJrzQz/DKrvi5J+pWuDVpPhC3Fmk6EL12dRfV9039NqxLNj
ZM4X/J973pRHn6L6vpjlYcrpuWZTfV+kXLtyTH9jLtX3Ra/hvQvtck9TfT7s
WwYE1med1dmIjz1e9an7IzS0P3y07SIKDGyar7M5H4+nD9gfZn6R9o8PM2/p
l1ktL+lsy8elHjkfS29fof3lw+NIuenV5oU68/m4JeriZbGEzPHRdMLPdG/3
6zrH8xF87/6pqWdvUh4+Ih0rE+PH3NI5g48aD3/zXrNvUz4+eryzz1xfVKpz
CR/XPgx361Z0h/Ly0btrxOi9y8t0ruNjzJ4e+6p+kHl+8N0+5lfDsUeU3w+Z
J4vjeteUU34/zNPcXJO0uILy+6Fhx9cdhobPKL8fcj85vH1QQbb1Q6plzayP
L59Tfj8c2PbuYJtZ/1F+P1S/kpamzayh/H54PupqK9+yV5TfD2+rO0Vt7P+W
8vvBydcys0P4O8rvh8Ies5bLW7+n/H7Y/Oi+47l5Hyi/HwraXTlwye0T5fdD
r8wbHqubfKH8fshfHXa79vFXyu+P2nSnF2dG1FN+f2ydeHZY8JoflN8fu31c
P64Y85vy+6NiesDela95k3X5/VF4bsUA5w16Otv642jax0V7eM10dvFHtWHS
u5Tq5jrz/TFyctspAR30deb8kViYoSqvNNA5Xmueq2mJoLXOan/oCTwO9/3R
VucMf6if/hbm3jDSWaPd3xc/pxZZdtC5xB/8j8k3tuh30rnCH7fi7Ssyyzrr
XOePDu+DmnrWdNWZF4DLcd13XDborrNRAL65jbiYYtVTZ5MAbLdy+2Lwo7fO
5gFYtGLIpKnD+1L+ADSrD5onzOpH+QNQ2v5gViv//pQ/AAmTsyLmzhxA+QOw
YFKrhapwM8ofgDa7uMW+BwZTfq1Pr0rasWoY5Q9AQFUtNvU2p/wBmPJ1ZEXO
rv9R/gDkGm6xCF4xkvIHoNv5BL2u/46m/AG4Xxuzq+fysZQ/AEtPnw4Jix9H
+QOROeDk5pqGCZQ/EDNm1PM1elMofyAeTcwadElvKuUPxPqr7he2nZtG+QMR
0HHxt0eplpQ/EBbCmZ+bnZ9J+QNhzJtzyOi3NeUPhNWGZuUrc+dQ/kD8ysvd
+Vk+j/IH4tmiouujntlS/kCcaH5haP0pO8ofiF3dxuT+u2Mh5Q9Erw0Dd/R/
5kD5A/F10LvUDw5OlD8QWcbqlA09l1H+QLQUHTvxcaQz5Q+Cp0fXr9MdVlL+
IIwNbFI3dfpqyh+EtBcdX55ft4byB+Gp97ezT5+7Uf4glOz6vTRknyflD4Lg
5Kvzq1N9KH8Q+C1d07pu5lP+IHDiGad4Cn/KH4Ti4FWmBZcCKX8Q9v+nGGU9
OYTyB6HXtif9E4zDKL92++kpn77OjKT8QSjoNrhlWgBH+YOwoO5nlotMRPmD
oI4ac3NEhYTyB6H5+UrrKIWc8gfjw+Mb20u3qih/MNKTzhV37BhH+YORukQa
ubD5RsofrL3/tHxUNjuB8gfDcElH8fkXWyi/dnnlj6RZzxIpfzBOFc+u7jF/
J+UPxtET782O9FNT/mDsztoeXeW6l/IHw9LGeNneFimUPxiJJbfv9G6VSvmD
EVsVevZVbBrlD8b2TVt8nHcfo/zBmGbZrOn7gccpfzDyeLMy4ypPUP5gmGa0
0V9pkEP5QxDq2P9Z5zNnKH8IDNMPdXqqp6H8Ieg3YWH2CskFyh+Cnw6uK1/6
Xqb8ITh+YXvetgcFlD8E26dV3Vt+7zrlD4HxA178jPwSyh+CGCf0D4gupfwh
CNjT7HDuyXuUPwQ26kn7G8IfUv4QWH35fTD05RPKH4LfT6fPuNjuGeUPQfcF
9/MTTF5Qfq1T9OJ+n66h/CF4cLUhpKT+DeUPQdPWNg+P/6yj/AK42mgSOtZ9
pPwC/EhtNqzQ4yvlF6DTs8Ubt4gaKL8AjrbWnf43hKf7TgAB0t1eB71t2lRn
WwEWFiqfqFe00NlFgBH/5NrE2RnqzBcgs+Wk9pvq2+rMCbDvXhPTkRM66Bwv
QFZo8onzgZ11Vmu9qei765RuOmcI0NrVwPxtVi+dNQJc58eazgvpq3OJAE5P
Vr0tl/fXuUKAX1f8+mzqbaZznQBLBQ6rq22H0neOUBRNb5mVmWSus1EoQj8O
tCsLHqmzSSh6Th84L6BwjM7moSjNSM5YlDKe8oeiYd0Amym9p1D+UPROvXPw
ff9plD8US6abLJ1qMoPyhyLue0OMc5w15Q9F2UPnPZmRcyl/KPz6n25aGWVL
+UPxUOPsHdPOnvKHIiY1qPrU90WUPxQZbb2KXGY6Uf5QGH/tWpv2axnlD0Vr
/R1j2m51ofyhSFjoHX7i9SrKH4YSzp9Lkqyh/GHwavW7RuHqTvnDoA5wfBIe
50X5w7Ah9cv07Ga+lD8MlZ9vfTNw9aP8YTjXtb6rgXcA5Q9D2dvni0ZtD6L8
YWjS8vhHvAyh/GHoVT594m3HMMofhoU/TJ36VEVQ/jD41nQTNxdFU/4wmMyy
2fiui5Dyh6Ho8iHvO+tElD8MgcXeJhsuiim/dnmd6PbidlLKH4ZFo41ftpsr
o/zh0FtWvsUmQE75w3GwOlJ9IkpB+cOhrkT/ju5Kyh8OU4OU2oeDVJQ/HAFf
guK6nSfbhiOpfeezHfrHUP5wZJ2U9x7tQOaHo+zljo9WC8lcOBKS5htt6k2O
D4fg2ASvvFO0PXU4Fly/u6q8DzkjHL9npv8zeAXtjyYc/2vqVFIcTPtbEo6t
JdtrT/tSnopw7Czt1s5uPuWtC8dEvdZV3XrSePAi0FcZfDPwMY2XUQT2cS13
qrbSeJpEoOrzi1e/59N4m0fA3WLrwSdtOMofgQUX19Q3ORRJ+SPguerkrrbz
wyl/BGYMGDb1UsdQyh+BCRfWnlnXEEz5I3A9rJk/z4COj/gI3Oz/eVnlJDp+
1BGojKuM+7ydjq+MCEi/fq7L68Gn/BH4eEqwaYLQh/JH4O3es3OvGdLxWhGB
KR47D5wvpuO5LgIu98dPTLm0lvJHQmHzYYbxa1fKHwnD6h5ltpNWU/5IlBiu
t56XvZLyR6JXG29F0UI6nxCJm6PrWlT3XUH5I9H83hzrX8VLKX8k7kTnhklS
6PzkR2JkTIzji+TFlD8S+565vlSdo/M5PhIJcW9dxn+j810dCdN67kpHGzvK
H4nOr+/aCM/Q9UETiXc878c3JPMofyRMnPKPcflzKH8kWjRdbM4fMovyR2Ju
kOVg5/yZlD8Kex9sOikWWVL+KDy86W3lu46uXyZRmOhQwX8uAeWPgurCzoHt
YyZR/ihkdRqZ6OFM10PbKHx8c99NKBlL+aOw+pPF2cdfRlH+KJSN+2H1IvNf
yh+Fat+Ypz0z6PobHwXR+fBLR+4No/za/fl92WPW6cGUPwq2Rh6alb8GUv4o
JI71NG2+7R/KH4UnaW06BIWaUv4o7E5Tdp27k+4PdVGoijoj7/yuD+WPxluN
wrtcn+4nRtGQn+pVOj+sO+WPRse+a10XjDOm/NEYdWvruZSJXSh/NMpuFInz
wztR/mgc2ZAr3lhL9zOXaBQManibFNue8kfjqvW2aX3sjCh/NPT+Ne1/ypvu
h/HRcHMWz1rj1ZryR2Pk7dQFXtvp/pkRjfvVLWM+vNen/NHYmfMo7opfS8of
jRa261NCutD9tyIaa4bPtjpa3ozyR8M/Z27JtUt0v+ZxyLbbrlxWoKezPgeD
qT3frX3ehMaDg+VmI881ncjGHAYY9ymKs6f7vwmH2ME/uvhN+K2bH5hxePF4
zvnQpz9pvsDBO3fRsY8bfuhswUG899Bcr7k0nwCHzCmKsTVd6nW25jAy6+6V
0g/faD7F4Xv58IWuVTQfceSQX2lauePVF5pfcRAY3nljo09251DhavbkxrjP
NN/ikDjsiltS2CedBRwswvbt7HuZ5jsch3pFjwEbO5IVHByfn/zUd+UHmo9x
uLSy2LdL2nudEzn0LwoIHPae5k9qDumagJyU0eRUDm8PjStu8r2W5msctlcO
ttu5+a3OOdrfH1lbFTOD5mMabd5mR3cMafda5wIO3WU+xqHvXtJ8jkPzbcN7
Bj2l+VwZh7aOTpV6d6tpfsfBzDBjVdbl/3Su4bBo/uMZeYdoPlinHR9e6+xx
Uc91/sZhnPvg1lNnVtH8T4jPDqpLCw1pPqkvxLazFklm9ypoPijEmOSyJ86e
T3U2FiLFUt2wdkU5zQ+FGKo3Prb/+kfUfyEs+rU+k/fqAfVfiAf+ZW8nupVR
/4Vo8/HlYd5Lmu9CiF8byqwXLr5L/RciMmNZc4s9ND+2FeLtycGCtJxb1H9t
vbzt5dn2N6n/QiRNPpLzvM016r8Qp+1P/Dfs0RXqvxBIbth3pp7m7wIhdvsk
j0nEeeq/EOmj0wrX38ml/gtxJCzI1U5zkvovxMNbXodv1NLzRKIQI3896eoz
OpP6L8T5xOe3R6zMoP4Lsa81v4f9FHKGELHWm6td9pJzhOjbp7vguCutrxHi
6dQLnIMHbb9ACN83QeMUSVnUfyFyEx5sKHtDzy9lQmRFyibftz9F/dfmMfu9
dkNRNvVfiISYlleTbChPnRDT/cPnGD86Tf0Xot/zyUOn+p2l/otQHDfjYPc2
56j/Woe4RH8+RONjJEKLjF9VSKbnIWMRLu7e/GKARz71X4T4GMtvu4bQ+JqJ
EFurKd5X0/i8JMItj6TsV+qL1H8RyjNWz/NbdIn6L8KL3c1+zW5Jz1PWIuzf
Et7FKZtsK4KxJi75yhrqp6N2/47tGahuf5X6L0KOx2vPpzlkdxGafE397eRE
z2N8EWZ9Tl514z1ZIEJkixHLRaJC6r8IPx94+P5oXUT9F6GXT8zH2QnkeBGa
DrmTlNCVjq9EETbejVLvSyKrRXhX63xDbULPe6kiSHPWWKsOkDNE4A26nHli
SDH1X4TVv/Q+ZB4ha0So6fpZcLf/Deq/COlDL909tYFcIsLWOfPjdr8il4mQ
eqjH+8ej6PivEOF/j3ZfNfYl14igdrB7Ld5BrhPB6thNw4U55G8izD7n3zuk
kMwTI+e/o7eP3CDri3Gwdk9pcAHZSIyfGXezR2WTjcV487Zi16gksokYqzce
2ZcWSDYTw69dWsLV6WRzMYJ7BWzK1idbiPHIbM3W5IuUB9rfTx68+lgg2VqM
e0Mc7rbtSbYVY1LyEZe6XBovRzFm5y61i5lHdhGjdK9NRo+HNN7uYnxynl//
axmZL4bV6Raa5PvUL4H29zcy3+fPJnNinH9QusQvu7H/2vE4GT8toU9j/8Uw
frXZdaaMjpdEMeava997Rx0dT2oxthRlCqeuJaeKYRfl08ngAx2PGWLUnjla
6JFMzhEj71K96TMRWSNGkGrKkKX7yAViPJbcahC2ou2ViNH2iEUXg3PkMm1/
Or9d/voU7U+FGJXl70vmvab9rdGOp9HznwNmU/46MVK8koZ3zqPx+qbNd6Kq
3HVwY/8lyF6Zq1c4gd5P6EtgNRHX7a+QjSTYvDBP1XwoXX+NJRg00vCXngfZ
RAL3vJicydFkMwkujm1/+04Q2VyC9B2fah84kC0kSKz6lvW4cXuQINj//v8u
88jWEtSEjZzvWkb1bSV4/9or7OBJsqMEE+ZeGSfZSnbR/t458vvnILK7BD5d
+vv0mtf4vkWCSQFH7U16kAUS5BkIgm1PU35OgnubJ7+2NCcrJLj8Ynha4j46
/uIl4DXrK5vQh5wowbMdBacuH6bxVEtgk3b+UKI1OVUCt81DOxd9ajz/JXAq
urR1TAo5R4JRZ2wP8OaSNRKk5BRmGZbT8Vig3d8F3U8eX0gukWDY7obTy09T
f8skqHOfGlvWk1yhHb/8Zyc/x9DxUKPdXvbuvU07keskGH/Qmbf8DB0/3yQI
0B9QNEhI5klhd3v/gg/LyPpS5PUzLz08hWwkRejEsuorXcnGUjhELRuXX0bH
q4kUDb5LtnVsPJ7NpLB+ci0rog/ZXIrbdrfCHS7Q9dtCipb/fY70DyNDikXu
6lvWdmRrKaYN/TjE3oZsK4V3gQ9/j1vj9V+K1UX8D2e3kF2kMGgTVl58mewu
xYNOV0winjXe/7X10p8/X/qALJCi7L/dyo/7yJwUi1M6Pjk6l6yQwqZlZObv
l3T/iZdiumXGidjN5EQpJo0ZUbLFmazW1j935IyeAzlVik3ezZ7EhpIzpIiP
rD+adYGcI8Ww9JjU632pnkYK44ovy2o5coEUHxe+r1AWkEukeOsSv2FFNblM
ivEupmbJjfObCinqCsvVF0+Qa6SI3X7xQ72KXCdFzLroFw8Cyd+kSNr88Ve2
kMyTYfE+Z2/THLK+DBf6Tuol6Uz9M5Lhx+KhM07HkY1luDLQ+8Sa9nQ8mMhw
/83bE5tkZDMZ1hgPM5tZRjaXoXX6wQ9R9WQLGR54BV9//oEMGUoXH3COvUe2
luFDof7re43XO1sZEq7t8+yrITvKcPR7Zf7k/8guMvTYOGVa+kg63t1lKGsw
Ov8lmcyXYUFvScbKfnS+CGToumz2qm1qMifDwmeP3tvr0/mmkGG+YkTh2Pnk
eBl6lfarHhTeeP+XwSTs4ZuTuxrv/zJ4DhW0GFhITpVhXNNrt34aNJ7/MhR3
dgh0X9N4/mvXN1uT5PCg8fyXQS+73T+1y+j6UaAdrz6C3n0qySUyJCJvTJhd
4/1fOx5W37vd2UmukCFTP9nB8ji5RoaD3ZSV0s3kOhm4G7UvWywmf9OOx4c3
rzd0IvPk6Pak6kndM6qnL8eEUWfrxcVkIzkiN+0I6naPbCxHBQxHeP0km8jR
1O70Z7Etbc9MDmuefc/0t2RzOcSZS3/s/9V4/5ejtG9urEUpXY8hh+N629TS
543Xfzm6nClu1uTnbeq/HMPceypeVNHzgKMcF3dVV+eJ7lD/5fgWb144pYrs
rl1eGKPJ60vPE3w5bvVrKDdeQRbIMb1u7c+Oh8icHK22va6/9J6skMPo2H73
nx0a38fL0f7cYOvIelqeKEfL4yWxv0+T1XLMjR1gmxRNTpVjcfL98v3e5Axt
3h/FJYejyDlypN+evGF4HFkjR0a4w7GYQHKBHL/aTYr3HEQukSP14vppZ4op
X5kch+ak5l7ZSq6QI252L9sjieQabb1t/z7vmEGuk6PEcILgSyr5mxzRh8a+
mutF5imgPtPzUaIhWV+Bebd386qyabyNFAgYXZbRkEQ2VmDJ0I0mh1PJJgqM
qrca9yWZbKbA0sAcRbYz2VyBzyuNb4TUUT8tFMh+NCSbU5KhgGlZTs4bR7K1
Apb6Pz9nzW/svwIXTzh6pw0nOyrgdLbr5O036XhxUcAxII8TTCe7KxDnn3gr
N7vx/q/Agsqme2bbNt7/FTDrVL6vnT6ZU+BVn198T5fG+78CE17ZrDKwabz/
K6DXrIv7i690viYqsKtzd6/8rMbzX4HJ81a8jzhA15NUBUq5R4s9D9D1J0OB
5iGz0+UBdL3KUaAwX2R/vUnj/E+BJi2azuOL6f5QoAA37t82so70fFSiQMKR
mK3ZHvQ8VaZAhv/nXap/6HmsQoE9qQVjrA/Q812NAk2XBMwKv9b4vUuBTm5P
mlp0ou9j3xQ4wV8yzd/tAPVfiY7WG9eUdthD/Veix9RRvOlOm6n/SpQK/W3P
mymo/0rYvn9+NSVdQP1XYuSqZ06qsfR91EyJ5Ff7/W4m0PdbcyUer5Wve6mg
78UWSkjSDq7JfzKL+q+Ex+mS8QaZ9L3WWgmFMiU1urUH9V+Jba36HevXl76H
OmqXL/U6ke5J3zNdlKgMtW8y14m+T7orMSHpQWIfQeP3RiWe3WsT220r5RUo
kYn1yraO9PzNKZFecmS8WUnj878Sv8a9tnLaT+Mdr0TfDYdH2A+l/iYqkZHT
OaGkio43tRKrX1vVbHl4n/qvhNnJq+37d6T3JRlK9F7g0EPvJr1vyVHiJO9W
WGk+vc/RKDH5wL+LeSvpfVGBEvFhVZPN7ej9U4kS5QMn1Rqfp/dZZUpk1V77
tMr3O/VfiQfrbx5+upTet9UoMamV/8D25+j9XJ0SUs9HTtuf0fu9b0po5Etn
OHduTu//VLgRcbBopi29P9RX4f21NimtYg3o/Z8KUW0XxV282Ire/6nwqfPQ
yT9et6H3fyo8l43p3pxH7zPNVEg1sLZb8ptsroJj8Ycb+Z/o/aeFCgkrHbpu
rqT3o1BhV7+JDeqrHXW21q7vdSjsWGrj+1QV7Pz23suR0vdARxVks8dwK5bT
+1cXFVb9+m78ZEhXnd1VyOo/YO31N2S+CiEu1zqZ7qT3twIVNk54MqRhDH1P
5FRYfGdl0akzZIUK+gOk3raD6f1vvAqWObtcLknIiSqYGKasrL9BVmvHy/KC
vUnbHjqnavdnns/eMVbkDBXeBPl5dogk56hgNWzGSMNjZI02v5OkZVYZuUCF
f2KupGk+kEtUuLOhLH/YZ3KZCja7v0cOekiuUKHfOi8ry2RyjQpbWy5PP2dH
rlNhxvBuB480IX9TIefVwNCv12j/eTEoqLU8XHOPrB+DKIGzc13j/hvF4Gpi
M2WLiT2p/zFIzHs3toum15T/A9CVlPY=
           "]]}}, {{}, {}}}, {{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxdmnlcTO3//4dI1qIkibKXupkoovAiKXvZyj5JixbtNW3TmWn2RLijkLJH
lhIJlUmWuLllzz7WCpGbkrXf/B7z9vh8Hf94PB/XnN7neV5nrvM+1zX9V4bO
9W3L4XB8dDic//+/9l/jRM6f//An6rHYgMVGLDZhsRmLLVg8gMWDWDyExZYs
HsZiGxYPZzGXxbYsHsniUSy2Y7E9i0ezeAyLHVg8lsXjWOzIYicWj2fxBBZP
ZDH+ZIbFnEmscRZzJrPGWcxxZo2zmDOFNc5ijgtrnMWcqaxxFnNcWeMs5rix
xlnMmcYaZzFnOmucxZwZrHEWc2ayxlnMmcUaZzFnNmucxZw5rHEWc9z/ZLCY
YbGKxRwP1vEsZlisYjFnLut4FjMsVrGYM491PIsZFqtYzJnPOp7FDItVLOYs
YB3PYobFKhZzFrKOZzHDYhWLOZ6s41nMsFjFYo4X63gWMyxWsZiziHU8ixkW
q1jMWcw6nsXMYmQu4nRoe9x1vPZ41jhnCet4FjMsVrGYs5R1PIsZFqtYzFnG
Op7FDItVLOYsZx3PYmY5sqK5ByabzSF/1jhnxZ/XBytYx7PGVaxxDu9PtmAx
WMxjMcP78/xyWeMqFqtZzPH+83gLb1Z9FvNYzLA41xsjnSFpc8mDfL3/9Fez
Ps9Z+SdbsBgs5rGYYXHuShSW1+v+73qvhO6cEf87HzWLOT5wvdLj//izGD5/
/j0eixkfyJovuooOjqPrz2IVi9Us5qz6ky1YDBbzWMywOHcVy5/FahZzfP9k
C1+WP4t5LGZ8/7yeuSxWsVjti+/b/TJ2iudSfb8/2cLvz8+DxTw/7Ai7rvFd
TPVZnOuHEXOOydvuXEb1Waz2Q/Gbe//7PMf/T7bwxxPnD5m7li+n+v7IHF+9
qmIGj+qzmPGH32yLi8KyVVSfxSp/tM5Lf13h4Ef1WcwJgG/4o/SbrSFUn8UI
oO9nKNVnMROATN7aET3Wrab6AQjqOV5zvcKpfgDS5mW+sQqIofoBGPWz5MCB
8Eiqvxr+ly+sDaxOovqr4XxOt3Pgi1iqvxqyjXaHD85Ipvqrsf1Bxv/+HrMa
Jp/bRnt3FFJ9zfHuQ5JfJROrVkNo8+LEs9YUqr8a/MgBVfZ3xFQ/EElXdVW+
McQWgRjR43JLz24yqh8IvfZSjZ+C6gfCwkylLC5Jo/qB2CYMiZi6fS3VD8SR
SEgf3txA9QPhu9FKc73WU/1AxDgLni/quJnqB4E/S5TV8fhGqh+EwdylAx+0
ZlJ9DQ9YV7ttCn2eF4S+Z5f8b5wJgunmo47TzbZS/SC4ueWLt4ZnU/0g5Jn2
iLvssJPqB6FBEBv++mku1Q+G1TTzXRdNdlP9YLo+e6h+MIoGz/tebL2f6gfD
pvyb5vtKzATDyOIv3n8X86l+MGKOxLpP1CdWBWP4+m78DzaFVD8Y3T73qnOJ
KKD6IRhh38Zm/toiqh8C+e43JzN6Haf6ITi54v8wLwQpcTqxXl+LqX4IPK/e
LgpTnaL6IYi5Xap4dKiM6oegJI/bO8u7nOqHQNW87Zhjg4rqr0FasIN46JkK
qr8GGS5jDpQGVVL9NVg/NN7E4+8LVH8N4ldZN3oduEj112CD9ZOBl9pfpvpr
4HbVOMhhMbFKw8Y/DwcHXKX6a7D55b3iSaXXqX4ofB7kJd+U3KD6oViRU7th
yJKbVD8Ue6LMrucU3KL6oTBpHx7vmn+H6ociUjppkOXf96h+KOab9rs899QD
qh8K1097UtvNekT1Q8H3+Xddv7rHVD8MT2orWrrEq7VsEIZhomcXnR88o/MJ
w6eMwMEzJr7QMjcMYVsmBZza8IrOLwzrg/+e5tWrVsvuYXD2PxN94G49nW8Y
GpoVA21GvdVyWBheDOs3fXZhA51/GMomjzq38q9GLaeHQaFnMuXQqY/kEwY7
XtSwg2aftFwQhiOtK47sV30mvzA8FHluPXmuWcvVYYg4Z3nA7HUL+YbBNHhc
pwsB37TcGIb70psXLyt/kn84lLN0vw9qaCX/cFS45HKXrmwzQesfDrdV6ju1
PXW0zA3HzDff5xXuaadlhKPLnM62F8W6WnbXHH9lbfDYAj0t88LhKHeJymM6
aTksHM2cISm3VnTVMhOOC2svDZ/6Rl/L6Zpxf2Vt15DuWs4Nh6XhrLp4HUMt
F4Rjnti1qIfESMuqcDhz7uz/kWas5epw/Bx4/PRltYmW1eHIf/1NYvOfqZYb
w6F2svMxmdZXy5wI/NPSU7nYwkLLBhGIzMw9GinpT/4RmHsr2XCv50Dyj4Bh
rx5nPYYMJv8I3Gi/c827XkPJPwJHPI4dOc63Iv8InNq403viVWvy1xxvauvw
mT+c/CPgeERgnpXPJf8IjHCo6TaLN5L8I6D+9XNb+2F25B+BMAP1XjPr0eQf
gSF65jZZMQ7kH4GjQ8a3vjg+jvwj8H2/0p2RjSf/CEhGzuKdmg3yj4Q854F1
yfNJ5B+JZWn9xRtKnck/Ev3mjeja77YL+Uei/NTPvbO/uZJ/JC7kTT2QoJhO
/pGY1c2opWjKLPKPxJbK2/q/JriTfyReDcif9vCbB/lHwrnbQV2zxnnkH4mc
ZctXepovJP9IjB8evzBK6kX+kYjry/8aMnkJ+Udi+dyVBSMDlpN/JIqsltd4
NvDIPxLzdPN7trm/kvwjYeSo6/qqnS/5R6Gr17WAw3H+5B+FMyfNqivGB5J/
FEK/OAZW+ISQfxSWGJ66ejM2jPyjYF71UmQqiCD/KBz/e2T7Q2ejyD8KDt36
TVm3KJb8o5AkeOScvCCe/KPg5u3q+zI/ifyjML1z/1+5FQz5R4Fjbcmc/iQi
/yiEmS2NbYmSkH8Unqij6xM95eQfhaHtlncq2plK/lHwaf4w9VXoevKPwly5
S9mT1xvIPxozfEaV+gX/Tf7RiC+7q/PGYwv5R6Oa82HfloKt5B+NbPO04Q1Z
O8g/Gqm+I/j563aSfzR66u8KWcHdQ/7RiNjSWdR70n7yj8aVoRMudr5zkPyj
se1Rz8MBbY6SfzRGFsT7Pv9YSP7RuOaXtK3g3+PkH43YCUcqXP8qIf9oFB8/
X6pvUUr+0Rg1v8cY/ioV+WuOv/7J9kX/SvLXnI9PR9ODKy+SfwxqwhqGDRx3
hfxj0GFrFLP0yr/kHwOfKwPMrvW+Sf4xMJ8SO/Bf9zvkH4NJH3Wcs4beJ/8Y
6Jz9cPLemcfkHwM7/drzRlufkX8M/urr2JCufkn+MbDpvPKt6lod+ccgoEE9
dqakgfxjMK9lWTGT+ZH8YzB2ynwf6DSRfwwG9vC7/mTAV/KPQULbPo6/+v0i
/xic3+MiXmbYVruu3RgDSwXjPuNMe1rnjsXijJwDz607adkgFoY3vHc/3qiv
ZYtY5OdEXJlkZKhlbix2/viPl9m7l5YRi8jQq97d25tp2T0WN1sZ8Sbd/lrm
xaKv63i9E2cGaTksFg/XF/n1nWWlZSYW+ic6iEf8N1zL6bEI2a6M8mgZqeXc
WNw56mrzzGOMlgtiEX7wZO3Rs05aVmnOx9PV6P7FSVqujoWdf6XfBv2pWlbH
wmcO72Bzwgzyj8VCI9+/9th6kD8fHczerfiRvYD8+bjUbXiR97wl5M/HB6e0
zSY8b/Lnw25EYcadCX7kz0du3Kr6swXB5M/H55WGCyfuiyB/PhJ7WHrei+CT
Px96HbZNNbNiyJ+Pw7sjBj2VScifj6Pjl1+qfriW/Pl4+K9IyV+1ifz5mBzd
6wvnVxb585E6SLBmz/id5M/HNt0n36JD95E/H3cHdRx9bdUh8ufj2OyZsVYr
Csk/DpxV762NU46TfxxGWb4o9Qg4Sf5x6NqaefJH7Snyj0Nh2lAvvXdnyD8O
5/TTShcGl5F/HJh3izeJAsvJPw7B7dumjHhPHBaHw/ZLHqa0PUv+cVhUafva
5jiNp8chRJG4b6kBcW4c9t//lGA6mP5+QRzmP1rd92Ur1VfF4XXa1nH5+afJ
P07z/HF6uH8kna86DomF7yxP5pBPYxwehGwaMvr7CfKPR5DqoOCR22//eJSN
WZbUOe0Y+cej3rTio/eNAvKPx9BJK0fLnY+QfzzaNjnVr9bLJ/947BfNS2ht
2E/+8bBwWTzDrmEP+cfjxV6Tw/c77iL/eOSdSEibd3AH+cfjwvp6/sPzlG9u
PJjG74v2RmWQfzwW69Q75hzeQP7xcFysvzlvH90v1fH42aXuyNtsKfnHI7Pn
mfw29kLyj8cYidHYpu90P3ISMHjxzDsLhoWTfwK2l9er33Lp/rZIQGFbs35Z
bxaTfwLGWn36tyRvNvkn4OLW56nt40H+Cag/NMKqoYZL/gl4Pzt1mHi9Bfkn
IHLrHVnVQZpfmASEzLlpqn/1J81/CdB5GnF06au3NP8lwPhT4qfwcQ9o/kvA
BeemcNWnKpr/EmBqn9doPZSeB9UJOPFrWJbTM3reqBPQ4VGGfZfiTJr/E5D+
zvF0t1Ilzf+JeHNvavdmYwHN/4kwf227brsonOb/RATGltWUN62i+T8REvf8
R2sLFtH8n4iVnpXPKvWpv3FPRGq6ay/7kCk0/yfi6e3UHMNF1I+FJcLysvrR
Aa4tzf+J4B/c2VyTNYT8ExG1rbB63A3qT3MTseD47nY/n//ufxNR2Hlfh11b
upC/5vhJ6n0GezuTv+Z8OpRt6+pB/bA6EYu8QpSO2yzJPxGjPZbeThY5kX8S
vCKN36aq5pB/El5EGJVFFVH/ZJEE649D/3XYQv0ONwnLqrpzb3CTyT8Jv/r2
w6B/qN9wT4Jh9+ZStZD6B14SOvzq//ei17vIXzN+Qvg54+Mh8k9CQsPNdQct
T5B/Esobx0/OzCkj/yS4c9dXn35Hz++CJOgdPTLmas1l8k/CkH84psqx1eSf
hK6l8wfLL90i/yR0+f7y/NTEe+SfhGzRZXGW00PyF6DfYaui5x+ekL8AOTl+
0+9Noue1hQAFG7127mt+Tv4CPJY2GZ3eSM9vCFAXw4+2MH5N/gIcexPUXyCo
JX8BTnRr3hFURc/3MAHmuF4qKW2qJ38BHFL8Nvvq0P2eLsCyCzYzpC2/738B
fo7P7Oaofkf+ApT3XdruYSn1ByoBrgjW+s7c/J78BRDwHXd6r/pA/gLMUCyR
6Bg3kr8AN195ZN5MIuYkIyz71F+Gn4kNkrHoue663GjqNyySYb1gztTKL8Tc
ZPy161vfZp//yD8ZH4OtE3vsJ3ZPRqn1iSLbSmJeMrKFT+4VVxCHJWPiGbsO
nYuImWS0tP81IiCLOD0Zcwx13XcEEOcmQ15e4V1kRFyQrLlfdIeGbKPzUSUj
xSnUyfcXnX91Mr459B5RMJFYnYxPB/QuO5+k69OYjIXOHczNjtL15DCYbRZV
HJjwRst6DAIF3b6+mkx5GTAQJwcdeDaB8jVhMGxKziHzIsrfgoH9zkqzZ1Uv
tGzJ4PH9aoVhNDGXQYFrp/GJAmIHBg4l5zYN20EMBqVmvR8u3ErsxuBsP0VJ
oSuxO4MbDSULcjfR/efFwDbq/e3JMXR/8hjN8+Tdl+Hqp1oOYPBpsX+3vP6P
6HozeDR1gX7ID7r/+QyO20TbXbxL3w+GQZPuvSWeevT9kTPYeE9aOSCJvl/p
DLpnnZwT2uG8ljMZCPbkMG9sz1I+DA69X/vTsTfNv3ka32nCTb3lxygvBisn
ttaaltL3vYTBhKOjss7b0vysYtDyV5PzkBJ6X6hiwLF62+/X3b2UJwOPDjMc
E53ytVzDYPSJK/rGavr7agYh3Z0O1Q44o+U6TZ4u07Y6+P3u9zXX75Zv2gKT
f7TcwsD6lZ9xP2/q5zlC7K3YlK4eX0P5C2HjUPqPzV90PQ2E+DqqxDQrm/Iw
EWK0f2Erz5HuDwsheF9d+y/l0/fRUgi3wccMmCO/vy9CPDk8wsK+6TPlL8TA
pPOdbq9vofyFqMLcq/oJPyh/IYozawZKvTj0PBUiub3euJAM6t+9hKj1DH6o
amxHz1ch/Azed+D6d9BygBCTRncaE93UkZ63QlxZaDt3QmYXLfOFGNwpumn0
zN/PXyFO324wFbXvrmW5EJlPlmdO8e9B/YgQz1LH3JVdov4/U4jwtQsddAb0
pP5EiHufBJ34EcZazhMiceaDkDEn6P2gQIgu/tECz1oTLZcIIVtib8rTNaX+
RcP6VsNcDPpouUqIhruXF9no0PtEtRCMt5Nd4mPiGiFG2W848iu7L/U3QqT1
7LBlv3M/LdcJcXR6xOXaa8SNQhheTo0KdjLXcosQ1+t7t5u6npgjwiK/n7vq
LhLrifBB/eJ2h5fEBiIUXrF6sKOW2ESEXVWeE2tvEluIYDms6snS/cSWIszz
HPZe6UfMFWH3gIrh3B7EDiJcSV9yp/0hOj+I8O7AlLO19sRuIrwxr9DdUUh+
7iJUrvqW+N2C2EuE++d0z5yQ0PXgiVC8uXlp9DO6fgEiWLyZG3jdnjhMhGkn
5jq6iOl680VINP9sYf9vb8pfhOu/usvqjIjlmutRKzJIWER5pYsw4MByO042
5ZkpwuXB427y1JR3rghd0U8RP+h3/iJk753KbRdI90eBCBfeiZ7nFBpR/iJ0
sw5Ov/2d7ieVCLen7zAZOY24SgR+12HdOFvp/qsW4T1/VM+t7+n+rBHh8bP6
MHdXYrUIh9dcKpyxx4DyF+H528WBp9sTN4pgOKExc/W9bpS/CJGe7/rsP9SV
8k+B0atN5kil74deCur+jZroHNmZ8k+BdJvtg7Wr6P3YJAWnLE4HjFxB3y+L
FCwWm59tXalH+adg+kKn+49D6fvITYFBuN/5NIku5Z+C+tC3H1t30/s3UrB7
/8XGx1fo++yWguvrDgv6ftOh/FPw/VFg8QJbYq8U+E/JuLUqjOYDXgpG916n
bn+yDeWfggasXPytHXFYCtbnv3yqv5jmE77G7+Xx9eqgVpr/NX/f89WkD1xa
L5Cn4MoGG25Z29/9eAoGjmVyTqu/0/yfggCvOeP+vvKN5v8UzBnAnVx6ltYf
8lJg+qHf53/O0vxWoDlfy21vfK58ofk/BS7lefqfnzTT/J8CedfP4XN+0npG
VQqGBsTrVQwirtb4bPeRWy2g+bMmBd2aZ6t6rvtE838KBFxFm8HXqT+oS0GN
1a+JeibEjSkIP2TjsiaA5uOWFBw7l1Dy/uzv/keMLrdqD/r3I9YTo6SlZXO+
LvVPBmJsejRq45THNL+biOFb1jTy5VnqHyzE6F6+YZzxEerXLMXY5jZSuGo/
9RNcMfRbLnyxyqd+z0GMTGk01/4UPT8gBv+f6N2V1dQvuokxxuWQefnH3/2k
GN568o7yPsReYvzTfCf60axX9PwX4+PjKW/D5dSPBIhhYek2+vgVel6FaT4/
pxPWGBHzxRirM+HsXF/qJxgxtk57IrIqo35CLsZ/TurB/D7E6WJUXvSq0mPU
lL8YvKQg4+l36PmYK8bhcOOxdsXUP+eJoROAqra7aP2rQAzbuYO6RGRSP1Ii
hvJQ3v1PmdR/q8RIPF1wefZuer+rEiPceAbnSzGtp1WLsdTzS0XOLXo+14hh
szPLVtVC/YxajKagbW2mDiGuE6OHT0Z51JK7lL8YCW9CPJZl0npdixg3Htrd
YB7dpvwlGM/12pw0lFhPgn4+9pG2cdQfGUhwP/JonecN6hdMJFCdtT6/awSx
hQQ9XfycH2+6QflL4KZ5Pbv0k/oprgR7Lb8qHEKIHSQoPLUjKqLyOuUv0fRH
A+uZYlpvdJNg9AyPm6uLrlH+EgRK+toXnrpK+UsQcL/FM6+K+hmeBEZ9S3us
UNP6ZYAE0yase2vCIQ6TwMHMvGMHS+rn+BJk7ynYH+5J78+MBGfjrsJx3SXK
X4KIpj7cqn9ofTRdgknr7a4tNyDOlOD0qetbg5ZcoPwlMGkKmH/4EPWHeRI4
v04ZbdOOuECCuKd7+0z3pn6sRIIpz7qOba08R/lL0GbM9oEDbYirJLgxIXuR
R1YF5S/B3ddzmko7E9dIoC9wO/1U9Ht9V5NHJSfz/Q/qR+skUJY+2+D9s5zy
l+Bx33gdd13iFgkyT42qSe1F75ccKa6U861Ocmn9WE+KU11CBvp6UD9pIAW/
w1pRRdxpyl+Klu9lZhYHTlH+UkQcWhS35in1v5ZScEuG3J9hRsyVojinweTK
ipOUvxR72uv0HXagmPKXwnCg2bpjLfT+6yZFr1FxUw/OInaXYppzfh9lHq1/
e0kxeadb8TE9Yp4UqsKMjPKQIspfCoPIEk/9GuqPw6SotNph1MWVmC+F8bRt
3idO0/o6I0XVSFuz6pHEcim+PX5Tv+RoAeUvRefAwRNbRhBnSqFe2P32xtW0
Xp8rhZ1AuTk//gjlL4XLrOvXp286TPlLcctcXeZT9Lv/l+L4Bs7SpAfUz6uk
2B01b9lSPeIqKda93nHnhhPtD1Rrzn/cTMHu2AOUvxRrSl7rOpTkUf5SoDi5
rWUrvU/Uac53kl9k2gziRileuKary7L3Uf5SZHde/mJCE71fcGQQDQ/dd8OD
WE+GSYsbO+UW0fuIgQx8UYRI35TYRIaCUYN13SS7KX8Zph7s1fvOZ1rfsJQh
+XZY9o0AYq4MFZmqNZbPaH/EQYbQT5HP85cRQwajUQ+Lhj3JpfxlaHF/Wb5l
JbG7DL8ubVlz9XYO5S9Dklcot/gt7b/wZDgDRc+PHYkDZDg3/xivZXg25S/D
iN6n9lks3k75y1DJvau/fu02yl+GPqvT/Oafp/0duQwlt8YMiW9LnC6D2396
g964ZFH+MsT5H04dsp7W03JlaFhy7sG1x7TekydDanF7pxRb4gIZzDMLhyxR
bqb8NfU/9E4PrMug/GXI5kW6ms8grpLBdYJx7JhjtB9VrTk/6YLjVX2Ja2QY
f4tn33ndJspfhpzcgIPD2hLXyVDV9dn6sfEbKX8ZXi1T++5spv2uFhmaNtSO
9o35vf8lR+++7pmjv6VT/nJwbwwyXiAkNpBjiPGZoIAuxCZyeLzstYlnR/tp
FnIof3Uraee1jvKXY6ho3eBbTBrlL8enL29e/jy6lvKX41xFXNuZr2m9DHIE
3Nh/cUd/Yjc5Zt1+JnDypvVJdzkG1HbbOjBPQfnLca+4wmL+J9rv48nxvMR0
xsQpxAFyfAj8OMpwq4zyl6P4Z82ZzZ+llL8cbfXm3FXNI2bk0B+ih54naT9R
Lsemd++Dl5gTp8uRlPgLt1LFlL8c78buKbP+kUL5y7Fo2tGIseHEeXLkdLDJ
FNb/3q+U49utr54rfYlLNJ+3cVva9EpI+cvx45H664nVxFUa/44Z71waaf+z
Wo5Mm6s9dBKIa+SY9+x9TYwesVqOq5fuFfeyo/XIOjnkudOc/ZfQem6jHEy9
u9NmBe2vtsgx2rjT591liZS/AsGGxgPNviRQ/grMHFyjHzea2ECByk5Tds1P
oP1aEwVMBs83zjgfR/krcOl12bF+hsSWCsyaul++yY9P+Suwan9EVsdy2v91
UOCne3oWtw8xFNj9dU72oKQYyl+BufUPs+qfR1P+Chyf9vhBzkxiLwUeHetq
f+T07/1lBSa//WS62YY4QIHsllhz712RlL8CGe/bmQnMiPkK1Ml7jgzaSvvV
jKb+uEFTnfoQyxXYHOTfZksOrX+nK3AnaNIYu6HEmQr4ZPV9sOUYrQfnKmDE
fFxdA+I8BSRWJZe27Aml/BW4Zbp17LBrayh/BdZPKH/a+Rvtp6sU6DIg9Xub
EcRVCqRtuam7IyCY8lfAY1dHyde8IMpfc/4C6yJeA+3PqxWot06zmj6GuE5z
fq7flavEqyl/BawHJ/V7ei+A8lfAuzSvcuEIYo4SyWt3OHitpf1/PSUC1tlv
n93gR/krcWcBihw9iE2UGFN4+du8M/T7AQslvG2XdmEsiS2VKDs3Pqv91t/7
BUpkf5nW8rwbsYMSLc8fuBrLfCh/JRYOf5/YRofYTYl/pqV530uh3yu4K1E0
8VrzCl1iLyU8dquQluZN+SvRXz7/TNdexAFKbGjOC/21h9bvw5R4r957y8We
mK+EW3lj/7vrV1D+Sngd3xJ74TT9fkKuxLsLb95LGpZR/kq88SxoNhhMnKmE
Tqvh3R/eSyl/JQ412Zbd3E2/x8hT4u1f96bqvV1M+Stx/3ZC0bLRxCWa+jNb
N/6Q0P6JSnN+3237HHpAv++oUsL/2tFRsCOuVmJR3Ky8pZs8KX8l8sc+W1bX
RL8PUSsx8uOR4mXLiOuUiN2+8eHVSwsofyWefx9+vcSOuEWJ3YLrq6/vn0/5
p+JT49Efor7EeqlI3j4t92MG/R7FIBV+61tdzvYkNknFnvfmI1dmzJ3w/wDn
ZmyP
           "]]}}, {{}, {}}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{1.7763568394002505`*^-15, 1.1368683772161603`*^-13}, {
       0., 0.}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.25}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -341.25}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}]}, {}},
  ImageSize->{
    UpTo[600], 
    UpTo[351]},
  PlotRange->{{0, 735.}, {-379.16666666666663`, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.8257754113034697`*^9, {3.825775497085698*^9, 3.825775509138315*^9}, 
   3.825775542947028*^9, 3.825865074378841*^9, 3.8259261364518557`*^9, 
   3.8260397518305607`*^9, 3.826039944896064*^9, 3.826040010957356*^9, {
   3.8260433757990294`*^9, 3.8260433913087463`*^9}, 3.826043422855598*^9, 
   3.8260436090417967`*^9, 3.826128005870101*^9, 3.8261282810864363`*^9, 
   3.8261297310041847`*^9, 3.826292509750345*^9, 3.826294035362074*^9, 
   3.826294072574662*^9, 3.826294782684804*^9, 3.8262950164505444`*^9, {
   3.826295049803878*^9, 3.8262950554948683`*^9}, 3.826464011273625*^9, 
   3.826537741437634*^9},
 CellLabel->
  "Out[259]=",ExpressionUUID->"e0fe8825-d5da-4bb1-903a-b2fcb370803d"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       StyleBox["\[FilledCircle]",
        StripOnInput->False,
        GraphicsBoxOptions->{DefaultBaseStyle->Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}], {0., 0.}], {{{1., 
      0.4164667532309053}}, {{2., 0.00016474762788421077`}}, {{3., 
      0.006297680350610919}}, {{4., 6.86153462799107}}, {{5., 
      2.606543011134748}}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       StyleBox["\[FilledUpTriangle]",
        StripOnInput->False,
        GraphicsBoxOptions->{DefaultBaseStyle->Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]]}], {0., 0.}], {{{1., 21.530643540814}}, {{
      2., 14.997945632611989`}}, {{3., 13.549001913099312`}}, {{4., 
      5.239150710515735}}, {{5., 0.4430323108280568}}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Subtask Variance\"", TraditionalForm], None}, {
     FormBox["\"Neuron\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 21.530643540814}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8257754113034697`*^9, {3.825775497085698*^9, 3.825775509138315*^9}, 
   3.825775542947028*^9, 3.825865074378841*^9, 3.8259261364518557`*^9, 
   3.8260397518305607`*^9, 3.826039944896064*^9, 3.826040010957356*^9, {
   3.8260433757990294`*^9, 3.8260433913087463`*^9}, 3.826043422855598*^9, 
   3.8260436090417967`*^9, 3.826128005870101*^9, 3.8261282810864363`*^9, 
   3.8261297310041847`*^9, 3.826292509750345*^9, 3.826294035362074*^9, 
   3.826294072574662*^9, 3.826294782684804*^9, 3.8262950164505444`*^9, {
   3.826295049803878*^9, 3.8262950554948683`*^9}, 3.826464011273625*^9, 
   3.826537741595767*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"a3c81941-6cd8-4bab-a556-81d7180ad7b5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 2: Perceiving Affordances", "Section",
 CellChangeTimes->{{3.826127635167426*^9, 3.8261276575390797`*^9}, {
  3.826128025915163*^9, 3.8261280267909937`*^9}, {3.8261281722879343`*^9, 
  3.8261281786875353`*^9}},ExpressionUUID->"d5336de3-5690-4ec4-9688-\
7780906f206d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_avoid_n1.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_avoid_n2.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_avoid_n3.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa4", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_avoid_n4.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa5", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_avoid_n5.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ac1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_pass_n1.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ac2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_pass_n2.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ac3", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_pass_n3.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ac4", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_pass_n4.dat\>\""}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ac5", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<A_pass_n5.dat\>\""}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8261273701938753`*^9, 3.8261273975614243`*^9}},
 CellLabel->
  "In[263]:=",ExpressionUUID->"591a8f32-e48e-4e3c-b8ac-8ff236677dfb"],

Cell[CellGroupData[{

Cell["Neural Variance in General", "Subsection",
 CellChangeTimes->{{3.826127635167426*^9, 3.82612764714084*^9}, {
  3.826128075366658*^9, 
  3.826128077942148*^9}},ExpressionUUID->"fcae8cc8-c918-4792-b671-\
86b819c178cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Variance", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"aa1", ",", "ac1"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Variance", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"aa2", ",", "ac2"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Variance", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"aa3", ",", "ac3"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Variance", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"aa4", ",", "ac4"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Variance", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"aa5", ",", "ac5"}], "}"}], "]"}], "]"}], "]"}]}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Neuron\>\"", ",", "\"\<Total Variance\>\""}], "}"}]}], ",", 
   
   RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "\"\<OpenMarkers\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<A_Var_General.eps\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.826128190491602*^9, 3.826128225034253*^9}, {
  3.826292386508327*^9, 3.826292388935768*^9}, {3.8262924436530447`*^9, 
  3.82629246519178*^9}, {3.826292956772386*^9, 3.8262929595426407`*^9}},
 CellLabel->
  "In[273]:=",ExpressionUUID->"81c3e3da-35e0-4531-be6c-31c558fe7948"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
    GeometricTransformationBox[InsetBox[
      FormBox[
       StyleBox[
        GraphicsBox[{
          {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
          {AbsoluteThickness[1.5], Dashing[{}], 
           CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
        StripOnInput->False,
        GraphicsBoxOptions->{DefaultBaseStyle->Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]]}],
       TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
     0.14872814487618027`}}, {{2., 0.03792218923485484}}, {{3., 
     0.12929751549802315`}}, {{4., 0.021985810277795094`}}, {{5., 
     0.006833101754012972}}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Total Variance\"", TraditionalForm], None}, {
     FormBox["\"Neuron\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 0.14872814487618027`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.826128079676895*^9, 3.8261282259004517`*^9, 3.826129728968354*^9, {
   3.8262924812360363`*^9, 3.826292510952237*^9}, 3.826292959927952*^9, 
   3.826293003408421*^9, 3.826293572215623*^9, 3.826294036260354*^9, 
   3.826295056420086*^9, 3.826464012420597*^9, 3.826537742377685*^9},
 CellLabel->
  "Out[273]=",ExpressionUUID->"0c63f602-95a9-48b8-bce7-6acd3b09700e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neural Variance Across the Task", "Subsection",
 CellChangeTimes->{{3.826127635167426*^9, 
  3.82612764714084*^9}},ExpressionUUID->"3d16fbb4-9f87-4b4a-98c8-\
b7e6e085d6b8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"max", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsColumn", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa1", ",", "ac1"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "False"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "10"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa2", ",", "ac2"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "False"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "10"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa3", ",", "ac3"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "False"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "10"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa4", ",", "ac4"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "False"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "10"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa5", ",", "ac5"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "False"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"1", "/", "10"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<A_Var_Task_Traces.eps\>\"", ",", "%"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"Variance", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"aa1", ",", "ac1"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Total", "[", 
      RowBox[{"Variance", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"aa2", ",", "ac2"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Total", "[", 
      RowBox[{"Variance", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"aa3", ",", "ac3"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Total", "[", 
      RowBox[{"Variance", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"aa4", ",", "ac4"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Total", "[", 
      RowBox[{"Variance", "[", 
       RowBox[{"Catenate", "[", 
        RowBox[{"{", 
         RowBox[{"aa5", ",", "ac5"}], "}"}], "]"}], "]"}], "]"}]}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Neuron\>\"", ",", "\"\<Total Variance\>\""}], "}"}]}], ",", 
   
   RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "\"\<OpenMarkers\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<A_Var_Task_Values.eps\>\"", ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8261277800679703`*^9, 3.826127957376429*^9}, {
   3.826128040574861*^9, 3.826128049301351*^9}, {3.826128232494413*^9, 
   3.826128252684923*^9}, {3.826292391490402*^9, 3.8262923981716337`*^9}, {
   3.826292446307199*^9, 3.826292469353167*^9}, 3.8262929683136797`*^9, 
   3.826293386860302*^9},
 CellLabel->
  "In[275]:=",ExpressionUUID->"81310172-3a82-4bcf-ac0e-1a2354993f00"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
dH6979A97tQvxZwvI/dtPzud+qVweZ8VOaDVDOqXYsy00iNHJs6kfinKpTUT
wjSzqF+Kdd+sPXNeeFG/FD2DfdKS/GZTvxSFHVL+rHg/h/qlUA4IOZWZ7Uv9
xtfjLdu0bflc6pfi3I0lsvEB86lfivFDdjVIXbSA+qWIKPltXJcyCfVLkWDf
s/mYHwupX4q+XXNc06cGUr8U3kNty1blL6L+eKTMiY8Y034J9cdjl4eumW5t
EPXH49PNVUU2o0KoPx7VUycOn/nlF+qPxz9ZM16FPlpK/fFYvelSr9F1YdQf
j8rMnG1/ZYdTfzw2lJeOjSyNoP54+I5v/8t4uyjqN36/8teTv2dGU388ZnW4
emNv31jqj4dVyS6r9Cdx1B+PoPfC8K9n4qk/HtttOyz6YUik/nhk/dOp7tW/
ydQfj9sjx2x64ChSfwI+jK25fCdZRv0Jxs83pX0vv5ZTfwICTslv9EpUUn8C
/k49G3Whv5r6E/Dk0zfHLS211J+AmOm/zp/yk576E+BeMjBP7raC+o3HZ+/P
WnpoFfUnYGTV+peKnHTqT0BF9zP95nxYQ/0JmHjtQn7/0HXUn4DHE/t1zmuU
Qf0J0AQFmPtc3kD9CXh9dqPLucOZ1J8Ag2LRV4cHm6g/ASd1HhvKR2dTfyLy
zHOf+P21lfoT8fqDpCQ2JI/6ExF/cP7srha/Un8iOm1Imfn24nbqT8S2haOf
ttm8k/oTcW5f3pCCnHzqT8SSGI8r3e7vof5EuE0OL3Hw3k/9ifAu1F151KaA
+hNxq69vyeK1hdSfiFFlj9fEDTlM/YnIzc5JSjY7Sv2J+J7sfD+u7XHqT0Rp
24wZ/VxPUn8izr6OXoMTp6k/EYmKjkMfh5+j/iR06/rTiE8FBupPQvCR4Tt+
9fiN+pNQ7OC8Tm92ifqT4LWjpL/Dk8vUn4RFytj0yvKr1J+EMxk/2tu+ukb9
SciZmvmrX9sb1J8EhzfeA9f0u0X9SThq43tiZs9S6k/C7pCbF1fY3Kb+JLSb
qvy8/qcy6k/CsW6uH062K6f+JPTIbNPY3uEO9SdB2aH1pfrsCupPQtCwETcD
ku9RfxL8H6n9/nxdSf3J6PBxau+DLR9RfzKeNoy98ouqivqTERC3Rptg/oz6
k+HwqElbfb/n1J+MmtNzbgxr/Yr6k5F2YmlWu4o31J+Mm3mFL0d41VF/Mt5O
2vvF69EH6k9GiTCt4SnbL9SfjD/NazalzvxB/cnQrk1utuJmQ9P/yxYk4822
JxaDtjcx2ZCMio9nHkUssjC5NBnNhq7s9vKgpclVxp67rs9+X9He5Npk+M4d
7NLicCf6f94UVNZdXWAdYmOyZQpy4lZ8eKr72WSbFExtovSYZNPfZMcUXI6Z
GL3Ib4jJSEGt9bx663mjTfZMwaKq+tgQ6USTJSkoCNxcPvSLu8nhKTjZ4HVk
+7JZJospWG3X5fO8Dr4mp6fg6p7jtns++Jucm4L/uZUXCE0CqT8FFrpfD/Xd
HUT9Kca/73RU7LQPo/4UxLc/VnqqIor6U3BR+fvjNl8TqD8Fzj4bbkpr5NSf
iou/724wdEwa9adibOS4BVX/rKP+VFw/HNzr65xs6k+FunLLN53PDupPhSYw
bou67wHqT0VCSbegkYuOUH8qrB5N+6zvdor6U1GouFs47sB56k+FKqnEpm7S
b9SfipSJEV6zR16i/lQccy/7dLnwMvWnYmHU/qf9z1yh/lR0kKT57Au7Sv2p
CJm45Vb1I3KV0YPf3Vn1cxH1p2K185bd9gvIgoiov9f0+3cN2VxE+I2p2svH
yJYixmgc72luka1E1GZlVChekW1EtKmJHLar0zWT7UWE+jmP9Z1NdhRxb7zt
W/9VZCcRrV6MXuV2kgwRcXO7ri98RHYVcX6Mz/7kZtfp/RSREXH3zKjxZB/j
9ZddtV2jJ0tEYFCzS00ekYNFfGsyPeWcUzG93yKu+uSuebuZLBUxs0y+PKvR
DXr/RWx6o2s3MZSsFWH5vOTq65vkdBGey4LVCb1umpwpQnEvxPNSDDlXxLiA
LnnyE+R8EU6eXoe315ILRGyfUBec1+2WySdEfHg/91XDyWSDiOYnvuUPCSYX
icgLkPUIU5JLjX3DLH4+toV8X0RBwc211YXkKhGHXabZnbxEfilCvHqnUX4F
udb4/dO8nvf9i1wv4uIvOW12vyMLMkz9WHwyuUEJ7S8D5taeedeKbCnDh4f4
ONuabCXDtp532j7pTbaRwW3n8EF7h5PtZZgoXy3fO5HsKEOetGlg+Syyk/H4
1GB1gwAyZGj6b5d9XcLJrjJ0yzl0vF0K2VOGkF6PB/6VRvaRIdn8mO/WLLJE
hqD4Th8m7SIHy9CxpOn7P46Qw2U4+/HfbQG/kaUyfPf0OXq1hCzKMHJ2+1Wf
HpK1Mrw5kzvrejU5XYZ5szdc6/6RnCnD7UzXbh+FUtpfhlT9141pTcj5MhSv
Ky4qsiAXyJBy75xyvyX5hAx+e06uHNGBbJAhobhBr5BO5CIZvC/KrNGFXCpD
wOu1dQYb8n0Zdmtedf3Qk1wlw8IIv2tP7cgvZfhU3Pz9+t7kWhkqN2V/b9uP
XC9DknDvfYADWZCj2Sd5utqRbC5H8V/ZpeIgsqUcVq3P/DRjCNlKDvfenw69
H0q2kePV0s6xIcPJ9nIELc7WHXQiO8oxqGb76AsjyE5yfJ49Y1eOMxlyyAZ0
f+Q2kuwqx0HPtw+vMHsaXXRpb+tRZB85xi/Xvu7BLJHjxd4Oxz+zrw+Ww/XK
mu4rmMPlaHPthaaMXU8qR6dBZo2usdcjypG1sdjwC3u9Wjn0QzwGHx5GTjd+
f2ezl3msP1MOv5X69UPY+5MrBzZZh/8ygO0vR/j1sD4T2PtdYHz/KpvEXLZn
+8sRcKV53zpbtr8cnqmypFts3yI5LF3WnphnzfY3fr+S6d+2dmT7y1GU2bZm
c1u2vxxd9wWlebVk+8sx/I8Ge242ZfvL4auPUjdtyPY3vn+LB9ua1dOfZ0GB
eRf3KlJes/tfgY3br78SH7P7X4FFbd+ub3+b3f8KxIruBVMvsvtfgZaP93Qe
cpTd/woUdSvc+tdOdv8rkNNoZM2yTHb/K5B3fM+033Xs/ldAmCYZNiaR3f8K
PPjq9WfuUnb/K3B2o92lJv7s/ldgTPKFc8HT2f2vQMdKTfo5sPtfga+PXw1s
OIjd/wpk1N7v7dyT3f9GWxqKl7dn97+xd2BF1kEzdv8bX8/cPqO/f6TnY7oC
9dLbj/xekjMV6LHWbsa5SnKuAiH/KDt0KSbnK9DhyVezkDPkAgVWZr12Wbef
Pf+N79+Sk4q0HPb8V+Bj8KasSavZ81+B3q1bZ59NZc9/4+ud9+bGm+Xs+a+A
X13M+rsL2PNfgdONsk7HTGfPfwVKo49vvTWGPf8VuLz9Ztrf/dnzX4Gt7eb6
vrRmz38lEm1X/fzOgmyuxIO+EcP8v9LPL0slhmY2P7TuNdlKibajvOyER2Qb
Jb537u7/qoRsr0TR4+ixXpfIjkpESSe1+3KS7KTE1IDuZYkFZCihcT3cKX4X
2VUJb82yc7tyyJ7G71/oM+tBBtlHiSc9nzSuX0GWGL/+2vsj9QpysPH1P90e
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
vv8UK1vardjl/wD5BhbV
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0., 1.1368683772161603`*^-13}, {0., 
       1.4210854715202004`*^-14}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.3}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -37.916666666666664}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
39vFLGiWSufzViE96+CZpAx6//mpoG11r0eb+ynUvwoeJ327zBhIDlDh6LZ6
jv3rk4NViDNtrvehOzmyaj1/1Nb+IZJFFVTPd7xPyicbVPj8z4E2P/xE8yWp
UPODYt2vy6T3vwpzThwpO72fbFZB3nv6vE255FQV3CsOjvN6T05T4fnlIHmC
PeVJV0Ef8+Tq88Zkiwq+xfsH3W1JzlSh3r9xsrodyVlVr5+68edtP5PzVHh8
ozLNMo1sVWH62MNefVeRS1RY02Hja/tb5FIVIlrkFeY0of0tV2F9tvPWkilS
/2p4v1mo25Is9a/G0a/D/91xgyxTw6cg5c3KMrKTGusfhmtXy6T3vxotOt74
Y4Qz2UWNyaV3XreoR3ZVw3Dk/aPYYql/Ne4ZT++ru0HqX43aAW2qZcuk/tVQ
6Z6qm3lJ/atxKLiopqyX1L8abUbOdx3xmD6fFWoUaeU1i2bS53eAGpMwyFl1
gT7fg9XIr1UnvrKV9PmvhvPGRY+uptLfD1GNdxe27OrzdBv1r8bffeVDfcvp
/iVJjVbbtL+v86f7n2Q1/rkatt/ynu5fzGp8GnPP6cQZun9JrVrf0k6F48/T
37c0NSxLTONi2pPT1RhTd8idL03Jlqrz3b3hEqYjZ6qReSF6s96LzpelRmf/
Jr8Vd6L58tQ4tbagvHod+ntpVeOJOql/1l/kEjUK+zbYvmEarbdUDbsnPUua
nyaXqzHr3RdxXCFZ0KD20ORue16S7TU4kLLn4nnpuEyDgykfUg78RXbS4JdN
7vv/OibdH2qQkzt0rMN6sosG976sm5kdJt0vaiC+Lmn+jy/ZXYPuBU9/uNaL
DA1qnpj4bGUT8nANamVn/ju7jPJ4V83nbTowJ5fsV/X6R5GVm0+SFRrc9fTM
ddxADtBg5s3Z24rCpftNDV6+sKtR048cqUGo8M97kwdZ1KCB5vcxS5qTDRp0
dP8u2/KF9jtJg4WeGxpFW8nJGnyYnBO975LUvwa9IlxqDEshp2rQ9/rNBX6J
5DQNvNeuP1S0hJyugV7uP7BIuv+1aDDD7Jvq35ecqUHK+e7OY+XkLA0GXt95
9Nz3Uv8aqL063d32iq4PqwZzB4+v/m8OuUSDjx2DMm+ek+73NXi1/uGd5nvI
5RpkLKtx5OEKsqCFyx9vdU0iyPZabJ3S7rZFQZZpcde/XkHBSLKTFmcaeC4M
6kWWa9Fin6XPIjnZRQuHrWNj79Qmu2rR38Hy/ZGPdH27azHyasrk0iLp/k+L
3B33b2/NIg+vGj+xw9dD0vvHWwvvwPPT2xwg+1Wtt9WBmIpk6flSixo9NG97
6MkBWoR2Pu1zLUx63tRi9PQBFRlzyJFarLe/Ya7rIz1/ajGxzc2sk4PJBi1G
HXR6dtKNnKTFU/uKZIe25GQtfiyZuvNoY7JZi3vzH/mm1iCnatHtiOfy0g/0
/JKmRdGgfae1JeR0LdzGPT84N59s0cJQbHmx+gY5U4stl662++4COUuLtMAB
PS4cJedpUSekMihjN9laNX/v1FdfN5JLtBC3tayrTSSXVq3XrdFvwxPI5VrM
i//1xEjpeVvQoVrW2c2J88n2OjT5qve39yfLdNgfeGb5eW+ykw51PsoaHxxK
luug8hmTntOX7KLDx8LADt1dya46DJR1nPt7O7K7Dp07yeoZmpOhwxFHPydV
A/JwHfI2v+hwsCbZWwf/r36TalTS84OfDhmx1slJ78kKHfYtrWnv9YIcULW+
/aMHdSokB+uQ8oNLed975Egd2vi6loRmkUUduoXU/nT/Ctmgwxn3w50DL5CT
dLh9M21g69Pk5Kr92T3T48thslmHvWJKtpBCTtUh/8DBxl22S8+rOuyaXlYW
sZGcrsOHGr4eL1eRLTq4LZj4MN5AztTh77if7/RSSs/zOvjGLv9SP5qcV2V7
1SCHELJVh8HtruxrHUQu0aF2hb7+5LnkUh3ST78MSJtOLtdhW8CKNe38yIIe
92//b2f6OLK9Hjvj7cIDRpFlelTOn13dbSjZSY9W91r2cx5AlusxZ7CieisP
sose+Va7ZX3dyK56hP62OSj4J+n5r+r1OcX5lg5k6NEkt25Whzbk4Xoc2HWo
1f4W0vdJeowa2ebGIEepfz3SOj9/+7aB1L8eOS+jJp6pI/Wvx/7oatU3Ss+b
wXq0T5z83lRd6l+PultG917zhb4/EPW41zJxxdFyskGP+l8XdCh+R07Sw8et
6aeOb8jJesR3zsjTPJe+n9JD3s7Z+q6YnKpHwa1W1si/yWl66BtO7urwkJyu
x7NPv85Py5O+v9BjcsaVo4E55Ew9VH3fNemRRc7SQ/Y5amb9G+Q8fdXniSWj
4grZWvX6mO8dyy+RS/RoYbw9zt5CLtVjk7H3trbS90XleuzZ98+9celkwYDd
HXrXWXGCbG/ApVMljvlpZJkB1teKFj0PkZ0MCBy3+9GOfWS5AT80fp/huJfs
YoBdv4TZ23aSXQ2YP7y02G072d2Alrt6+uZukb4/NCDYMHeVLpk83IDKtNbX
sJ7sbYDzcvss+zVkPwNubR65wbqSrDBg3pvK4ZcSyQEGvNoZdvWogRxswHpX
mctBLTnSgGX99o06rpL6r5oftcb/mSD1b0Cme1mLolipfwMGPam8Xita6t+A
LpVPeg2IkPo3oF3q08D4UKn/qvXV/CP6ylKpfwOuN307osUSqX8DXtYsKosK
kvo3YHG/4Yv/DpT6N2Bfo5OHJsyX+jdg1O7CY7fmSP0bEOW2LnLiLKn/qv1K
v+NcPEPq34DSRzPXxkyT+jfAy73yTMupUv8G9NpgOZLpJ/VvROYkR030RKl/
I75zym/c20fq3wgc9V307zipfyNOfvdWd+UXqX8jdLfPxm4ZI/VvxJP254eF
j5L6N2KBl9sx/xFS/0YkrZv8ebiX1L8RAQ9cHH8eKvVvxO8nPr7uM1jq34hO
vR9u6TtQ6t+I183nvhk2QOrfiLqHcoZN9JT6N6LO4/ODl/ST+jdi+7Vfmq/0
kPo3Ir4i9fRx6ftD0Yj7doXVinpJ/RtRrezWrIY9pf6NmBLfr5t3D6l/Iy70
m/DvKlepfyPmnuywO6er1H/V+Zaf+dz6J6l/I1o1XT1uaWepfyNO5Wc73+wo
9W/EGYP6WWcXqX8jVM3D1avaS/0b0TzQrehTW6l/I3I9nfrO+1Hq34jazZU/
Pmwt9W/EjI7655PkUv9GWKLnJuS1kvo3otTqX+rfUurfhE3LDcOKm0v9m+Dh
Jx8R5iz1b0Lg2SEdHZpJ/ZtQ81DUM7Oj1L8J3Zf+tLh/U6l/E7rMHfSntbHU
vwkNDzy7Ymok9W9C8B+H8no2lPo3oXpu9P7HMql/Ez5YK3tuqS/1b0JvWXri
xHpS/yY8Ox/ypkFdqX8T8oKWtsquLfVvwv2Ok19sriX1b8KI07J9cx2k/k2Y
9CB5tJu91L8JKLh8+PuaUv8m7NQNef+ghtR/1esX4vv076T+q9YbvOf1Bjup
fxP638vdEV1d6t+EgVvtvGdUk/o3wSkjPmasIPVvgvXIxCKPr/R9vsWE8Lah
nzpXkjNNiD119a38CznLhPnrP59r9pmcV7Uf89tOb1pBtpqQ9b+t2U3/JZeY
0HXuEqHlJ3KpCX3u73JpW04uN+F9t6wBP30kC4lIvd+9eb8PZPtEFIRWOzK2
jCxLRJONl7vOeU92SkTgo25bYt6tHfB/kJg/eQ==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0., 1.1368683772161603`*^-13}, {0., 
       1.4210854715202004`*^-14}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.3}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -113.75}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
h/emkq8p2dSfDOe56uaPuu6k/mRIgjNG/QjLo/5keI94ddCm9UHqT4aZMsws
1uY49SfjedynBXNb6ak/GS83djy/Me0C9SfjRcOFyy52vUb9yXDtULpyYKsy
6k/GxxC7x5sOl1N/MtoNbzzx7LDH1J+Msu6S4Gs9a6g/BcNLpj/IsXtP/Sno
uCure6jTF+pPwZGaT0ce9mvkyfenwLfBdv9mdqa8kQL5qhn7rc3a8PZNwarM
efVyfUfeQSnIm+HZvpO2O29JCnpMPKYyqbTnLU1Bk8Lh7pHDnXhnpiDwULJ0
eKAr72zj6wd+qhyb5sa7IAW7t5za/mHtYN76FDiXHQu9qADv0hQ0erSrndmE
EbwNKYi6/LrigusY3rXGn392cGmzp+N5c6nY6txqn2G9H2+LVBSN7H9x7Oqp
vK1TMUTyZNBpVRD1p0Jyw0lfGTaf+lOxaPKGo2lLw6k/Fc9b7z7W52oM9adC
M8blZP2QFOpPRefhbQ1drRTUn4oTk9teyjqspf5U9HAqcSwasJL6U3Hm9p7X
p2vWUH8qbBZuTl46czP1p6KBz+g9BT+2U38qPtoZkia77KH+VBS+/6Vn21YH
qD8VFVMveMzqdJT607DWateqsPiT1J9mfD89E/N54FnqT4OdS+WEgn6XqD8N
N+bccuo88xr1p0E+tq5Dvuwm9afhpePacpXPXepPQ2R58vp+qyqoPw2f5anj
PN9UUX8ayhr1/vlcUDX1p+Fb1u3KU3PfUH8awuKOHMno/i/1p2HYjbgP5QX1
1J+G+ltzIgZ4c/xz69I0vJni3ebi8sa8DWmYttR6ZnVpM961aThS5NfsiIMF
PedOR+8eWQ+HDmrL2yIdsdNDqtqOt+JtnQ7z560Uu/d24+2UDslcRWC75z/z
RjpyTj30uznAgbdvOj5UZMe49nLiHZQOW4c79fNMB/CWpOPQEvMlWys8eEvT
EZra8UTwteG8M9Mx/1N80YcXY3lnp+N8+PmrG0b68S5IR9mAfelvZ0znrU/H
H/ZbV82UzKH+dJxLz+m1cFAY9acjs/zB7hHD46jfePzh9rP2W8ioX4oD7l2t
1rTW8TaRovPaZa1er/+dzocUyiVxRW02/sHbUgqVzq9udoMddH6kWFQlv7Zi
5x7e9lLk2Q9Zsaa6gM6XFDbP/bhBKw/zdpPi1IVnjxv2OU7nT4pVNQ1M9+cV
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
5q/F4VlBJ2yK6f6URAvPGfltmrTZSvPXorSllbPP2I00fy1e/JiU/dfHLJq/
FtLAil/yEpfT/LXonfy0q/nyDJq/FkVb/DYVT06k+WthlRE+8uzUxTR/LdwK
dqpet55F8zdub7jL2vDGm+avhWaZW83yR+40fy3emX51+nHWjuavxeweof3+
7NCe5q/FxZjaX0o7NaH5a7FzQ/2wkdV0P9SgxerqX7UDMp/yrtbCtCZ9jkd/
uv9aq4Wr2X7JqMYlvOu0yNyX92lG4Cm6/6vD8DMWGz/OOcjbRIeiDQVfrRvn
0P1gHTQTL354vnYTb0sdpuyP+PRx9u90f1iHSsesKbptdP/aXodOb7b/bP5G
SveLdcjbKa9d0TiOt5sOOzp1M+sWuojuH+vQNMtMn5n+G28vHa63WpQ4xduX
7ifr4PIqbfQ/8Z68p+qgP7ryWmNdL7q/rEPm6B3rbee15x2qQ93XLV2daxrS
/WYdNhUs83GcXss/z0jQwbT9Nzszrwp6/qLDo9bFKJ14hbdGh4HFPyeuzyqk
5zE6mFtPubG4bg/vdTrcjHMOlST+Qc9ndMhZsbTRfZcVvHN1iLFfdMn9sIye
1xj79u1/5nOBnk8d18Grpr7du74L6PmNDh4nmpabrfuN92Udch0TVrj+Ts/P
SnVINF7DvvXevO/poA3x2xH/lZ7PGXTw3na71y5XT97Vxu3fp7lEurvR8x4d
jmzsY6te48q7TodRci99/8X0fJBbgu85EdkznJx5myzBj1XVo0OXOtHzoCWw
NnVwdR9LtlwCb1cTx2kjnIb8HwUNVzM=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0., 1.1368683772161603`*^-13}, {0., 
       1.4210854715202004`*^-14}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.3}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -189.58333333333331}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd2XdUVGfUNfArihJLxI4dG2JBKRYswBYbYsOCIrZRVMAK0oZ+pxdCAgoK
1hGNIlhQ0aioGTt2LCjWjC2iWLCGiMGX75vDel+P/2T91uXhmf3sew9w02n+
iskLLQRBCKgtCP/vv+Z/5R7Cj//wI62YrZmbM9swt2O2Ze7M3JXZjtmeuSdz
b+Y+zI7MTszOzC7M/Zj7Mw9gHsjsyjyIeTDzEOahzG7M7swezPjRIrMwjF1n
FjzZdWZhOLvOLIxg15mFkew6szCKXWcWRrPrzIIXu84sjGHXmQVvdp1ZGMuu
Mwvj2HVmYTy7zixMYNeZhYnsOrPg86PBLDIbmYVJbD2zyGxkFiaz9cwis5FZ
mMLWM4vMRmZhKlvPLDIbmQVftp5ZZDYyC9PYemaR2cgsTGfrmUVmI7Pgx9Yz
i8xGZmEGW88sMhuZBX+2nllkNjILM9l6ZpHZyCzMYuuZRWYjszCbrWcWmY3M
why2nllkNjILc9l6ZpHZyCxIfrQtM5glzCKzgdnIbGIW5rH9mcEsYRaZDcxG
ZhOzMJ/tzwxmCbPIbGA2MpuYhQC2PzOYJcwis4HZyGxiFhaw/ZnBLGEWmQ3M
RmYTs7CQ7c8MZgmzyGxgNjKbmIVFbH9mMEuYRWYDs5HZxCwEsv2ZwSxhFpkN
zEZmE7MQxPZnBrOEWWQ2MBuZTcxCMNufGcwSZpHZwGxkNjELi9n+zGCWMIvM
BmYjs4lZWML2ZwazhFlkNjAbmU3MwlK2PzOYJcwis4HZyGxiFpax/ZnBLGEW
mQ3MRmYTs7Cc7c8MZgmzyGxgNjKbmIUVbH9mMEuYRWYDs5HZxCyE/GhrZltm
R2Yw+zBLmEOYReYUZgNzHrORuYjZxFzOLIT+aGtmW2ZHZjD7MEuYQ5hF5hRm
A3Mes5G5iNnEXM4srPzR1sy2K3G0tE/TWUt83P6/HVeiInNaSEOfCWZjJTZM
Hr9go/VYs31WIqhymLDEZrTZEuaQlfBN6zciItDTbHElbg32lkgrB5mdshJ6
/wnW35f2MtvAnMdsZC5iNjGXMwthP9qa2ZbZkRnMPswS5pAwBB3p56xsPoPy
h2GOW3+rg57klDDImvT/3+uGMFzv3y/vvc6P8jMbwzAhx1n+X9Z0yh+Gz8sd
s3fMnUb5w3CltEf57dOTKT+zEP6jrZltw7Et3/394GtBlD8cdov7Otn+FED5
mX3C8TXU0WtdHFkSjrufHXVPT5JDwnHqs+OnyhKyGI79of/neko4VHqX6uth
lD8csWecO1zKIeeFw2dVPiz8wik/c1E4uncYUGH7lmxiLg+H3+2QE2u85ZQ/
Ai7DVqJHMdk6Al1snWe+u0e2ZXaMQAvl8MND8vWUPwLufXV/W3VIpvwRWHQz
6ZWDy6+UPwKv64yz/ORKDolA/sApH4obp1H+CNy9Mm3giMXplD8CC/RTNMcr
VlP+CHSovbCfQrKO8kfg57KAB3/uyKT8EZA/lpy07ZhB+SNQtfVWUHivzZQ/
Au3PFvS938FA+SOQu/fM8QelWyl/JDLPjaz/NHAb5Y9E2zDhs3peNuWPxJMW
mkcnPuZQ/kikNZv/vsGXPZQ/ElePLT40zjaP8keiKki6Mbv/fsofieLmzf7a
0ecA5Y9E4L21+xaOP0j5I/F61Ias/nX+oPyReLX50qbnp49Q/kioVl843772
McofiaTVTaTx/5yg/JGYbmwv7x13kvJH4mWr6el+6tOUPxI3S6PHZTQ/R/kj
IaZ2tYnMLKT8UXjh+mz1I7eLlD8KDz7nzPe5eJnyR6EdAjoKD69R/iiENHgf
U97uBuWPwrp6/S72rneL8kdhR4jeLnRdMeWPQquv90bZHblN+aNg3L3kxti6
9yh/FOJzGrRL7/GQ8kchYFNAk6hgE+WPwgjtdIedtx9T/ijExkfZt9n+lPJH
wa2zM76UPKf8Udjw3Bjmt6yU8kfh87K+5wMnllH+KLgsmxA3deMbyi+Fe0uj
Vru7nPJLkTQ2a/fpmA+UXwqLSZ3zwrZ/ovxSWP6zqv2igC+UXwpF3snhzz9V
UH4p0tZv6ty2uJLyS5FeGvX9v/Aqyi9F1IRrQW9H1nI355ci92tqK3Wj2man
SBFbV+Pt/LaO2QYpnJ4nbjy8up7ZeVJ0Mm64tsqvvtlGKRrVa9qwWf1GZhdJ
kRFu6bB3kLXZJimWeX5TdW3T1OxyKbaeOJu5qEdzs4VoHHmi8IpXtTTbOhpl
Ugffd09tzLaNxrxeL/6asbOt2Y7R+Pty6kOnFx3MRjTO/vToz3zPTmb7RKPd
5x35xRO6mC2JRqp1VYO/fu9mdkg0+vuNPPUE9pQ/Gm1CE9+8t+9F+aMhXvZo
Xyu1D+WPxqvBFtP3N3Ci/NHQ2b6ZdxIulD8awyK9927R96f80ai3+sGusx6u
lD8aV6R1tnliCOWPhv/QZnW8trtT/hhYP3qyXeM2jPLH4L5TPaFy+nDKH4MO
Y+KeLT02kvLHoLt/eNicYC/KH4Mtwab7aQljKX8MVn1zb6W7NYHyx8A5NSF6
77RJlD8Gn0ddSnoaOIXyxyBo+K8xc9N9KX8MXo4S1596NZ3yx6DP1ikfnq7x
p/wxWBR3MV6aMpvyx6C88S7t3kgJ5Y+B/1WPUX/6zKf8MVA8DKv8PHEB5Y/B
0JJ7O3qKiyh/LGb9Ot459ngQ5Y/Fy4i32Zcsl1D+WAjDHb+vGbWM8scicFvH
LZM6rqD8sZg/cvqssxNCKH8sEna23PP1G1kSW33/u3TD2lDKH4t+umtHPjZc
SfljcWbpH92j/ckpsQhq9pckfTjZEIuJDbv+7tGenBeLCQ5jo72dyMZYpKnv
fel0mlwUi8KbTWqffBdG+WMxYm7mp9FukZQ/FlXzZhUXt4uh/HE4MO3495ev
Eil/HAZ5NnJItlZS/jg0GDxbPTRZR/njcGrgh1WDx6dQ/jjUntvc/kVBGuWP
Q/1r95q96L6O8sch48iy4Q4zDZQ/Do1kGW6lY7dR/jiU+2+IiavIpvxxKE4M
9UhX7aH8cXjQvoutnXo/5Y/DuNiB99/MOkT54xBdnPGf1eOjlD8OFgvbBgyw
MVL+OOxSFSyXDDxN+eMQqsr5Z9jjc5Q/Hnltg6r+7n2J8sfjjW+PhmLrIsof
j2W+likx9W5S/ngk1wsNnhlym/LHY0P/HvtMC+9R/ngE/tptQ4/KR5Q/Hr/G
F7zr0uUJ5Y/HYqe6L2z7Pqf88Qj53n+8055Syh+PTI8mxgl7XlP+eOzoknMy
enM55Y/H5B0uiXauHyl/PIxpC34N6PmF8sfj5z4u3zYm/Ev543Hn25k2iR7/
Uf54JM7UXNtTIND/502A8dGzyvE2tc22TkDCibaBRQWWZtsm4FVy7lD/XVZm
OybgrkxWtPRdA7ORgILATx+7/dLYbJ8ETD2wUtX+TBOzJQlo2eK2fe/PzcwO
SUDmfR+HmbNami0m4GTKP2Ejv9mYnZKAPLuge1fvtDXbUP31Dme+DXjfwey8
BJTv29umTrdOZhsTIE1+2TzgfWezixLw75Ordh0fdTXblIAA1fDDa17ZmV1e
/fVL2xZVtuhB+RPhOip5X/mcXpQ/Ee0MM9s0PuNA+RPx+dYczxv2jpQ/EZ3v
FPu01ThR/kTI7X3nRHx3pvzV60sD3qlS+lH+RNg8bvzgUr8BlD8Ri+W9nL4+
H0j5E4FrxzK6GQZR/kTcO+2i+23eEMqfiCTNizute7pR/kQs2rf84d6v7pQ/
EY+b/ZE1ezEofyISX7S9GDp7GOVPxFx5zyZ9ZnhS/kQc9/nbYVXAcMov4tHC
iMlT9SPMthJxqVlB6cFXI+k8RKxq87pHqXG02TYigqWZPkMSvOl8RFwMHOnc
5+EEs+1FVDmnZpwonUznJeKoNjBpZUs/s11FDJ8xbea2hnPp/EREt6wb8eWP
ALO9REQI83BhUhCdZ/V+m6YYTtZfZrafiKBxc4ftKgmh8xVhnRYaGd0yzOwg
ETFlHhcshkXQeYtYtszl/qrFUWZLRaR18t6YsTuazl9E19gL6dp2cWZrRezp
tEW3PTeB+hDR2Oty/NFk0ewMEW6hT68fEGXUjwjfcS8m5n8jZ1d//dv7Aa1f
k/NEeNYrPjHNn3xYxMmPmSsmBtL3M4p4Nqr9OOkK2q+wev9Zc8dl3I6lPqvz
HzmuznWmz1siop5Xbe3srEjqV8TzCXck1weGm10q4oTz6m5jv4VS3yJeVp5y
X/P3CrMrRBy6FNK1++Cl1L8MjQ4VdT31js7bSob48YGbr9daRP3L8PGxrnVh
MPVjI0N44dEr52znUf8y9JenvFvrPof6l+HUG8/wzAJ/6l+GGelVdrt3Tqf+
ZXjf4mHw9a9TqX8Zeq2QqTZl0f3iJUP7XXVOXU73of5l6JSRkn1j9XjqX4Y9
w+wHPltC959EhoO5vpY22+j+DJKh1b7RvZs40v0bIoPT7eNhi63ofpfKMP7F
8Z1L7en5EGVYN/LUdfemHtS/DN4nrjfe7DGU+pchy+W/vbdO0/OZIUN0TvNZ
Kb/R82uQofOhadsvZ/Sn/qvz/uNf5lniQv3LkO6ww7l0NM2HwzLs6jy8dM4T
midGGTquth3nO7wv9S9DwZKHBxcINH+Kqq8P/fzM8n1P6r+6j4+/RH6tT/PL
JIPd+8nrj4/pTv3LkPn8cZuT+7tR/zLY2/uMFibSPKyQ4Wz2BZ2uQxfqX44r
NyvfVLWk+WklR5kxftyt3jRfreW406vh+z/8bKl/OSbmTD9v2acj9S9HbXmX
nKpL7al/OW58y154TdWO+pfjc6/szcd8aZ67yvEk9PGgAy5tqH855tTVX77f
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
3EC2SYJCXmTRc+tO9/8Bydo7cQ==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0., 1.1368683772161603`*^-13}, {0., 
       1.4210854715202004`*^-14}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.3}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -265.41666666666663}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
W/N/d/Wh/EKEHayu+f7cifILUW+mam9p1Y/yCxs/T/TYez79Kb8QkVEN70Km
OlN+IRbXqC43rScXCWF9579/ojYPoPxCVN0zN50ZMJDyC7FWd124pZasE+LR
gJTq0NWDKL8QQsndye5OLpQ/Ec3aac+dvUk2TcTxqdOHvkoZTPkTETqqWzfR
N7JzIm5HqCKzL7hS/kRwj93GOS52o/yJ+CKeerS/hzvlT4St583VXCsPyp8I
m6IObl8ryXwiTsz+Uv3P/T8ofyKC//j0s6FuCOVPRLVb7UOdlSflT0RuUsDB
jV7DKH8iXuUFvj2wzYvyJyLv4+spFVmg/IkQ7s6Z/H3RcMqfiPNJB/q2nO1N
+ZMg9nRd4Rs0gvInwXyT6vSjhSMpfxJu+k+7GrJnFOVPguxh9+czW46h/Eko
vd7BtVTqQ/mTsGveJK7GfRzlT4L68rZXz+p9KX8SDo30mlv8fTzlT4JixbUW
Eab+lD8Jk0qbzL08MoDyJ+GZ2ejNQ7cEUv4kBEwu2XbYcjLlT4KXU7/V+aeC
KH8SDtvUfERuMOVPgtm4gxW2OVMpfxL2Dyvo4VM6nfKL0G2vo6fIchblF+He
1SZdXwYIKL8IsgOttc9z51B+EUpy44YsM5xL+UVwuS18VJY4j/KLsKzr0H0b
jRZQfhHC7fjKhqIwyi/Cm0uj7IOWRFB+Eewsjg+rHbOI8ovwTdlhYIjvEsov
wuNUv7aXpMsovwj9r0v6XeWiKL8Ix7xnZ8Tw0ZRfhOq8PhNn+8VSfhE+jfgn
cNOGeMovwverpy5mrkmk/MnwiRY7xCanUP5kfNoz0G3RTDHlT0bVbfeuwhvp
lD8ZL/OKp94PUFH+ZDQ9LeSPdlpF+ZMxcLZsjOsfayl/MnbZN+/z+MpGyp+M
VVs/rF7fJYfyJ6PaK3RpTfJ2yp8Mu4/j2ywL30n5k/GXw8qO9t/yKH8y2sdf
tRx5r4DyJ6M4caJJs0u7KX8ylMIeN6MvknXJOLr4SoThT3p9XTLmnxm5oSA3
n/KnwKTyu+HLT7sofwq8svtG3+hH69ukYFNZ6yeekbmUPwWj+116/eqehvKn
ILjW7vEs3VbKn4JXsyqDVkm3UP4U7Jx0dvKelZsofwpkUctc9zfPpvwpMA0+
m7/8Hl2fzBTcuLU/aHTDBsqfgtiEG1VeM8lFKVh+w2z4/U/rKX8K3ruUdbh2
jFyegjct/Qf20pB1KTh4Zvb5/r9cl4LDqwoaPhSTuVT8MLA0Vz8mm6aip+fV
eYHWtJ5NKrbeehwpKiE7p6JwbvrIlufp8yIVDSmzXjmIKI9/Kl5eKZn72O5X
/lT4fc0b+yGYrldkKvrnT4j3v7qD8qfi0D9DBiiPUn0yU1Gyeoz/hbADlD8V
SSkH+wn7H6b8qZC8990S3uY45U/FszfLXrhd1lL+VKyLv77y6IwLlD8VVRmL
UupWXaH8qbhQ5+lu+egm5U/DnBCVw4f+FZQ/DZ2dDFePlN2m/GlIq953UhNL
dk5DQtWEQ5PP36L8afCUlwnNplyn/GnIby/s2GIPrS9Iw8bla1tEiE5S/jR0
TAgyc7xVRPnTEBpr/HT8Dfp+ZaZhosvW2xN86fpq0nDo/LtNd/PpfipKQ5uo
uGkzzake2jR0HzpzTLj1ZsqfhjjT8tee4+h669Jw9Za7a1cNvX9dGi55LVwx
aBh9vzkedXXBptM70/ffmEd+p94tzg//dT/waObusK7rUXq9FY/MVasUI1RU
Pxses3q/+LEzl+5fBx62WwYcXrCI7gdnHhOzhptM60rfD3ceR08NX6C9S3nA
45Tf7eelz1fo7cNDbfm0Bhkyup48hg23DvtaTftTCI+me2ydevvT/ibgkXou
ffOHRYv1Dm+04dvsDp/n0/Xm8S28fEldH9qfhTy6SJ51E9vQOM/Drt3U1zci
aH9W8mg5d6Yg5z/anzN5FD0Mv183md4/i8fnycd6xsYupfo05jeJebLaKVLv
Ah6T62NzIr+Ri3jsqcv/sPsU7dclPI74T1/YKoX2ay2PTcMM9l1sE6N3GY/W
b9f6T73/az/n4VHz+tj/zn/A482JNy7CEvo90PG43zoxd2DFQr1refT/lOh4
uR39/tQ11itt7OHLr0L1/tx4PZUTbn23JnNi7JxrVXl+Kv2eGYux57FuvMiE
5puKkd/szI/sHLoeVmKYt9u0an4h/T7ZiPHUPvND7UfK6yDGjYHtx+8zpDzO
YjxfVlF+3SCO6i9Gm5mCMfse0u8RxOjjFFAlVwmp/mIsvnLHqKd5EtVfjLaW
XuMfTRdR/RvHX835sSU2meovhrP6UY+J4+j7ES7GgNI2skIdOVKMRZGrPti5
plL9xUg1mCPaEEzmxbhbWnNjiidZKcaX3Rb9s37S/EwxigdaRxcUkbPEiP/o
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
7NKxYf/S846/AkGR1/03uNL5J0SBp85b5550pucHgQKq0+uXnPSi54dwBYr+
NcvRHafzVKQCHnd6jfM+R+dtoQJ+cr5gTuav81/j69+8v9nQm86rSgWk2y70
PphK5+1MBSQHA2cEZtD5NkuB8o7XcxZk0vOpRgHflrtWairkdP5T4HqO9OyL
eXQ+LlLgsf2RuqlN1XT+a1zvXk7b8/My6PynQP3p0Zbxajpflylw/4Jmj3Iv
PQ+XK3D0Zm3Yam/qrz1ofL8DXzKGHKbzvU6BB7rTfVY0WUP1V2Df7JKmHfzo
PF+nwCvv/c3fz6Dz/mcFmhe0z2/T+1f/Rwm7c3Vh86rJxkrYi1fmxV+h/oKp
EoLqD04/OmZR/ZXwXbuumVhHz/M2SlgMRGXHKOr3OChRHzzMcYAn9R+clRAN
MsQDMfUL3JXoXpfjcXsd9XvQuN6YsoI5Lagf4qNsfF4cGTk55AjVXwmf/UlJ
UbuofxKiRO3CZZMLx5yj+ithXNP9e+zHy1R/JRIvyLIrFlJ/JlKJ/e12HKn8
4z7Vv3HcedxB+yNPqf5KfBiacPiVZQ3VX4k03cNdSw1eU/2VCH7xxuzVnjqq
vxI5PsZrPXp+ovo3zjcpKn6+6ivVvzGfddzVdnJO//8oipT4NJ1rHjvLUO8S
JXaf25w2+Jmx3lol8t/J2tVbt9G7TAnro1a79rcy17tcidwBdy7MEbTX+4ES
8hapqYEvrfTWKdHpZ1q8KrCL3rVKFOJMpxybbnrXKdGm59h2HuE2en9uvN5X
OzlweWROhYDaHG6xjGyswqqOo3wyAsimKkySWXlX2pKtVOA7xvbCYXp/GxVe
7quPGHPeWm8HFbrfqFufmttVb2cV5i09by3Lo8/nrkLUSreQxy876w0VJHX5
PXx6kn1UGJSdVrbKupPe/ioYdbxoGfGa8oaosONt2xYjHnXQW6BCy7V52dM7
k8NVKDS7+/2A3FLvSBVmNDs5JvQZXT+hCk32fZpo50jmVQh7fuYCMiz0Vqpg
qlx4ZLAtOVOFrpGnbAPOtdM7S4UHnoM7+7uQNSooD5cahSylehWoYCvIcPq4
14zqr0Jmi3XmVr3IJSo83TdS/dc9U6q/CnVz6y85LieXqXDK7lGrlX3I5Sq4
/9PsdH9lW6p/4/Xc8MRPfpW+LzoVtOdX3v3YglyrwuJPA8bnO7am+qswJnXZ
mGqvVlR/FewCN2qCZ5pQ/dX4sqlUai9oSfVXY4dgEu44tKD6q3Fpa+rf/W8Z
Uf3V6LD5+8wUWXOqvxohVxpqzo5oRvVXQ/JUnvH8vQHVX419LQZYRiuaUv3V
yOw9ImWMZROqvxqKBwOSdnX4Sfe/GquG+K03WPmN7n81tgTci+ywsYHufzV2
eTa9bLP6A93/apg/mdbZouw93f9qeHVq20O+8hXd/2qUuhd83aqg+1uoRqRl
vmToah3d/2qcuBxTWPzpId3/aky6aWeU53iP7n81qjyvDpQtpP5wlhph2zTu
Zz/doPtfjWfxYfNeBlJ/uUCNdYMiThpoLtL+r8Z/M4avu5dH+1WJGtvSj43c
63mW9n813hp8aXsj4zTt/2oceT/9ppPfCdr/1Uj41P2p26YS2v/VyJAkVJ4P
Pkr7vxrTwncsfbuM+uO1auzvVzQxu+Ig7f9qlNz93P5iZDHt/415Tm7vNga0
33IZmN3uwktx7H7a/zPQpaGmNL9wL+3/GfjPEa/quhTS/p+B0erTHutP7x72
P9CWbyY=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0., 1.1368683772161603`*^-13}, {0., 
       1.4210854715202004`*^-14}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.3}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -341.25}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}]}, {}},
  ImageSize->{
    UpTo[600], 
    UpTo[350]},
  PlotRange->{{0, 735.}, {-379.16666666666663`, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.826127852226667*^9, 3.826127958188397*^9}, 
   3.826128254803986*^9, 3.8261297300022593`*^9, {3.8262924819647083`*^9, 
   3.826292511650773*^9}, 3.8262930041195717`*^9, 3.826293572906395*^9, 
   3.826294037025831*^9, 3.826295057132238*^9, 3.8264640130771008`*^9, 
   3.826537743002417*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"5e886e4e-9a26-4a5f-85da-7739a678c55f"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
    GeometricTransformationBox[InsetBox[
      FormBox[
       StyleBox[
        GraphicsBox[{
          {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
          {AbsoluteThickness[1.5], Dashing[{}], 
           CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
        StripOnInput->False,
        GraphicsBoxOptions->{DefaultBaseStyle->Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]]}],
       TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
     82.33336525522746}}, {{2., 11.887527123609056`}}, {{3., 
     69.96861860876383}}, {{4., 13.07603990902027}}, {{5., 
     0.004316883033800014}}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Total Variance\"", TraditionalForm], None}, {
     FormBox["\"Neuron\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 82.33336525522746}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.826127852226667*^9, 3.826127958188397*^9}, 
   3.826128254803986*^9, 3.8261297300022593`*^9, {3.8262924819647083`*^9, 
   3.826292511650773*^9}, 3.8262930041195717`*^9, 3.826293572906395*^9, 
   3.826294037025831*^9, 3.826295057132238*^9, 3.8264640130771008`*^9, 
   3.826537743144472*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"c57a51f6-1e24-4f03-8942-cbfe293e3160"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neural Variance per Subtask", "Subsection",
 CellChangeTimes->{{3.826127635167426*^9, 
  3.8261276575390797`*^9}},ExpressionUUID->"95d3d14e-060e-4a7c-86af-\
a91db54ac388"],

Cell[BoxData[
 RowBox[{
  RowBox[{"max", " ", "=", " ", "0.25"}], ";"}]], "Input",
 CellChangeTimes->{{3.8257754916568947`*^9, 3.825775506665517*^9}, 
   3.8261274027598677`*^9},
 CellLabel->
  "In[280]:=",ExpressionUUID->"1973b3d3-5155-474e-bebd-781f9a9b21b6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GraphicsColumn", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "ac1", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "aa1", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "ac2", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "aa2", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "ac3", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "aa3", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "ac4", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "aa4", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "ac5", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Variance", "[", "aa5", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"cd", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1"}], ",", "max"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "False"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "10"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "700"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<A_Var_SubTask_Traces.eps\>\"", ",", "%"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "aa1", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "aa2", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "aa3", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "aa4", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "aa5", "]"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ac1", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ac2", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ac3", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ac4", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ac5", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cd", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"cd", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Neuron\>\"", ",", "\"\<Subtask Variance\>\""}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "\"\<OpenMarkers\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<A_Var_SubTask_Values.eps\>\"", ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.825775362505275*^9, 3.825775410214694*^9}, {
   3.825775466945022*^9, 3.825775482333872*^9}, {3.825775541413045*^9, 
   3.8257755417388153`*^9}, {3.82612772111032*^9, 3.826127721315235*^9}, {
   3.826128002282077*^9, 3.826128003821196*^9}, {3.826128271014618*^9, 
   3.82612828043778*^9}, {3.826292414102236*^9, 3.826292475204542*^9}, 
   3.826292974073082*^9, {3.826293410405719*^9, 3.826293423251865*^9}, {
   3.826293527823297*^9, 3.826293536169879*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"8af01070-ab75-48d0-8753-162a07068f83"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
v4yd7fsbtTsq8NJ7krnuI81HLgps2Dhz/7pmdH4oMCRsT1KTDtS/lwJ7G4zo
dcKa1kfeClTnje0w8xvNL74G62/f/F6H1lMSBeI/uN9L6fac6q/A0Iud20+w
fET1VyDFrPeeQSPvUv0VyLn76F3KWFqviQoU6iPCuuXT/JCsQHnZNWX+eJoP
UhRwue5w/d4bev4zFHg8/o8s8230/GoVkPRcYp+3gN5v2Qpcbe3v8TWd3s95
CpRmnQxZM4eex0IF2s5bWnJ1KD1/OsP9nitz716Dnr9iw/083szbbgeth0sM
+da8Gnt+Aj1/ZQqYFtn3mlJGz5tegXuZprbP39B6uEKB25du5P+ziH4vViqg
6Zpk+tl+LdVfgYvpfeYMuk3rY0GJuofmT85ssYLGvxINPRr/WXpqGY1/JZpu
GDOsR8kSGv9KLO1vEj2tQzqNfyUuDr6z5+neVBr/SmRYvy66K6ffw45K6Fpm
nHpZuYjGvxLxxeWRmnZ/0/hXokbj0GTv9AU0/pWI6pq3UGOnoforsbn6Uvfu
9+j3t68SW598HJybm0T1V2Jbgw/reshUVH8lCjqt6vd7MP1+D1Ki98tpPSeF
Kqj+hr8ffGZevYVyqr8SFrtm+ncuod//yUrscp/76S8ncooSZ89MC561RUr1
V+Lmb5267epP1iqRuC19ba3H9D0hW4lR/fv/en05OU8Jn35bAr4OJRcqMX5U
SZPF5mSdob+8cMtp2kSqv6E/T1+stCGXKHHP3scrNSyB6q+EaUmuSek/8VR/
Jbo3Kd/vmxpH9Vei8FjZxFqeP753KNEpK636zqFoqr/h/igvvJ/kEEX1V6Gv
rrzGL5kRVH8Vfl3TwLH1n+FUfxXCc6eNediOvq9YqdD0dbbmyrBQqr8KE0ot
LIrWhFD9VWi3eZA8SyA7qqCp3Hb/oh99r3FRISPlxZchkUFUfxW22s97eEI+
j+qvwtDMglaPMJvqr8Jq+892O3wDqP4q5M/+WmzzfSrVX4WOJTaKwKH0fSlQ
hc+3F95oFELfo4JUuP3Bt/1wa/p+FaXC9812dat9BlD9Vai6Ntjdbz99P0tW
4WC9hLYmTvS9M0WF8eefdbCxpu+rGSqEDTvQJcLfhuqvgnnPxg96T6Tvy9kq
zDpx2qznKROqvwofCzM2HtLS9/NCFW7WK/41quItfb9XwSvFNfDLTNofKFbh
z0KHLTknaf+hRIW6Syd4zc+7YXSZCuXJtdY32kr7KXoVJCNW9ehaesroChVm
Vpc//ZZQRN/7VWjk1H+GuTntF1WrcP/G7PLfz+fT9/8kZPa6GjB8fp7Rpkno
vPN5jZUK2v+yTILjHdecZZHrjbZKwuJm/9lvs03Cwil5/+7H2SXBquGWDe79
02m/IAk93WaF/Ll6odEuSZi/tyC5xrq/af8kCZufu5bUdlYa7cXsnYRmVYlR
U+/HGe3LLGEOTEJ1ebah/1Dab2GOSsJga+xoEDuf9l+ScD5t87/tycwpSRg/
dd2/+60ZzNokRLX8/YT04HSjs5nzmAuZdUlY7qF+dMSFzlfMXJKEqgXeV1vF
jqb6M+uZK5grk37er65mFpJ/timzJbMVsy2zXTK6/3c/3JHZJRmrfto/Z/Zi
9mbH+zJLmAOTkfnf44OYo5jFZOQ/vTZQljOe6s+ckozbHq8ysiZNovonY9d/
27XM2cx5zIXJ8L7y3/onI215WaB9bBDVn7kkGdOu5RvGy1yqfzLS/9uuZ65I
RkaP4KXrFCFU/2TMadbCT7M8luqfjKDXqf/uxwtqOOweNivCjcanqRp1653e
9iyXxq+lGnYlXjufq2i8W6nR6m1ji0sNsqn+aihb5k40v0jvEzs1pi0ZXTCq
4DDVX40BPrmuQZanqf5quJxyOJtZq5Tqr8aplb3tVyXSfqyXGhd2mc9tX0D7
p95qhC/bNji/Du1/+qphnuhYe8aCT1R/NSbsXNGq4j7tPwaq8c/8XX3a2tH+
YZAaSSV+nS8doP3AKDXS9wVvWvWd9vNENawe3/A+cbklvf8N1zdvef34PbTf
lqLGg+/PpceOdqT3vxq16g/yaf+O9se0asyJ3HJlhjftX2WrEWvV+LByNM0n
eWo8OWDnqWxM+y+FhuM/bFkgVXrQ/K9GR9PUcZt8BtL8r8bW9bcfv90yhOZ/
NY7bSlNruXvT/K/GsHOq5i2qRtD8r4Z/51YRUY9ovqtQo8WZ7z3zW9D+S6Ua
jWqMTWi3yI/mfzUm6ZrHmTeX0Pyvwel2n3rb1aX51FSD71cl12xaT6f5X4Mu
zeba3Royg+Z/DQ4l+bb9JqX9GVsNzjWJqW59dhbN/xrsWlonoEYr2q9x1KC8
oPS1EDGf5n8NVty4v+jEsx/zvwamj0Kru9Sn9YKXBhvfrrE/2Z/WF94aKHrc
3zhvCq0/fDW4uL3LeKf5tD6RaJChfdFmUwytXwI1GDhWq5KG0P5PkAZz2qf0
neJD650oDaqa6D93taX1kKiB/e6AGh3PkJM1GL5BKPo4O4bqr4E89/cVJc/I
GRq8X9Wm6aWhtL7SavDwwsMteYvI2RrsvbtMvXILOU+DYZ16d3DeTS7UYEms
3cvaS8k6DdbvPTB89F/kYg1iU0sfvKhFLtEg4XpawzmLqP8yDewO7XubUEXX
q9cg57jNZ5Nx5AoNuj7b/lSzivJWapC6x2Fbg1N0P6o1+NDyzaRXT+h+CQtQ
nHGjcYzwY/23AGaLbMwSzH6s/xYg3GP6qM7mP9Z/C5DdbsQ40TK07/8Bryyq
gA==
           "]]}}, {{}, {}}}, {{}, {{}, {}, 
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
oPxxsPW71mLt5nOUPw6lb8ovTax1lvKLaCIZP6/JsnSLrUW0e/HHM13aSTof
InISenS9l3/MYjsRpS2vtLvzlfI6iJgVNlayo2C/xU4iIiOGPD4rp/PjIuL3
yrG/z0rcZbGriBlL9kr7xyfR+avyP2LT0TM3WewhonphsXNe0wQ6nyJsdr4d
aDdaY7GPiCtt511pNjiWzq8InXPx1MvTQy0OELGsTfthn9sF0vkWcd7f3LN7
zlyLZSKy27cM/6XAi86/CLg3OCNGTrBYJ6JVs4BDuW2HUx8iRjrMWRCY2cfi
RBFWm7tuK//bkfoR4fplyeBfGrewOKVqXFKz09TVtakvEQ7DPs6tmFNhub7S
RaT/0bX73A50vZpE5J3IXed7i67/LBG21WZLbWvT9Z4j4u7Tl9/mvKbrOV9E
8p4EWcA2un7NInq/y5v9bsgni0tExC83rvTy+ULXuwitc68k/6SvFleIKLcN
/jMp7xtd/3KUdBlX9MpMtpZXPZ+M3/34Bv17GzmmzS6q1eUEfZ6dHEl7MlYc
KKT5HOTwvDr+8O49Hyx2kmNqe5c6AYtpvXGRY8uKkyX2T0otdpXDWfLP6+kl
lBdyKJuM/dDYidZPDzmsOwTpmh6j9dlTjmu3ur1tFUzruU/V5714Mem/PmSJ
HF9yK8PanCUHyPF1o4tsSAYdHyRHVtJO6+KXtJ7LqvL6ZnrGfaH1W5Tj0npT
j7SzNL9OjtqTrvkIdWi9Tqiaf02xy5zLNJ5YNb6gTd6ZYjreKEeT6B317KPo
81PkOHW42tW7m+nvSZVj0b2BuYeyH1H/cojy918L++ZT/3LMP6ap2eJ6LvUv
hxD0tcOMfXQ/zZHDadIum+ZlWdR/1fnWvp+nWkD3Z7Mc5+S1F1/+8xz1L0fE
lRH32647Rf3L0TZAOrb15VTqX44Hj1pZ1fJIof4VeHbVPfFUfdpvWCvw/v7K
L7crNlH/Cmw7//JinVbx1L8CizWbVgypKaf+Fbgy9l2jeDXtp5wUiCkNE9+l
+lL/CkRdON/N7zvt/1wVMI0sqvngCo1DgUWXNzz5zTGE+lcgYJagGN2H9lee
CvTx/6ifvWo99a+AzEqXPffTDupfATvvbZqoIZQnQAHXjZ6KR/WPUf8KeM9+
WdT30WnqX4HGlY9UueUXqX8F0hbM27cAdH51CgS+t2swtloO9a/Ap+Ypm3of
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
           
           "]]}}, {{}, {}}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{1.7763568394002505`*^-15, 1.1368683772161603`*^-13}, {
       0., 0.}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.25}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -37.916666666666664}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
f34G54+i2r6HF466O4fzR1Fnq2KPwKHzOX8UtWhryFPMW8T5oyg8tmKL9wF/
zh9FRWOanK4oD+b8UeQ7oEP/1x3DOX8U+cicMsfkRnH+KHL2Hpyz+LrI+aPo
vV9NHztJAuePopHrQ0PTOyZx/ijSWI3yMhuylvNHkYf3eE+xJoPzR1HaX0L7
oUc2c/5ocuna/rWYnsv5o6nfjjfdW7tt5/zRFDn0yffPeuzm/NF0r7Z+oVnZ
Xs4fTVN7XbKyn3SQ80dTXI+jZ/KeHeX80WQecWPXIv9yzh9NKW5h04pyTnP+
aKodUdOpdE8V548mv6bbLzyYW835oyn43ry8SXWXOX80+f+5VWFjU8P5oyl0
i+7C2ic3OH80WWtuX1rpeJvzR5PDHkVoGN3j/NF0+L2PLHLLQ84fQ2FmE17Z
j3vC+WOo54DvDJ59/uT8MSTblibpmvWC88dQ/5jHk92KX3H+GApa2nSea8Ub
zh9DKVYdsyde+ovzx9B1qdP27lXvOH8MuTv++XRi7gfOH0NpnpcWu03+yPlj
6IVn5JnCqn84fwwd+2PjlD3NBNN7yWLjfPebth7JbH0MDcz/2dX7Jbs6hjaP
WKBKH2pmsiGGlsz2DJm1gF0XQwGXavvIQ9hCLB2V9bBpu5htGUvRbc9dk7qx
bWNpuGtVZmlztkMsvWmdb77uFK9HsWTj9vDW/QC2VyzFN436boMFWxJL0vA5
Kx+O/MT5Y+lj+Y1k61mcTzSu/3bZvtCl/+aPJb92g9aMD/2b88fSu8nHBi6O
5ONVHEulW8+3H6Z4z/3H0neRugepCXx8q2NpvF95kOeaeu4/lmbZjbnqn819
1MVS43aJL+4Uv+X+42jXueSM1me5P8s4epUU3CH8yWvuP46atkn+vWVbtkMc
DR3eIbrS7d/+4+jbzvNi2kS/5P7jaHLpg+FeR/h8kcSRVe8h67s1YgfHkUeO
9b0s7zrOH0f+5wfseeTN51tqHDXbuudYu1bPOX8c/eqSvyHI8JTzx9Gqtv4v
m5Tz+aqPo36Cdl1qyWPOH0eHZ/Z7F3ngEeePo/R9qSGtztVy/jiqSCvfNfD1
v+e/gl4NCTpQ78C2VFBRp30/LFA/4PwKcsnLujGp9j7nV1Dkm7cDZvuxSUHT
M5QvLJ7w9eWloHJlln8nBVuiIHXGuo8j27GDFXTy8t/ZSXl3Ob+CJl26c+jb
VuxUBYVK9330nHSH8ysoYMCTO8dd+HouVpDN6Sfl21NvcX4Fxa0ZJ095d53z
K8i8vkTVPJDvDwYFLUl6Y//E5xrnV9D/zLZIPufE8wWRYr+fP8GlM/dhLhrP
xzMZok8Tvh5ESvW4GfGiXUeTrUQqza8cUNHMga8PkaLKd/dtGuJqsp1Ig+3v
txRl0/h6EakyrKhpm3g/k51FavzctrAkLIivH5F6P+333vulzGQPke5WlWab
JYt8PYkU1lvwGN8+wWRfkQKW35iW2l3D15dx/P45mwuuySZLRTp8tv8OmeVq
k4NF+qetcqPLaLZcJMOjkbHnSnl7UaSHC5++Lsrjz0sU6fLYtF+2JPB6qSJ5
pOZemtpHaXKmSNKdP/bslhhlsk6kuV3r92ilYSYXiPShef++L+o5X7FIn95l
Xk//fanJpSKZxY1L3pu3iO9fIm1yWxj1cicfn0qROsnfP7ssl/D9TKSbKZMM
zxPmmlwjUuSa0Qq/ktl8fxNpnXzZ3z4jfU2uFWll5sN4p69n8P3O2E/PldPL
hOkm14u0NaPITNlpKt//lLQt1PJrex8vk82V5B0fOKd45iTuX0nj9205XDRy
AvevJHlKt6lTf3Ln/pX0vM/J5JOHx3D/Sjrj4Ln38CQ+HxyUFLjLPPp9B+L+
lZSWtj89fehw7l9Jjv3NDO47nLl/JZndXeI5RzaY+1dSq3iy2us4gPtX0kHd
7wf8pvfj/pUUcL7NtQute3H/Ssr4ceKY31t04/6V9Kfi51uPQ/py/0pKHr9s
r3MC75+opMlVrUub/enD/SupMqHmnNPHhdy/kuwWW849eD6Y+zcenzsjNgXk
8PmqU9LruZcDcj3juH/j8bGe+rbeRcX9K6m56p/80A/x3L+S4if+1Nhn0Sru
X0lr86fLd0Xz+VeppMxBWa8njU3i/pWk7m4+cVoln681Sspb5tiqRQs+nw3G
/Z18S/bb92u4fyWNSGhyYvKAVO5fSSnraEmc5VruX0krnjWP0sxbx/2r6MmH
Ht1cuqdz/yoK6HzXfTKt5/5VNCTJfYJfSib3r6KQpJdRzx5v4v5VNMc6KbPr
2GzuX0U1MQOl/VK2cP8qyk2OGjT1uo77V9G6xCPLbf7I5f5VlBn3qm5kWR73
ryKfbfOGDUvI5/5V5GyRJdszeiv3r6Kytf3fb26zjftXUetHWb/vs9rO/avo
Q9mbDOnEHdy/iqzu/0ZViQXcv4oW1C2Z0W/bTu5fRfs7ZT72TCrk/lV0JySr
qsppF/evokVn636wKmFnquirwPqSqia7uX8VTTyvbd5lKLtARSmuZ3tO8mEX
q2i5/7561Vx2qYrSYoLSM/4d16vo8of9+1Nc2ZUqate5x8iL9uxqFQ0LP/7u
n7bsGhV1i5iZVNeUbVCRRJ1Tc7kxu1ZFdnk+JPmaXaeizs6rdrRuya5XUVjf
4/5KC7agpilZfa/3es/5zNWUfWTswKN/sC3V9Myu8NiG3WwrNYVaL5BnL2Xb
qqmodcf9U79m26lpbNeIN49EPp4OanLt777g7Ek+3s5q8tyXd6TJCe6D1PQy
2amm7VLuy0NNl0cdjRpTwv16qcm8S9vxtcf5fPBVU/+9jQ5euM7nj0RN9gF+
z8ZN4fNLqiax083uV6blcP9qmvi6/tYv2Vncv5oW7Ym1WdtzM/evJrcRX139
TreR+1fTr4EVP1+v3sD9q2l6UL9PN1IyuH81talu89vuM3z96NTUzPHBtnW9
+PorUNO2OYvO3B2UyP2rSdK+p4dvNP/+KFVTz7Fv2pmV8P1Dr6bjdys9hhwO
5P7V9FPRoJT59fz7oFpNpbdrk/LUfH+qUZM+u84mTDOW+1dTzOVX7TOy+f5Y
qybvqy2Hd9/SiftXU/1ar/aHivj7a72azjkFF1bc4u8bQjxlHHXc1YpO8e//
eOrYK/Q/sQH5/H0onr7Z2tRQYq8y2SqeytIN208047/3bOPp5Cd/C/kS/vvT
Lp6OPz9QcGyCLX9fiqfS7fE78nuZmewcT2uGzp+1uuQOPz+JJ3ogbdNyFj+f
8YinU+PMfvCM2cnPU+Lp3prFa4f68PMvX+P+uO0ZNsE6ip+vxJPkRKvPzxel
8bT+y+eXwfENn1/K40n48kcEJ4JTwZlgHbgAXAwuBevBleBqcA3YAK4F14Hr
wUJCQ5uDLcFWYFuwHdgB7AwmsAfYC+wLloCl4GCwHCyCE8Gp4EywDlwALgaX
gvXgSnA1uAZsANeC68D1YGFlQ5uDLcFWYFuwHdgB7AwmsAfYC+wLloCl4GCw
HCyCE8Gp4EywDlwALgaXgvXgSnA1uAZsANeC68D1YGFVQ5uDLcFWYFuwHdgB
7AwmsAfYC+wLloCl4GCwHCyCE8Gp4EywDlwALgaXgvWr6Nx/33/x+7xKcDW4
BmxYRYVFlz+/P6sF14HrwUIiqYKfZubNm2eyOdgSbAW2TaSezd80bbR/icl2
MO6QSIb1VZ/f9zmDCewB9kokvy9/v/vCuAQsBQcn0r6XD5avLWTLYVxMpMwv
vy8kglNh+8xEKvny83TgAti+GFyaSLe+tB5cCa4G14ANsL+14DpwPVjQ0M9f
7r+5Bv4/ANgKbKuhf8Z+8X7ZTkMHPc9+3j8HDR360s5g0pC8V/7n98UeGmru
6mL8/BDuX0NpG2qkfaKDuX8NVRrMLfzv8vtaiYa8tjb7bKmGOjXft+PNLDX3
b9wfSdDNF78ncP/Gz789TnqiZzL3D07UUJu8wm2jXdO4fw0l1KQNjCrj96mZ
GnpnM2lplmMW96+hzsvXZIfczeP+NXTXweLhnpHbuX8N5XxlGD/kRCH3r6Ea
3ZXP70v1Grq9xjpm5o97uX8NPZ7rdMHb+gD3r6FujpO6rKgu5f411HJgxc/m
a/n9qMF4PGYeWGWXUcb9ayj19uaSYc/4fWidhjKnXNQ6mJ/g/o19GZx2HlvG
70cFLYU63WiZ3p+/f5trSef+q+PmYxXcv5YWWAfGq1T8ftRKS3a5PyrInW2r
pbGvZi639znH/Wtp25uqR4XdL3L/WuqouSC0t6nm/rVkvfDeskM5bNLSiSvB
QQMq2R5acj85196s8SXuX0tHWlha9LZg+2rJYsUX4xIt5bjvdQ3pcpn719Kw
nsP37ffn8WBjvgsr+3XK4XG58fM2Bp+IsmaLWnp9bs6xeb/x9olaevfap0v/
enaqlmxeLy/XWfL2mVoKyJrSa+Nlfh+s09Kupl/sX4GWKh2y2+t783ixMb/L
xxVFLzhfqXF8jdT8fThbryXXm2vzhl7k982VWkouG3Q39yq7WkuNe0w4ZRdw
nvvX0pJWU3Pdr5zl/rVUfX1AqPnhM9y/lkbkpX97vzm/367T0tm1twY3fsp9
1mvph3lZTxqHsYUkUijqj34cd4r7T6IOWbP30R0+PyyTKGDdoSMWE8u5/yR6
5tYmv9dvx0f8L24VnQU=
           "]]}}, {{}, {}}}, {{}, {{}, {}, 
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxd2XlcjenfB/B7ZMg2kowQym5sRaPsH0sKIWLUZDlDkaVkqU77ffalUgnF
YI69IrKXlDOELJGtny2OpR8TRtbJ/pznOV+veXz94/V+Xfd1X/fn+pzTqes4
zV48OaiOIAhzrAThf/+3/KsZJnz7D9/SmtmG2Y7ZntmB2ZG5A3Mn5i7M3Zh/
Yu7J3JvZmdmFuS9zP2ZX5p+Z+zO7MbszD2AeyDyIeTDzEOahzMOY8a1FZmE4
G2cWRrBxZmEkG2cWRrFxZsGDjTMLo9k4s+DJxpkFLzbOLIxh48zCWDbOLIxj
48yCNxtnFsazcWZhAhtnFiaycWbB51uDWWQ2MguT2HxmkdnILExm85lFZiOz
4MvmM4vMRmZhCpvPLDIbmYWpbD6zyGxkFn5h85lFZiOzMI3NZxaZjcyCH5vP
LDIbmQV/Np9ZZDYyC7+y+cwis5FZCGDzmUVmI7Mwnc1nFpmNzMIMNp9ZZDYy
CzPZfGaR2cgszGLzmUVmI7Mg+daOzGCWMIvMBmYjs4lZ+I2tzwxmCbPIbGA2
MpuYhdlsfWYwS5hFZgOzkdnELMxh6zODWcIsMhuYjcwmZiGQrc8MZgmzyGxg
NjKbmIUgtj4zmCXMIrOB2chsYhbmsvWZwSxhFpkNzEZmE7Mwj63PDGYJs8hs
YDYym5iFYLY+M5glzCKzgdnIbGIW5rP1mcEsYRaZDcxGZhOzsICtzwxmCbPI
bGA2MpuYhYVsfWYwS5hFZgOzkdnELCxi6zODWcIsMhuYjcwmZiGErc8MZgmz
yGxgNjKbmIVQtj4zmCXMIrOB2chsYhYWs/WZwSxhFpkNzEZmE7MQ9q1tmB2Z
nZnB7MMsYQ5jFplTmQ3MecxG5nJmE3MNs7DkW9swOzI7M4PZh1nCHMYsMqcy
G5jzmI3M5cwm5hpmYem3tmF2ZHZmBrMPs4Q5jFlkTmU2MOcxG5nLmU3MNczC
sm9tw+zI7MwMZh9mCXMYs8icymxgzmM2Mpczm5hrmIXl39pmOcoCTZ7ynIFD
/s+ObNyZGcw+zBLmMGaRrZfKxg3MecxG5nJ2P9NyrA13zh7hMNHiGna9EP6t
bcKheXvq/+UPh+dZ23/nO7PrEf7tej7hyPQX6tc54GmxJBx9R0L13elJFoex
68Xwb58vNRxfhj5dlJYjsdjA7pcXjrtrzgb+OY7GjeHwudrylKwo0OLycFzx
P/XvuCkcebV//J2WMZfym+83pPzfcSEC473fFozps9ximwhabx7lj8CDNS//
HXeOgNbFp8IpJtxiRGC449+hHsdFyh+BO3O7JFQlyCi/+f5tBuXmjEug/BGI
e7K7xmOPmvJHoOKHscHHOydR/ggsODDmXxsiMGnSIPP+pVH+CCyuLsxRxKVT
/ghcnPFbpwON1lL+CHTwDgxbqVxP+SNQlTvnX9dEIOxBVMbU9ZspfyQ2rG79
5MfQ7ZQ/El0TsgasqZtD+SOxI07Y0HDFbsofibJn9jFxPnspfyQCHx/Muhi0
n/JHok7A3c8uUw9T/kiUqj8UXxhxhPJHomLJwqNhn45R/khkbZ2WfKnzccof
id5H2n/uKSmh/JE46vTPbyuel1L+SJyesHznubHnKX8kOlu3aXnF6RLlj8SD
tDabnja+QvkjERKa83zhlgrKH4mefZYe7dX5JuWXovLZxJRGf1dSfil8KuZ9
uSW/R/ml+BJaf4XNrIeUX4rah462kv6PKb8Ut456zHvc6inll2JTOd5OOFJD
+aUobLJ78djDryi/FFvzZ31XY/cP5ZeiviquTYfUD5RfCjToXHG0pzDUkl8K
Y+nwXv0WWVmcJ8XumIWTMKq+xUYpmml8i1XyRhaXS9Gqw/e7+hpsLDZJ0c5D
ZrX5fHOLa6SYcnDLmHZXWlosRGFI7y3vht5wsNgmCrsP2fWwSXCy2DEKd4/n
RC1d1tli5ygUjV465Mc6P1mMKLTpEli2t56zxT5RSI0ta+yyo5/Fkig8+/7N
hY/B7haHRaFZ7bQBDqOHWixGIX1xbEV+nZEWp0ZB0c+qR8pVT8ofhYCQgugt
H8ZT/ih8zrRZ3vp7X8ofhcbdC3MT7PwofxRmZxaPe3VmJuWPQjf7rVYnCuZQ
/ijcT0/Z3Hf5fMofjQ2La4aXx4RR/mg0sL06bv7ScMofjaIT1f57GsRS/mg4
Fa/tnjtPTvmjkT7hU+Oxo7WUPxorT+zb/9Y2lfJH469bjraFv62m/NGIG7z1
cC/despvvv6nDV3rjNlE+aNxe3vpWkWbHZTfvN6qgZvntt1P+aNhlddr0ajL
f1L+aPgNLilILiin/GZ3H2Hzodcdyh+NzzXFm2xtqil/NK4sOddgR/Ybyh+D
F+192zwK/87yvZdNDMb/IguetLyRxY4xuJoRnaTs3MJi5xgUZ51I3vKqncWI
QdFiTU+HE10s9omBfXevi2OGuVgsiUFqTu2qgPSBFofFoENstufg6aMsFmNg
Ch3U4OrKCRanxuBVQanjD8VTLTbEoKp0ZWnV+JkW58XAJdy1Ut0kyGKj+XmP
V41YUj/E4vIYdMw6tM216zKLTTFI+VDuUn+P1OKaGGh8PozsEJtA3/PFwju1
//5KfwXlj0XzS8varZ2oofyxcO97evunHxMpfyzkyspI06cVlD8Wcx3d9qNL
GuWPhcHhVHG/gyspfyw8stMdWuxNp/zm+6fc80xMJIuxuOX3stK5iK5PjcWG
n5emjD+fSvljUXDT+30raRLlj8V89wk967rT8xlj0XSx9bX0TXLKH4vzKYqr
A8riKL/5+a+HdG7a+Wv+WLjk7KiZ2mQ55Y+DS6LrwJD+Syh/HPQbZtgNORBK
+eNwafK1jQcUiyh/HIpedyqxTlxI+eMwsTJ8XHYK2ScOxoPTVe3n0vWSONjd
juhq+4z6CYtDbr8F9UrrhlH+OIyYcMluyGRaPzUOyceS3my+upTyx0H28u+h
c+T0vHlxiOvj7RI6OYLyx+H+lDN3xg2mfOVxuPElIiLGPZryx6FnRaNm7YfH
Uv44BFSuHfLH5HjKH4+4mLH+s/uLlN/sui8fRIyRUf54DN83sfewONpf53hI
y9SHtzdTUv54lJ4SXNwC1JQ/HorufTUvs3SUPx7NAktcI9qlUP541P91+iw7
n6/9x+Nw4PVZ2asyKH88NqzwOPuj/e+UPx6CX8KjlmkbKH88muxa02PjwI2U
Px49Oyh9NwfReHk8JoV/r+xXRvNN5vmxrWKfYR3lN89/H9+6601aT0jAiSWz
k1Vhqyh/AuSmdAenwfT6c0xAddGaYZ2v0OvNOQH6Sx9cyyS0X0jA+zSnFu4b
wyl/AvKLnFdsPfi1/wR4jQh80aArvV/DEtCt16Hbye/nUP4E7O5oNcvVZj7l
T8CGUU2mn+7xtf8EjPm9tnjzauozLwFOa07bz1hJfRgT8FTTMPCcVEv5EyBx
ufLfV4n0/jQl4OSa56FTB9P7qyYB704trmPfaDXlFyGXzbp/JI/2w1pE5Yu2
QaMG0H7ZiNi7OXXGtYL1FtuLMK67brCe8Aftj4jzL/0G92+0yeJuIjrtDByb
8ftm2i8RTz0OWrVeuNVidxG+PtfzV+q30/6JUCzbrLqSnGWxl4hP8npxKtcc
2k/z/DtNf5UM3Gmxn4iU39/mXk8mS0Tcetwx17CCHGyef6/5qJ9b7KL9FtFN
aBWd/zzXYqmIrm93XvFdmUf7L+LNpcCNDvJ9FmtFbBg/eOHPygPUh4i0UJ/q
ecmHLM4UUf3xucvpqHzqR0RsRifvzV8KLM4SMTPMrqL9pyPUlznfBM8GxZpC
i/NFPHBcPsyxhGwUEf95s1ed4+RSEY0fn/9vOym5XMSrHnMjjr+h+10XYZUw
ran3aLJJxCXvL1N6g9Z/LCJKFuT44fBh6tucP8d+TlrJQYtrRWwe32O/m3o/
9S/DCa+pXoW2e6l/GVwOhm3qGUf7ZSPDohYDUzOtqA97GUp+qLtppgP15SiD
X6iXZJ5uB/UvQ3Vfm02tb5KdZfC9vXHwoVy63l2G9A8Tpt4+lk39y2CdNPzF
2bt0fy8ZNj7v36P2CfXpI8PIG7byt2XUp58MnoU7h7+LpOeTyBBl82ePmQ/J
wTJk7jFVuzbfTf3LEDHFzW2PNVkqg7Feq97x5+h6UQbhde4IXSBZK8Ouyyce
NrhN66XKUOZRcTHJnZxpXv/s8+a9RXo+gwzJ2wY92n+Inj9LhoYthGCXB5Qv
T4a2vzgUrHUg55ufr7r3a88M2g+jDIF/3LaXGcilMjjGDIu6H0XXl8sQ3zH5
ckh3Wu+6eX8mzVr1LoSe1yTDi9O9Q16+3UP9y6B/OjRkSR/qs8ac501xryQ7
en3XypAfcHLG1hiyIMfiR4bFhfPJ1nIMDg6o9GhPtpGjLK/DTnkV3c9ejqER
M4IbPiY7ys1/76zJdfh6fTc5uqx5vetiMNlZjvsjG63fqiK7y3G77eqSDyPJ
kCM9QtVl3yq6n5ccwwKeTSzW0PvTR449R+q97Kag/vzksF585VXog6/vfzn+
flWvzcwttF/BcjxboF6fa037GSbHoewl1dua0+tRKofDG2GTkEk/f0Q53H4K
TjkURNbK4es7eWg9P3KqHI4lLdMm+5Mz5fB2al5VNJ1skKPyZUSTwmnkLDmK
9m9s38yDnCfHrIx1m4d1JOfLEVDdplnwq23Uv3m82bwXvxSQS+Vw9TvQ6GU0
uVyO4sHN4vsMJV+XI3i33W7X+mSTHHsHDfSp+g/9fH0sx8mQD1Zz8sg1cswJ
0y07l0KulaP271ktTi0nCwqEdkpZ/2AG2VqB1os6pt0YQ7ZRYNjkTqs93Mj2
CrSqu6WkrBPZUYEFjePPR9iQuykgzftph+7tFupfgbHvb8TnXSS7KzDr5YtR
sSvIUOBEnRMTahzIXgpobA8oEECfHz4KbPAOjNrUgT5f/BRICroy6fJm+vyX
KDBp0eC9w0+vpf4V6BzwXG1rT5/nYQq0fbsg44ci+v1RqoBro+7rJ1yhz09R
Ac9dbrO+ZNHvU1oF/nL94HXP7evnsQL9ZvsFr3zjT/0rkO7rVlT/pBf1r8CA
y5Pvbl7Wn/pXYEXvTj87NOhM/SvgcmrHixGrW1L/CqyOf1i30K0Z9a/A8ct9
st/+8wP1r8Av7V/vmxTZlPpXIK5jZddTrej66wrsNmycsOrn5tS/AvYz/97Z
4gz9ffJYgfevUiNKMu2pf/P93qYsDFjWhvpX4H7a0mXvXenvF0GJoTvdL8yZ
7Uj9K9HzXUnpZ50T9a9Eoue7o4nJHah/JXwH9t0nW9iR+ldi+h7Hgl2dOlH/
SsTlqm4FHCE7m6+/tr6Bujfth7sSTa8llpgUZCjhFbCr6NFRspcSv11tkNj8
NtlHicHV+cd2PyD7KWF32LZHZAVZokTHAetPhh4iBytRe+7l9rpqcpgS727G
pVeMJkuVaL2sevm19/R8ovl+Qs7hjVvIWiW6eoycc2AEOVWJvs8l/W/coLyZ
StwrHNW17QKyQQlNv/yyqte0P1lKlF9aVfdLNDlPCWO5S9TnT7Sf+UqMaVJ4
YXw82fi/+ynJPPmR9r9UiXbuMytCo8nlSvjvdn0Z9bw99a/Enkueo9dXU38m
c95QXfHtR22pfyVS1l3LVz9yoP6VWP7i+azx1V/7V+KIz9ncgzWtqX8VLvZ8
12rox1bUvwq9exWGOTUh26iQet/tn3od6fVkr8Klvi5lF4bS69lRhbRCq7d/
SH6k/lVIPnCj8qT269/LKjxq2LF6wGE76l+FyuF7ZCFP6fULFbYGjz94qivZ
S4WRF721OfNtqX8Vfg9ueLTOPnr9+6kw4oe5VUkCWaKC619/vsuZakP9m/N8
b/L3nE3vnzAVrvbfuu95J3p/SVU4YTrk/u5VY+pfhaFi8siHF+jvfa0KA6zC
i9UHGlL/Kux/+nbBoG0NqH8VShOeZXTaZE39q5B4r0Fr6x31qX8V3FZYL+52
uB71r0LDB2W5W8q/p/5V8Jm+0/fVq7rUvwpBR6d0eNKeXKqCqY3D8bVTrKh/
FT7VtNvfemUd6l+F3S42vzysoPMKkwp7nhcu9+hEfqyCyzupYoJUoP5VSHpq
ypy144vlvKNWBXvbOSHDF32m8w81mu6zeq0Z8sliazXOevfJHOLwkc6D1Oi3
fFDTCfU+WGyvxoSoS0vdPr6j8yE1cksUsb9+qrW4mxrTVIGt/a3Jzmrct/ut
7aJ2/1jsrkZAWvczMUPe0vmRGsf2X8gZN5fOY7zUSK7U2d1c85rOk9TY4bAg
4Gn5K4v91OjYwPD7j83JEjUurBi+yTj9pcXBahg+mRaW5r6g8yY1StzL7unq
kaVqbNv/vjYmqIbOn9RYNLv8wJ7Vzy3WqvHhdvOzp0P+pvMoNc6/udA3ZNIz
izPVCLqxY/dBPKXzKTUO9LPZIQ54YnGWeb805X3XDKHzpjw1jKM72Dt5/2Vx
vhpPPlfImwc+pvMr8/i2M60GKh9ZXKpGTtpZwWP3f+k8Sw3f7zK8MkxVFl9X
I+TPgBf2rckmNRz9P35vNf2hxY/VmPGr/bEXWx/QeZcaxW3aZQS+uU/9q/FM
/zJ51jiyoEHze9n1umXfo/41WKm+gBeNyTYa+Oo9l/8cYaL+NdgxMaxJ83N3
qX8NJM+GFWn303lbNw1erG+WmLujkvrXYKibc7uCbbepfw0Uny7OOLLrFvWv
gXuPsH3Tim5S/xp0Gnh/2YWKG9S/BicnB1fZ/HOd+tcgYsOdY0s6kCUaGFQ3
wjyn/If61+Dj5aXz6yZXUP8ahFuvabm17Br1r8GfSf4x61qQRQ2C3tc5UzL7
KvVvvn/J6v9Myb9C/WuQXfRk7j+25EwNptR5fbdo6WXqX4Prl51OvrpxifrX
4PakHiYfD3KeBvfWP2969yCdT+ZrMLV6i8OYHmSjBieO9Wyv9r5I/WuQ5uvr
2mfcBerfvH8t9rm09C2j/jXofDP0ZrvA89S/BiNtl9pvizlH/WvwBRttWm44
S/1rMKZNx5otJWeofw3m6H5M9HhTSv1rkXrd/smMHmRrLWpWbG3uO/809a+F
9ta6t+1yT1H/WlwaEnJpS+1J6l+Lin3SNqljyN20eOnt3PzNxhLqX4shWqf2
+g8nqH8tTroUSj9PJ0OLGx8l42+UHKf+tWi4b8mJxi5kHy3Gn3/iJBrovNdP
C+Mf83e1/pEs0WLdlImZl9OM1L/W/PMzfsGdH8hhWjSTZvzi1ukY9a/F2L4u
afHOxdS/Fs9TYqq6jimi/rVoF3Tq45PAo9S/Fr7lIcutEgupfy2sbQ1Nig4d
of61yI/Oq7j53wLqX4vKpom2dxzJeVr8aqrOTpfkU/9a9N9a++TZ9sPUvxZq
ReOkwy8OUf9aNE7y3rt4FLlcixT56NHN1x2k/rWY49p47fC3B6h/LTpnGayb
+ZEfa5GV9z7p41E6L6/RYsBf3Y/U70qu1SIpe/az7Rn7qH8dSjqtqAprTLbW
ofPcuooeqr3Uvw7f/ewy71Ydsr0OvR62Hn1dnkf965A9aPTwxdbkbjqs/W10
ag/HPdS/DpMWHDu4YcBu6l+HE3n/bO3sn0v963B+bdOsk7G7qH8djtdNjw3P
2kn96/C4X91Pje/mUP86vPLPzLhkR5boMLLVyoeN/LOpfx0Gtdzbb9GGLOpf
h/AdUeWnqun7BKkOTR/eGjnOjSzq0L5BnSaNU7dT/zo4Z44wHq3eRv3rEORm
96XlOHKmDik7B1xrtHsr9a+DtGC1rUtLcpYOtrlH7T3UW6h/Harqukz94Z/N
1L8O/keGeM0NIxt1UHR9EWNfTd9/lOrg6JW19kwQuVyHcU+Ora2sNlD/OuT+
6tDHdTHZpIPdo/9oqt78Qf3rMKVLePqYRuQaHQqeZpXdcd5I/evwObRMGOu7
gfrX41Nx/AZ7NX0fY63HzBKvLTUFv1P/elzP/zMtq2Yd9a9HUotWI8OcyY56
9Dq5r8mDZWupfz1OuO8/E3wsk/rXI33OseG7bMjuehQkZSevnZdB/evRpmvv
tp7H1lD/evTtu8Tb24nso4dCcV19RkHfH/np8bTP+nOvn6yi/vWoHDLNt9CX
HKzHns9DTiSeSqf+9Zh/fteppIFkqR6lOyc/P7x/JfWvx4xiF01HZ7JWj67n
1nepyE2j/vUYvM+5z9m+5Ew9ph2pamd3hL7fMugR2SNoY8ZocpYev+9olt14
ewr1r0eHI59PvT6zgvrXY84x09Sc18nUvx5Xjh6ccqgjudS8f1t/ujX01yTq
39xH/8V9YlMSqX89Gjf4/GTYJT31r8dfnxXvqlqQH+sRsmxd+smZOurf3Ndf
C+5Y59L3c7V6BH2wvbq/PllIREP/qpVWv2mo/0SM8VxZuOKYmvpPRHJR1rPR
TmT7RPxVfuaKr0419H8AmZutNw==
           "]]}}, {{}, {}}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{1.7763568394002505`*^-15, 1.1368683772161603`*^-13}, {
       0., 0.}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.25}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -113.75}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
B/XHYqr9Z3MP2z+pPxZ2OcMrhKYHqD8WOd7ORu3Cj1J/LIq5xhnz15+k/pb9
RR1zXSedo/5Y+IZqP7kiK6T+WLyZPCy4j2Mx9ceiT684vxHld6g/FjW7295I
rCqj/ljIA8U78nwqqT8Wj84UtA5orKL+OLjFZnsZKl9TfxyOhWxLfvrgPfXH
QR423149opH64zBAHtBlk/936o/DLMHEK0cmt7Lj++OwOFDXe01yG97COLQ/
4Wxy2bMDb1EcKsaMHOjcszNvrsUr3Ns73jPmvSEOLi8eF5kamfDOjMOMH4Zl
2aWmvI/GIaHD15VpTwbzVsdhp//CysjpI3mXxsHsr28Wf40YzVsTB8041wHX
fSfwbojDnZe7Ki/2sOctiIfHn1Y6jVqOvA3i0eWhfsJR01m8TeLxy32Nc4DP
HN6W8egzLDEotMcC3ohH7/DmCJ1aT+qPxwuju1OGtPah/njMXt4mN3rRMuqP
R8SCG36jtq+i/nj0HBa6sMM3EfXHwyH4117jojDqj0dUZWfz9BnR1B8P463+
fU5ki6k/Hpdf95P5xkupPx5TgiMLwkcmU3883kusL4dJVdQfj9ev2oVYy1Ko
X4yo5VlbB+xJpX4xUkxCTp7/tIX6xci71a3O4dw26hdj99uL9w3a7aT+lv3r
z++4G5lF/WKg14H3Irs91C9GRJ+coKd++6lfDL8a18OOv3KoX4ze29OMygcc
oX4xmm/P/02/+Rj1i7HtuZ5NyPMT1C+G4ZcZc96szKd+MdZd6mqb/uEc9Ysx
+opg5p8Jl6hfjGLZ9NwJhUXUL4av3Y6NZoY3qT8BpYmnrbo13KP+BPgkBCw7
VvmY+hMQeM5l6YM2f1F/Aiysn3SFfT31J+DIqCu3Os77Rv0JkJj1vzC5lw7/
d3RhAn5+Pb3/QkMn3qIEnOrtcN3qWR/eXAJ6H7T/3OHcYN4bEnDH98IOsa0t
78wETLu4YOx78ym8jyYgyXebcWbobN7qBBw0z5063nAx79IEaD/2mjT51Are
mgSYZnU2fHgunHdDAjJyOq+3MZTS3/k5SHUclJ4u63jrcmg/89AA43dpvA04
bJ56JFzeKYu3MYeA1Y2t9lfv523CYWylp2XIuCO8LThcygn7Fa9znLclh43p
FQ3PTp7kPYbDU8T+MvU6zRscoq9CXVRCduKQNfzN3c3Vp3i7cTg/w3dAp4IT
vN05rHx6PfavyGP0/nKI14/W/qt9Lm9/Doo7jRFvnuym95vDJltLjyHDt/KO
4mC0J3lMu2MKev85LD8y9/nN/Ajeipafn+d/1cTFh+bBwUL0KNdO5cw7ncPa
oj3Gm96NpPlwcIoon9pqgRHvbA4DOlR30x78k85XDsYhq1b9vPaSdz6HE6+u
lBqfK6Hzl0NIcOLX17fzeBdzaLZXJNjl/UHnM4fCm5FXdi5P4l3R0vvOYprp
vGA6vzl0zzMzyYr14l3DIaLrJt+705zpfOewc+DrPmlJY3h/bXl/9p640Hev
OZ3/EhzpkOo28YgRb10JrKONBny8pUufBwkeTey+KaqUrvfGEhwMmW460uKf
+4MEmq37nVrV0/3EQoL68r2ji3Tp/mMpQeimON/fW13nPUaCr20/pO9efIHu
HxI8bpuU8fJiHm8nCWJ+ZI9Na51D91MJms/eW6PfZTdvdwn038S/WKhH91+h
BD9sBx2w75XC21+CiJgeVyXn6X4ukuDGoz22L95F846SIG9a8ja9E/R8wEng
F/xkw71fAbwVEqQL144wXL+C7sctnuK57u5AH97pLT+/0s2/cCA9b2RKEJW/
0tx+BP3+bAkW5Bzf/3mhjO7XEqhSPhVMH7GZd74ET09Zet+89wfdvyXIT/6z
5fXR80GxBN3scgz1l9L7USrBgE5OvS/k5/OukMByaemlVrsu0f1dAsPno11n
daHngRoJPjj5f1yuoOeBBglq3PIeZDff5/1VAi4nNdP+eQXd/6XYnzVzxfaR
T3jrSjG1/uralaVP6XmAsbEUP7mEV4N16OdNpEh2cmx5ffT7LKTod6uhpfef
+UvRt+qKTwfrUpq/FJt/FH/t+ts1mr8UqzoOOb2hP/U4SdEq3LxLFxfqdZPi
0Dedl9q29LzkLoVOXUzb+oL9NH8pRtj893zaSfOXwniJjXFcfDrNX4rw1rKW
eSpp/lLMGtHzf+cHJ0X8Q/3Irv0kNH8pvr5VN3k3RdD8pch6PTap1bVgmr8U
ZXHS/50fmYyzW16Pa55CK8uL5s84n7FaiuO15Y7SnEU0fyl2hlu2nM+uNH/G
FYw1jGukeOZQ3/J+LKb5S3Fqxo2ll2bQ8/NXxgIZzs4u+9/5ryv79/lswNhY
9u/z20SG5d9WhEzbvpbmL4PTnZy9k+030fxlqFfWB04tzKT5y5BuJFfPidtD
85ehU8m8fmY12TR/Gb5aR2hPyTtG85dh6InQWYGd6fnYXYZTZ9bv8r9P54dQ
BhM9UahJNj0v+8uwI+tmS5+a5i9DleXOipwD9PwcJcMWu4y//Vyu0PxlmJWi
BbkPnY8KGU78nNRTP4s+Txta+hYO33rZ6wbNX4Z5hzMl7V1u0fxlEAXNXqbw
ovM7W4ZFYVtjNjjfpfnL4Dq06OTvins0fxlk5z1d047T51EtwwsP49tFe8jF
MjysMvE9lkGfn1IZarjaV05nyRUyeP2R+mGTwwOavwyFDufuGA8n18hguNgw
8VnPhzR/GVrLty74qKTtX2UIVu//ckRFFiRiqKayojCdrJuIzalPqjRr6HgG
iRhxQnLt3AJ6fcaJ8K4PHOFgRz0mifDs4bLJ+zP1WySifK/N2lW7yZaJiHVN
rRYL//n8J8J9ydD33gVkJOLT7qRwl470fjklorDX/71/bono/5tdvwXpZPdE
6PvuzPmiQ8cXJsL00cJB5l9ou38idPvY9v2TI4sS0WNcc8ihD3S8qETUlLin
1RvTdo6xIhF35u0wUpuTNySijc+6vSdLyOmMMxlnJyJ/8rUBX0/+M3/G+S3u
uDu+TyBZzbi45fV8b7vnfT65NBE3p1f/fB9HrmCsaXn//qjJmOJCrmHckNhy
f/u/9+MrY0ESusilYWHaZN0kmKvXGIrf0ftlwNg4CQFv8j88eUE2YWyRhE/N
eoYbq/+ZfxKK5xemVN/4Z/6MkYQLMU2ib4/ITklAQZiofRnZjbF7Ejzr/u/1
CJNQfn7Jyoa1ZH/GoiTcLPy/z2cUYy4JOv1nCQYbkRWMN7S8vlvOS8umktOT
0Fc5/ZdrO3Im4+wkHC/o+zQp5TbNn3F+Eiw6rd5aOZOsTkLz+1yNoIBczLg0
CU3zfm3XX0+uSAK3/OaVrqF0/dEkwfeEmez+EnIN44Yk/Bz7/WCq502afxLG
yz0CWnuTBcnoULPztPYjsm4yTOqlR6xiyAbJ2B23Inj1BrJxMirsr+/cd4qu
hyaMLZIx2i7YZc2XEpo/4zHJ+KttuvW86/Q8iGTEX9ZZ1tSH7MTYLRmSJWe7
O6TQ9didsTAZru1WjNmjR9dvf8aiZPwsHdrgfuAqzZ8xlwy5x8euRyOKaP7J
mFH33+speUMyvo9LKWyzme4X6clwuD3zSEXeZZp/MiacCyrwHETbs5NhaHX1
y3gtOv7RZBzTW/P325/0PJafDLHuyLzetvS8pE7G/CEDk8Qvq2n+yTg7+kkn
vzf0fUtpMq7F7zUp26RNz//JCDGYtFQ5rRM9/ydD/5K1uVVZL3r+T4Z3+XfP
4T70fN+QjLJKywvuxqPo+T8ZGV18j0WdG0fP/3JIp+RmRnd2oOd/OSLmdjxy
E7R+MJCjaeLWxx8PzeZtLMeGtasmGdvS9x8mciiG35aeL6X1h4UcxXsN9AeW
0fcflnJYtR2Nz/LlvMfI8eF01iSv0ABaP8txaM+o7ktOh/B2kiOjV+PZ2HdR
tJ6Ww/hb24GaJglv95afvzV7V3etdfT9ghxnWyc+S9iXwdtfjqnV1je+CXPp
+wY5VGuqnpfMvcA7So7MttVNHn536fsHOWbNvFWmp0/re4UcsRGflL4FTfR9
hBzTurxxr+2kR+u/lh5dj79GnetB6z855M0jrmbFDqH1nxwDIlMetx89ntbr
Lb8/e8I52ZfpvPPl0HZ+8nxG7QJav8vR53lBUGdnP97Fcmx1HWw1dH4Iredb
Xm/8/kbxOjHvCjle13oP6reB1q8aOU4pZ5a4NaXyrpEjzfnRYpuaP2i9L0fF
j8VJV1b9yfurHF/MwmzeBR2g9b8CnTJkJ0f40/pdV4F2hYUiSVgerf8VaH09
8PSCz7T+Nlagw5atm2w8ab1uosB4gVb58PICWv8rsFa6+RIXc47W/wrUaH18
U2N5kdb/CuhriapQrab1vwKHrEuSw7oV0vpfAS/phbSNQy7T+l+BFYopXa9b
X6H1vwKvVCahHycU0fpfgQMTa3RzJ16l9b8CVWMPfXDuf43W/wqcL9iYcrKC
HKVAoFPnD+bCYlr/K3Dt7OhDtdfJCgUStqxc7zz8Oq3/Fajc9duD1TvJ6QrY
DvRdW9OjhObf8n4cdd4Un0bOVmBopUnvd9o3aP4K3JoAWZGQnK/A5bMJcbOP
kdUK2AVW7Jj+iVysQL6Tzah7Rjdp/goEKLvUObYnVyiwd9CtSauK6ec1Coj9
lzd8m0uuUeDLr8meFpfo9TQosP10boVPP/JXBcKMLi27G0M9AiWK15UlGl6l
fl0lZr9Wacq+0PtloIT7OHtFcAeysRLf6grNxnek99tEiSV/P56yqi3Nw0IJ
7bkDb/p9o/lZKnF/4qtebV/SfMcokWdWXjbz8iWavxKrtMObl2XQ+eCkhKtx
F9vwqxdo/kqMnPjk3jNTOp/clfCpr/x71CQ634RK9G0n/S2gN31f5K8EXE+c
3amh81ekxN0FAWXu3nR+R7X0qhISZ7jS+c8p4bV+b0zudvp8KJTI7q/3Mf7k
dpq/EpGNLlVmEZto/krMLV3ycuZv9PnLVMKxjU2bt00xNH8lNnYd1pCXvYrm
r0SbOxOnTV67iOavxIP3z0rXq5xo/kr8udbqARcxmuavhMqtc6PbbVOavxLX
1g2Ysq+kM81fiWUBbRK9pdo0/5bevHu3zdo00vVfiTG7A3sbBr+i678Sjeeq
zN9+KqfrvxKVRQdc22lu0PVfhdX6kcPjH6vp+q9CRbVBVH/jk3T9V+FR1dQ2
3BC6nhqrUFDzK7Sgkr7vNVHh6cFlVWfObKXrvwrx0X11u6+h75ctVSgPz+ts
uCeRrv8q3N63c9z9h/R9NlTwdTnzvKKU7gdOKnxqHVFW9WYxXf9VEMs1i0/V
zqTrvwrPu/vkBgwZS9d/Fd7/lbfN0WYgXf9VSNtdaO/+gu6PIhXO9rl5XfP0
J93/VfAv77Rv//a3dP9XYYBLjaj7lUd0/2/pfbjr/PP+9PyxQQXdgK2LsrMK
6P6vQonTxrO/puXS/V+FFxkzan8bR98/ZKsQ+1Bjt38p/b3oqAquGePrLc7S
9w35LQ7unOGTROtptQqi6obfA4eL6P6vQnpdv1fmXenvW6Uq5KTc7VNh7knP
fyqMsrXwWzGO/l6mUaFOqLj3/ZYzPf+pIKvLWRWg60DPfyosXxax800c/X3u
qwp/d/X3STW3pue/NRg89LGH7Mswev5bg+buPsUzU8zo+W8NCuIOO6YN60fP
f2twXn/kq7zAHhP/AwYcPnA=
           "]]}}, {{}, {}}}, {{}, {{}, {}, 
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxd2nlcTPv/B/BjSdmTXTclRdwoIV2Fl0SJEkKWmISyRLRN+5l9SVS2rA1Z
sofLDRcjW/aSJcIdKbJV9nDLr+/vvO8fPv3j8XTmdOZ1XjNNn/enHnOXTZrf
mOO44CYc979/ha+aEdyvX/iVJoxNGXdg3IXxb4ytGFsztmHci7Ed476M7Rn3
Z+zIeABjJ8YDGQ9iPJixM+MhjF0Y/8F4KGNXxm6MhzEezngEY/xqnjE3kjnO
mHNnjjPmRjHHGXMezHHG3GjmOGNuDHOcMefJHGfMeTHHGXNjmeOMOW/mOGNu
HHOcMTeeOc6Y82GOM+Z8meOMuQnMccac368GY56xnjE3kTmfMc9Yz5ibxJzP
mGesZ8xNZs5nzDPWM+b8mfMZ84z1jLkpzPmMecZ6xtxU5nzGPGM9Y24acz5j
nrGeMRfAnM+YZ6xnzE1nzmfMM9Yz5mYw5zPmGesZczOZ8xnzjPWMuVnM+Yx5
xnrGXCBzPmOesZ4xN5s5nzHPWM+Ym8Ocz5hnrGfMiX61FWMwFjHmGesY6xkb
GHNBzPUZg7GIMc9Yx1jP2MCYm8tcnzEYixjzjHWM9YwNjLlg5vqMwVjEmGes
Y6xnbGDMzWOuzxiMRYx5xjrGesYGxtx85vqMwVjEmGesY6xnbGDMLWCuzxiM
RYx5xjrGesYGxlwIc33GYCxizDPWMdYzNjDmQpnrMwZjEWOesY6xnrGBMbeQ
uT5jMBYx5hnrGOsZGxhzi5jrMwZjEWOesY6xnrGBMbeYuT5jMBYx5hnrGOsZ
GxhzS5jrMwZjEWOesY6xnrGBMRfGXJ8xGIsY84x1jPWMDYy5pcz1GYOxiDHP
WMdYz9jAmFvGXJ8xGIsY84x1jPWMDYy58F9tytiKsSNjMPZjLGIczphnnMZY
xziXsZ5xIWMD4xrG3PJfbcrYirEjYzD2YyxiHM6YZ5zGWMc4l7GecSFjA+Ma
xtyKX23K2IqxI2Mw9mMsYhzOmGecxljHOJexnnEhYwPjmhXwLN29rHjimaHC
f0T8atMIzNh8o6pZUo1gqwgElN5ssKnr/9sxAhe777lxJdVaMCKQ3+v42qYz
Bwr2i8CF9f877i5YFIEDYRXjB1RMFBweAdfa5sP2RooE8xFYOTj14I4fYYLT
ImDvt/CvfVvEgnURKLDvamyzWC44NwKTM72n1vumCdZH4Ja+9sg91UbBhREY
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
1f921sOv9H6oleBIhc+ta49GUv9SpC361GO/qwv1L4XzdeVGT9N+1L8Ux1r8
cXL2VCvqX4qljW5Gfi43o/6lKPJfN+vHZRPqXwoX+1OLh01vQv1L4XF4XOf3
qY2ofyl8ax4eMnIjQ4q1+nOvU4aRvf7nznOy7Mh+UoQ1SnBpY0QOkGJc2ukB
x83IIimK3xZbizeTQ6Vo/N4O7d82pv6l6Lnn1uqRnvTzSSxFyMGto9s8o+fL
S+G/3SMDT1tT/1Lc1HptNPSjfGkN36/j871jHDtR/1KsDFbuG1HdjfqXIsis
86u+VnR/cqTonzW+7sBDa+pfikT53xdXutDPtzwp3C4X5Zcc6UX9S5H9rar+
2ztygRQl/X27S34jF0pRcyN91u7HNtR/w/3UWh1/97gn9S+FekLGh+s7yZVS
pJomLVqjo8fXSPEpe61vhndv6l+K9X3+TLs7w576l+FryPbLe5OcqH8Zqmqd
bi9KoZ+3pjIc8HQov+7rTv3LGtavFsbpR+n1ZSXDYp+7MsMMev3byeBveTZh
Yx96/zjKcG/Tx677XwVR/zK0ztIGpebMp/5leLnv6JXL+fT+9JJBddVoyIsi
sp8MY6IvLdjTfwH1L4Nm80fX2gR6/4pkqB64y7RgPL1/Q2VIK3qwrcRoBvUv
g8W8DNMnN+j5iWXQjWjnU3KY3i+8DKN722b8WzyK+pdhXjurY4NfUP40GU7e
WtZ57TUH6l+Gy7rQlCPtqF+dDIdWznjWJ4NeLzkypAZ75juUcdS/DONNXx/O
7PlG+LzMkyG00+fqayX0ea6X4YzntvKu2acFF8jQaPuEpUrLbPo8l2FlfEXp
TcsUwSUybPLx7nW1I/2+ZpBh/augM11mzBFcKYPn4/3JPmVj6fNehrf6JZ+q
NjsLrpXB54Zdh8Wl9Ps5J8er8MN+5aM60Oe/HPMvTutzYn9T+vyXo9Z49OzW
bWl90EWOumHH0kelVNL6SI5vEk9j66DHgu3ksPExqerxs5DWS3Ic2dt2hpPx
JcEucryekzy79Y1TtH6So6x2r6FKe0Swlxybztw65Zmyh9ZTcuBgxCLjPjrB
AXIMm/VbQcGu9bS+kuPKxxHLe9inCQ6Vo0n/vqPb8Cpab8nxe1J574cBEsFi
Oaa9PL3b499YWn/J8dZ+wkLtyQjB6obzn5puu+hH68E0ObwLG8vfrg4RnCnH
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

           "]]}}, {{}, {}}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{1.7763568394002505`*^-15, 1.1368683772161603`*^-13}, {
       0., 0.}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.25}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -189.58333333333331}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
4zATE8LcnMxMzo/DOsd6Q+avqWtycRzafPPtkNS2vsnlcTCbddp1UneyIGKz
k+3IkR1pfXMRQrOQXcdsa5lsKaL15k+1Qw5Xmea3FjE283bB0a40v42IDmOV
d8unNTfZTsSQt6Pf+dbpYbKjiKNPG+7dVX+QyS4ihvXS/LGzo4fJELGn6ZzS
UcPGm+wh4nNKwZbrDr4m+4iQj4u+2zN7hsm+Ivw9ls6q3X62yRIRDz9/6fni
xSyT/UWUob2+ixmtHyhiRHt7swVlk02WiljVKvpgkNHHZFHErbhpjx3EESZr
RZg5nf9HnwWT40WkfTALDYxxNzlJxKnP8xO3vxltskHE2aWent1cJpicWpP3
zrJ37utp/zNEGLxvL+w7i/YnW0RX37jNySNpf40iCp8P3eCzipwjYtOHqXt8
UmZSnyIOz96z7v2L6SYX1uRXSlvqz0+lfkV4/Gspc1s4xeRSER0terjuNZ9E
fdfMn7vq6McTdHwrRayeXHLpykrKL8gwvV/vk37Nvah/GUJ6Fb1M9x9F/cvQ
+epqJ/e2dHysZWg+p9c4sx5DqX8Z/lsb+ejLSjpedjLcTTMawuWDqX8ZxseM
Gekb60L9y3D49q8lcdV9qH8ZPusOxT/67ET9y7A7JaYk8agD9V+zvGNB1PAJ
9tS/DIV9xZh757tR/zIkfG+Wfqq2LfUvg8PUxT5BHTtT/zX7G+I+KqVlJ+pf
hu4VW188ybKh/mV4lVxSL3EbWStDg+qcPreCyPEyLJ9y+0VlbXKSDGGn4+bl
7upA/ctQFL/i8uh37ah/GfIGV9paN2tL/cvQtvmGpv86tKb+ZSgws3m5bJoV
9S9DzMAhd57ubkn9yxBU0aBfonUL6l+GJh8nVe471Yz6l+HrkIWHriU3pf5l
OFS1I8D7hiX1L4NFzwZX1i4hl8swwc03yW45uVKGRu9sbSelkgU5tnbN2Xr1
Ltlcji0XJrcIekC2lCM6Md8+NotsLUeQZ9nx3ACyjRyDbtrtc2xMtpPDsNky
YO+IJtS/HKcm/TcueF5j6l+O0Xb9xq+NbkT9yzHG2ODgiMSG1L8cK3f++2tv
4y/Uvxzf66+pbGtD9pUjbXi8986HDah/OY72q1eW9pnsL4dH/8FT+7vS+oFy
CI01dfdHkaVyLMu1yj67hSzKYRP+uYP/TrJWDvtfB4zM30aOlyPiQUuc3ENO
kmNR7mLnrzfIBjmMbaXrD/el/U+Vo+mp2dN2fCZnyJGyZVboUmfKny1HcLcO
1oNr0/EyyrH+nWX6r4Opzxw5tmtjA85nUt/5cpiNXbCgkS2dD4VyrPXXavp0
pvOlWI5uC5cfK5hPLpXjfmC3HWNBLpcjd8Hh6zYiuVKOkjxVY3VuK+pfgVSb
F9abZ9L5aa5A26KlD8K92lP/CiS4Wk3YFULXj7UCkY3Wru0p70r9KzBmU4NG
PeJ/pf5rtreyeepZP2fqX4FDrprOdf4YQP0r0HG74vUJoxv1r8DA6A8X66bT
88BDAcvFPQYc/IvuTz4KBNy4VnapN92/fRWYWafaY/ltup9KFIjuPMdz8705
1L8Cix/cGaBqu4j6V+DVfGvXoZEh1L8Cx/9b0Tzgu4z6r8nn5tLnj8g11L8C
U706BITlJFH/Cpinr3Du77yd+lfAumVqVpF8N/VfczxGLTuZU5VK/SvwOt+h
yGVlGvWvwKOxt0p2jjhI/SvQqtzW1n9QOvWvQPcrFrbXI8g5ChScw/4Vbcj5
CgRPqOhu7UnjCxWo/PT6eezEA9S/AslrVnwTdtJ8pTV9wKPO9APkcgWudkvZ
ejmV1q9UQLiyco/3LNq+oMSy4XbyzV0yqH8lnp/Nqrr8kWypRO2o3MQtusPU
vxIug9r90+Mp2UaJmWN61m7dJpP6V2JJP/m2BA+yoxLDG75auyeW7KKEb960
p4/OkaFEpU+5Qx/zI9S/ErM94hIOjiP71Gx/Q1vHmI1kXyU+uOPRlbtkiRJ/
3CzvPLPxUeq/ZvmDWJtaQ8iBSuQtKfNr6keWKlFnjte3ehqyqETGjIFvvhrI
WiU2NlI2cTpCjlfidrlLv99PkZOUUNz5+3Tzo2SDEglf1gdGJpJTlXiSPEhM
nkTOUMIn8cX8g29pf7OVWCzdcPCBH9mohOB+rrWkgI5HjhL9Dqw70dmHnF8z
39rRpZMr6HgXKhHzesaVa6fIxUr89VAQlqSSS5VIlzv1rkojlytR9HXu+dmn
yZVKSO5jqXiLLKhwdrJms1kZ2VyFk1usp0ULNL+lCkObb55+ogXZWoWjUq/Y
Lt3INiqsunkrCH1+9K/CkjFve/ce8qN/FXo3b/93Xfcf/atwZuYEz52DfvSv
Qub4yS23dCF7qLBO/XzPtbe0Pz4qHPax9b4cT/ZV4cusaisHM7JEhbTlduMv
etP56q/Cw1X7Fie3OUT9q+Ay8lXS5DN0/UhV6J4yrGjTYboeRBXszdpM1Nci
a1WofXB2yrYUun7iVegwsPdjIYicpIJK3qq12QKyQYVCs3+SY5aSU2u2d+jE
AYfYH9e/CprEGes+rSZnq1AysMvZSZvJxprjc3yC1d2N5BwVdrdJKC2JIOer
EOAb9Otte3KhCqk7An7TrtpP/avg6nGyx2v1PupfBevq9AXBTel+VK7CPMPX
I9Vee6h/FRK/Tt/vFruL+lfjy9ffT/iX7KD+1bjdzLNo1D6631mqsdRg0bbr
NQP1r0ZY+4qZeQPINmqYXTDPFNO2Uf9qbPrDdU6n2mRHNa72/P30e+cU6l+N
rzdWfb3/dgv1r0bq18N3vz3bTP2rUVXovDfi6UbqX42QMUf/XGG2nvpXo6nd
8ybHltD9WqLGvYfzO3dw0lD/ajQ/3ebcMXeR+lejf2FF2buvodS/Gr0sXJrG
NFpC/deML5jdxu8DPT+0ahT5KDyPrqGf3+PVcO8xLmpS5ljqX43eXf1upOwa
Rv3XbM9J2sL2iCv1r8aYaw9ued0eQv2rcaZFwtBey+nn6Ww1po8b1n5Xe9q+
UQ3vou19IrzmU/9q7My6+8ufXwKpfzWSnuScD/hTSv2rccuxy9/IoXzFarTf
f+KF02IV9a9GcoJ3dgcrPfWvxptUlZP25GrqXw19TkLm5Z1rqX8NdlvV+U91
I4H61yAgr6pHXkEi9a/BcWPmgzqHqQ9rDR5vHxx+fcEm6l+DgsD/vh19Sf3Z
aTBkwM2SFp2oX0cNvo+YOP9kNdlFg+nS7R/nRm2l/jWYWCtoySwN2UODTd1m
XHPqSvbRoM+QN1795DTeV4NBB5fGh9QlSzSY7Hj/2bXuZP+a7dsldplpQ+MD
Nag4fEO96CKdf1INpv1rtWPqVDp/RQ1yOyy4dsiNznetBt7By+ve+0yO1yCm
wflqL5GujyQNdm3ZnFBqsZP612Cl58pubS+SUzUo/r3q3p7DdH1laNDf2eiR
cpB+XsjW4ELZiaKqTXQ9GjV4433pU7x2L/Vfs35rmzbDsuj6zdegsPGul928
6Xov1GB4nmO9W8N/PP9r9u/exS0z59HzvFSDrMrIKRMH0P2wvOZ4RJ1XjrT7
cf/X4L6TdfX+6h/3fy2W53S/f+wW3X/NtfhHsqDu2uP0fLLUYmqmzKH0ID3P
rLVoNGnfucVbs6h/LXLMO4RYBB6j/rU1vy/Um+pgf5z61+LbB7P6DUvILlr0
vqO7+D4jm/rXIreoW9UZxQnqX4uoDo/6l+Ek9a9FhFejsOwrZF8t1jrOsXzf
8BT1r0WXb0bhQAuyvxbvVu25OKsWOVCLQTKHi0Nf0XipFtNuvr2UeJUs1uzv
w28WM5VkrRbFbwoHb29Ajtei17oAP7+FtH9JWszPGX5624/9N2hh30+788gj
ypeqxcP0xhOGlNPxyNDC4++NgVWVdLyytZCXWIpBVmSjFpJWw68dHkfHN0eL
NQOKxr7R0fHP16LBrib97NdTP4Va6H0H9pvt++P5r0X9Yw/ldtfpeVeqxYSg
qqou1+j8KNeiyWCF/E0OPR8qtagKe6xtt5nOP0GHz78EXt3ahM5fcx2uBtZP
DVpN14ulDivbGHa4T/tx/etQ5+/dH8/60P3DRgfzdXt81gTrqH8dHk98+iLv
rpz616F3wy62kWOjqX8dGj9Z6uWxje7H0GH29QOrxp2h+52HDs829J3v15l+
fvfRYdX+c8qugfOofx3w16CzQfk/3v/oMMy1pW2dOLqf+uuQ0XRF5tpV9L4j
sCZPijGvOsST+tfB1qPBic776P2FqMO3QZ9TnUsGUv86nGlgZbbGm95HxOuw
89CphsP20/uFJB3m31FXSQ7T70+GmvVHHwqMelOP+tchb9GBN7rV9D4vQ4fg
mYvL97k9NTlbB7dVu638ztD7YqMOLXyyRwVXnTY5RweJYsrbIXP20fvMmvHB
+xSnL28wuVAH66wH8xMsVPR+Uwfdo+nWl9qFmFyqQ63WlcvX5Myl9506vM4M
153qQd8nKnXIzL8yFB+G0ftPPZJaTY06NqGfyeZ6vF1ye8RjZ/reYqnHkWZF
B+qVtKH3f3oYb551/XCAvvfY6LEidPyYjyGCyXZ6eJbtj5jt+56+l+kRc6d1
79H/0PcvFz1mfP3+ZEQT+t4IPZR7mzgfSaPvnR56LEjpf3C/5zn6nqbHym8T
7naKyjLZVw/53cNpTwfQ92CJHrkBToP7d95vsr8e1dXKZ406/fjeXLN+s0+J
q/U7TJYyi3r08mq0PehMislaPb42/X1+n9pb6Hscc5Ie7wcnlfXw30Df55hT
9dAWTbr3VU3f2zP0KGv6+X/f77P1mDt64akNFWvo+50ey60uu/nN1Zucw5yv
x7HKd0k7ZsWaXMhczFzKXK6H1YDj+/Ytp79/qGQWVvxs8xU4MKL7Pvd2y+h7
ILP1CoiBr//v703+H/ADWEI=
           "]]}}, {{}, {}}}, {{}, {{}, {}, 
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxd2XlcTWn8B/BjS/ZmbBk0YUr2YpAlPmTJJGqMxDDdLMlWF223VOfuC2ay
Z78RkpHKlmW4NSgZZJsJQ9fSwpCMJGPpd3+/++034+sfr/frOc89fc73Oec8
z3O6zA77dl59QRDmNBCE//3f+q9ypPDpP3xKW2Y75jbM9sydmB2ZuzJ/xezM
7MLck7k3c19mV2Y35v7MA5i/Zh7IPIh5MLM78xDmoczDmIczezCPYB7JjE8t
MgujWDuzMJq1MwuerJ1ZGMPamYWxrJ1ZGMfamYXxrJ1Z8GLtzMIE1s4sfMPa
mQVv1s4sTGTtzIIPa2cWJrF2ZmEya2cWfD81mEVmE7Pgx/ozi8wmZuFb1p9Z
ZDYxC1NYf2aR2cQsfMf6M4vMJmZhKuvPLDKbmAV/1p9ZZDYxC9NYf2aR2cQs
BLD+zCKziVmYzvozi8wmZmEG688sMpuYhe9Zf2aR2cQszGT9mUVmE7Mwi/Vn
FplNzMIPrD+zyGxiFgJZf2aR2cQsSD61IzOYJcwis5HZxGxmFoLY+ZnBLGEW
mY3MJmYzszCbnZ8ZzBJmkdnIbGI2Mwtz2PmZwSxhFpmNzCZmM7Mwl52fGcwS
ZpHZyGxiNjML89j5mcEsYRaZjcwmZjOzEMzOzwxmCbPIbGQ2MZuZhfns/Mxg
ljCLzEZmE7OZWQhh52cGs4RZZDYym5jNzMICdn5mMEuYRWYjs4nZzCwsZOdn
BrOEWWQ2MpuYzczCInZ+ZjBLmEVmI7OJ2cwsLGbnZwazhFlkNjKbmM3MwhJ2
fmYwS5hFZiOzidnMLISy8zODWcIsMhuZTcxmZiGMnZ8ZzBJmkdnIbGI2MwvS
T23H7MjsygxmX2YJs5RZZE5kNjJnMJuYC5nNzJXMwtJPbcfsyOzKDGZfZgmz
lFlkTmQ2Mmcwm5gLmc3MlczCsk9tx+zI7MoMZl9mCbOUWWROZDYyZzCbmAuZ
zcyVzMLyT23H7MjsygxmX2YJs5RZZE5kNjJnMJuYC5nNzJXMQvintmN2DMfl
uebxirShHv9nV9YOZl9mCbOUWWRODEfSdKFx/SPjreczsvNnsONNzIXMZuZK
9vtCxKe/bxfx6fGOzK4RsJncT10vz896PCKQeeaJzf//nm8EtNUX/v09CbM0
Av098W9/MeLTvyeR2RiB2hHPFq9Jk1D+CGyOcN0/utNkq03s+EJ2vNnS7lE4
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
           "]]}}, {{}, {}}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{1.7763568394002505`*^-15, 1.1368683772161603`*^-13}, {
       0., 0.}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.25}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -265.41666666666663}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}], InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxd23lcjOv7B/CHDiJRiOJEZSsOsp4s8VGWrJU1+6SQJdI67U+zz0SyZz2T
LNm+OtYc29Chjq2yhmLs2bMly+E3399cfn6u/vF6v+6555nPc819z3Nfrxfn
6QtGzaguCEKQhSD891/zX0U/4ec//ExLZhvmRsz2zL8yOzG7MLdibsPsytyO
+TfmjszuzJ2ZuzB3Ze7G3J25B/PvzB7MPZl7Mfdm7sPsydyXuR8zfrbILPRn
48yCFxtnFrzZOLMwgI0zCwPZOLMwiI0zC4PZOLPgw8aZhSFsnFkYysaZhWFs
nFkYzsaZhRFsnFkYycaZBV82ziz4/Wwwi8wGZsGfzWcWmQ3Mwig2n1lkNjAL
o9l8ZpHZwCyMYfOZRWYDszCWzWcWmQ3Mwjg2n1lkNjAL49l8ZpHZwCwEsPnM
IrOBWZjA5jOLzAZmYSKbzywyG5iFSWw+s8hsYBYms/nMIrOBWZjC5jOLzAZm
YSqbzywyG5iFaWw+s8hsYBYkP9uJGcwSZpFZz2xgNjILgez6zGCWMIvMemYD
s5FZmM6uzwxmCbPIrGc2MBuZhSB2fWYwS5hFZj2zgdnILASz6zODWcIsMuuZ
DcxGZmEGuz4zmCXMIrOe2cBsZBZmsuszg1nCLDLrmQ3MRmZhFrs+M5glzCKz
ntnAbGQWQtj1mcEsYRaZ9cwGZiOzMJtdnxnMEmaRWc9sYDYyC3PY9ZnBLGEW
mfXMBmYjszCXXZ8ZzBJmkVnPbGA2Mgvz2PWZwSxhFpn1zAZmI7MQyq7PDGYJ
s8isZzYwG5mF+ez6zGCWMIvMemYDs5FZWMCuzwxmCbPIrGc2MBuZhbCfbcPs
xOzODGY/ZglzGLPInM6sZ85hNjAXMRuZK5iFhT/bhtmJ2X0h1JVnBst29PL8
X4PZbyH+PP6kZvX9g82WMIctxOCzDbZ7/eprtsiczqxfiJq+nZTV8v3NzmE2
MBctxOf1M1dmKkaZbWSuYK8XwuG180HGpqlTzbZhdgrHxrBCU76JZruHA0dG
LS5uPZ3yh6OT715N9cwplD8cIyoGh5xqPY/yM4eF4+Csz6b7MYvyh2NNlLsp
7wLKH44ZC0vTL30LpfzMOcyGcOy1y/r93vNYyh+ObkOcJ+tWx1P+cPiFzm3r
1YnGK8Kx9PdWBd2vKih/xM+2icDzxQtuv76hpPwR0L8JDR+0fhHlj4B49FRg
V9d0yh+Bp/byNbX3L6P8EfjDy9N0f5dS/ggMXTVS512dxsMi0LZr8/xJ/6yg
/BHYHnr7a+exqyl/BBKH9pvRrfp6yh8Bi9rhkZ/2kXMiUBXyfmWabhPlj8CF
Gt3lI/ZkUv4IxO0JKfU8tYXyR2CS7a9nUo5tpvwRyNta1jK/xnbKH4nCA9F+
/ervpPyRWJjmaqrHHsofidBq7q96n86h/JF4/K6e9NVvf1L+SLj++clNH7mP
8kdix7SJJVeXHaD8kThrF3s3+V9yWCSWP5V19JAdpvyRmFPQ6eKKd39R/khI
JY4NE5sep/yRiM9pfyjd5STlj0TMgqB8dyPZEAm7EfU+Pm31N+WPRIe2+Ze2
+p+m/JFQT5PXzirOp/yRyH88tHnG3wWUPwref6ydmKc8R/mj4CidtmWPxXnK
H4WebRX3GncuovxR0MhrRfe2K6b8URg8ZuTywPc07heFC4srx8XWvUL5Te/f
+np48KirlD8K1i39V3V5fY3yR6G09vglBXYllD8Ku+Mdgt6F36T8UbBMKapx
x7KU8kehRs2x/kXxdyh/FA7vvvChyu0u5Y9ClnarrXvAPcofhdSMd+9XDbxP
+aPglp658u2hB5Q/GvcPa58G7XpI+aOxSD8gzXXkY8ofjQ5Ds8s6HSun/NF4
6KaXONg+o/zR2HEuMUZz/Tnlj0b0ww0R4bdeUv5oVHmfXHpIWUH5o7Gs5/DR
4XPfUP5odK5032Y55i3lj8aCKu/Q7rbvKX80VOuscsq2VVL+aDS5PdRNvfAD
5Y/Gk1tZWxRNP1J+0+tLZitj3T9R/mgMTgyyvmPxhfKbPu/m9k4Wnv9S/hg4
NXUIu1n/G+WPQdDfn63dDgl9zfljUN7hRr1tltXNdo/BMIfrtdtryYiB6xPZ
rdIGv5jtF4PLHT7fnWdR02xJDJ73fmNZUb+W2WEx6FtRNP/NOkuzxRiUlf13
PdY2Oz0GZ3OnjZq1h6yPwbkms2QX59QxOycGLcvvrWjbyMpsQwzWdOy8JDm6
rtlFMRhu5fDlzzXWZhtjcEHXsWzYsPpmV8Rg7OpWQTWdbcwWpPg26NKZxOa2
ZttIcUySciXhONlJCk/bc5Pt8hpQfilmX6/2pbBjQ8ovhWPstPyCvmQ/KV60
7lB/bCW9XiJFv9ykTSdq0HiYFMaMWIniu0UpLM9delscTk6XYlQz+69Dqjei
/FLs+zg62sFAzpFisE/Oac9iO8pvmn+nLMtT2oTySyGXjX7e2sqB8ktx+fqS
8d2nN6P8UiTZ1L5lddSR8seiTp8nrXZsaUH5Y9HhnShtHONE+WMR9NvATy16
O1P+WHg6dTbu2OxC+WOxbI1VcMc+rSh/LMYHBlrXSGxD+WOxvFUry2Er3Sh/
LGqdCS1dVqMD5Y9F429HFS5/uVP+WPg6LJsVF9CV8seizKZ3i84BPSh/LEqC
6lVGpPWk/LHYteNLkxopnpQ/Fs8fbtymtu5P+U155JbrK0Vvyh+LhBkXNEsH
DKL8ccj8MDdvzm9DKH8cNJ9CZljFDqf8cfBWZ1vtqO9H+ePQfFN4za71RlH+
OPzRrBxL2o6h/HHokzV80tOUcZQ/DiMsR7da8DyA8seh1gevSTeWTqL8cajh
XdDPLXAq5Y9DUIG7S6McCeWPwwqH01fq+Eyn/HF43tk9v8vLIMofB6fPIW1r
5Myg/HH4F0GJ5atnUf445GcXJVYkz6b8cWjZybr59vi5lD8evwUKcxssCaX8
8bhSd2atXacXUP54lG4M/LXOtzDKH4+n4+eOeO0YTvnj0TDtyok87wjKH49T
X9dcqx4ZSfnjYSPvZ6i+PYryx+Nm3we/aIzRlD8eGfV2rulpJ6X88Xjwp2PN
v/1jKX88vI/tlcuXxFH+eAzduz4kKz+e8sdjl41m6etfEil/PDp7DbEK65JE
+eNxbOu6T6FTkil/PHSpSU6bvUXKn4AdW8e4zL1EtknA/sSopr9PTaH8CZiW
EpyzupTsnoDORya8PDhZRvkTMOv2774dCsl+CbC+FfOubi855U9AxujN8htZ
5LAE1NdO/1jtC1lMgHR3fP3IkQrKnwC3BYZ6s3VkfQLkVy12rT1HzklAw6ws
6T9vyYYElJwIeGDfREn5ExBab3jgg/ZkYwJsAp/NmNydXJGAIcWT8vu0IwuJ
eFns+GxKXbJNIi6ucDlkV0Hv75SIwAb9V+38i+yeiOqtnfPt48lIxETL4no3
u5P9EnH5w6cunqXf8yciYHLWb8cWfM+fiMSK+Cd7q3/Pn4iQjvqUrkq6f+mJ
eF/psa/mJ7rf+kSstY3d+C6YnJOIXTM3bfhWQPUyJMK7zconbm3IRYnIDZ3q
fLDqe/0TsaLVr7v7LqHvR0UiCqet2HDHOYHyJ6FP3pnIkL30/bJJwuewQ2nb
3Oj755QEi/dj85odiaH8Sbj79MP4fz3o+4skbG4UPeX3P+n77pcEqWoc8rvS
epAk4bKhdWHekYWUPwlrU1LOT+5J60lMQuiUIIkijNZfehI63BTfYu4cyp+E
/v2TUsdqaD3nJMG/xQULaIIpfxLKgldK6+UEUv4kiI5Xn2cUTqH8Sei69GrE
q0O0/1QkYcsujXw+aL8SkvH54fuB96v7U/5ktHRetmt9gC/lT8a3+be/WrWg
cfdkTCus+DQ7mvY3JCP/27ijjzS0X/klwzuzmcMsB9pvJMmYqdMEDyqj/SIs
Ga41p+4/N5vWr5gM6zvvG8m+r5f0ZPzR6ki8d5WW8pve7/ggq3GP0il/MoLe
1bkc67+S8idj88dLz3Kt11L+ZDTvGzJ8WOlGyp+MQz7FdZr+nUn5TV6ZNKrH
zSzKL8JBUrn/P6lbzLYUkTp7x5k/9myl+yFiWGRSr5HO28y2F3HQ/tvBXpdo
3EnEk4+9D8UfofmuIt6MsFnj/Zre311E5pyTt21X0fU9RNhuPSv1Pb6B7p+I
h157vq77JcNsHxH/Xr3R9W3sMrqfps/n82T14Vc6swNEeDyQpNWR03qRiPAP
bzu65XP6foaI2HFncq1ORfPofouQ+uy+l+dN9ZGKyD4x+0b/9lRPUUS/BWes
a/Wn30uNiKJEya2rt7//HouwH7nCafA8eh7IMI1j6I1JVvT8pBcRZ3ysGH2D
nhezRXSIGtY2PeU1Pa+KeLGu0vVMCD1/54qYVJLx1C2Env8NIuqcebpwwio6
bxSIaHhyg8e3ohP0PGuqxwz0zQ7cb3aJiCsvTzb7sDWbnm9FzA2ziAqsTee/
chGh6yxOpM6h82WFiNaqbtO33k41u0pEhP/8H+dbIQUHn143ne/jzLZMwYjX
bw4P6RRJz8MpyJAs6tQgbbbZ9imYOXbXy6WrZ9L5IAVdvPGjn+DK7J5C53vq
Z3iY3m+CUOv/+iFIgfD//3yY/ZgDmCXMIcxhzFJmkVnDnM6cwaxnzk7BhWDj
j35QDnMus4G5gLmIuSQF2bsv/+jHGJnLmSuYq5gF2c+2ZLZhtmd2YnaVQQx7
/qN/5M7swQxmH2Y/Ga68cTiTcizY7AAZuvoHXHOOH0vnSxm+LjBoqmeOMDtE
howBk3/0p8JkmDnS6cd8KbMoQw1Zypra+8PN1sjQ90Xxp39ax9B5VAaD1a4t
/b0izM5g1svwdk3Ij/5StgzSf5v/6D/lyHD8VsTKTIWM6i9DUGNHW1U7DdVf
BozZalpPKqq/DFPO+c2J9qR+U5EM6064mdbPEqo/s1GGj8LHteOi06j+Mlg/
PrZDnric6i9DlV/BbttMcpUMXm3rnXJIo/1BkKNW4pDLy8evpPrLkXn+lUVk
OvWjbOTwW34Si8avpfrL8dq/T/DEynVUfznq2w0O+tRTT/WXo2rkccmEX8nu
cpQL0oWP7pA95KjnPnV/05dZVH85RngdePPxzFaqvxy3DUkdpkZTf8pPjrpj
Yn70pwLkmLHM7Ud/SiLHmi9Tlyg991L95Ujr1LDzqnzqR4XJYVW1evwbLfWf
pHJMsmxWIN1N/SZRDrF1j6YRodRv0shx+VHJ0l1W5HQ5dKf3pKg2UL8pQw7N
lLzi8wOpv6SXo118+J1zD8nZpvdzae4z/iT1m3LkaJZnOauo3T9UfzmWftmX
oVtA/SaDHBHzCvUTL5IL5OgcrLmW4HWR6i/H2P5nK5s3p35TiRzp45o1uexM
NsohPaxZd+zcJaq/HI52U3xX7btM9ZcjscntSPs51H+qkkPeuWzup2j6/REU
uDVn2Mfqja5T/RUoazZv5YPJ1I+yUaBWQ/uioytuUP0VcO028cDvl8hOClRF
PZDmLbxF9Vdg379v6wclU7/KXYGgWE1c489kDwV8ZpYaeh65TfVXIMnbsb/7
cbKPApEt++d4LKD+lp8CH3vb9Zi6jxygQMGHjS81Fkaqv+nzrC2csW48OUSB
RWevfXU9SQ4zzVfMtEiqJEsVmD7Gd8mJFOqXiQq8KPUeK8knaxTI2Bfw96aj
5HQF+nWZ3rbnOuqnZShwYmLJuBcryHrmbAUmBhY5hjwi5yhwfu9jV2E3OZfZ
oMDopq0WDrOm54MCkx+OKZ8SSC5SIKXxPZcdzuQSBfpuW9yp8ADZqECvTWVP
vyaRy5krFFB5Zm7a15xcpYCVc+PQ+2V0fUH5sy2V2P1oVY9vw+n1NkpI2n0L
HNaEbK9EM+/X7472JDspYf3bLafK2mRXJRysx7+4YaT3c1fi6NG/jHGWNO6h
RDvJ7GUNA2kcShy/UD6t2Jvsw+ynRJ5lrybT1pADlHAVxQ0725IlSkxp8/ac
0o4cosT2vz+srVOHHKaExcfU63XuUT2lSgzyuj5xiSWNi0rIl1VUS9R/r78S
/5n03/7y9/orkRb48uKIRHKGEjHz5TsHrqXvk16JEZHHDIHXydlKdM23SZy7
i5xjej9x7cEyCTmXzTcoMXFMxZbGE8gFStjF3F8woQG5iLlEicKWxfsXb6b1
YFQiflfu7tX+5HIlPPp+6rFrMK2nClO93KO6P+xOrlLis00XhzWBZEEFZdD7
TWunlFH9VZDuO//5UW2yjQodVMtVp2xp/dqrsLtxz3kby6g/7aRCw/vvfUfV
/r7+VfjaJ/DQsye0P7gze6hwqd/ZNv/8SfsNVKjamBS19DHtRz4q9Ln0V2C0
QPZTIdQlQ7mlAzlAhV4bX5ueT7/311VQ10o/10pN+12I6fNaP1smzKL9MEyF
ueejLAbspf1SqsKOFj2nLatD/XqRWaPC536OhxpfpufxdBX0dzquzptC+3OG
CheWnN5wfgdZr0KAVfk2P2d6fbYKsmPvikZUo/07R4VKvad9zy30eXJVONgn
8rd8r+/9exV8S5wDazahfnqBCvcHP5nSxlBF9TfVo3zdvOd+1E8uUeHBoKkf
HcdRv9SogvbXypxuDel8Uq7CiV69Sm1PU7+xQgWr3UsX5lh3M7tKhb5tJ49q
4NaXzn9qbNycHJBWk/qBlmosOhD917H5dP61UWOC/8B798+OpfOfGo+fLfGS
Z9H52kmN7q1rZXU/Sf04VzXSw9p8np9H5193NWyGii/CQui876FG279ntNFP
pX4B1LgR0PHRk2nU//JRo0dq0MeiOtSf8FPjWmnmt9fvqZ8RoEadXuOS1ZnU
75CocVRsNmB5IfVHQtRI6VG8N8H3e79FDccjmgRpP+rvSNVItvvDp2mQms5/
asibXvloP5jO2xo1dsa327ttPZ0309VomTX+wruQVDr/qeGgWJt8z2URnf/U
2LSl/+LM4Yvp/KeG8rahvOWrNDqvq/GiWFaUPITO77lqzH86ZlztO2SDGkG9
9yXv7LXU7AI1OkwSByakkYtM44YPxa/60nm4RI2L31p+Sw9YTvVXI+SXE9MX
H1hB9VdjTPmKg0cfU3+gQo1Dddeu7apbRfVXY7eqX85XLVnQ4PZ/Xg729yRb
anC15+VVCfXJNhoMu102xTiYbK9Bm/q5abFfyE4aXGxlcHE+QOd3Vw28Jz08
eSBzPdVfg4E9MgKc+myi+mswdqzz3DEW26n+GowvWPHL06t/Uv01uHB81efw
A4ep/hp8yc7ddDnyFNVfgxdnum31H36W6q/BnfzVg3Rpl6j+Gsh/90p7dOcG
1V+Dgk0+N9sX3KX6ayDpvKDFHptyqr8GD9dveW2oXUH11yB4WB2XqAbvqf4a
VA6wlazz/Uz11yAr4NnetNhq5v8nodcg9FDXm3ua1DQ7W4N97Y/4p623MjvH
lH/x2ft2trZm52qwWRl/t7uxkdkGDY7V27p1zAAHswtM85tMeODYt7nZRRrc
WHSqblaZs9klGrysvSCtw9FWZhs12B1cLWr8wrZml2vQVjc93EXjZnaFBhZ9
auZFpbczu0qDerfDSzNTyIIWGfVauFW/Qq+31CJAVXr5mh3ZRov77xyGzglz
Ndtei+d/tS9qv5uu56RFskV+4aSNbcx21eJ0xsU1xaGtzXbXornOsta92fR5
PbT4w3G+bfMtLc2GFuVDizUP7rqY7aNF2paTlg0eUl4/LZ6OnraxV56T2QFa
HNOcH6lf3MJsiRYRE0vinNrR/QrRolmldouNg6PZYVpM7yQi/lUzs6WmPDcU
p0qzmpotauE5tsVQ31S6/xot4p9G2wwttDc7XYtihwf+aEPO0OJCDZvJFc5N
qP5a7FNXjis8bEf112LH3cJTiolU3xwtHlQGRCTNakj11+LVuEfW5681oPpr
Yf/+y2yXseQCLa7kzPZscoC+L0VaHM3ubZjdiFxiuv6dgdrDS22o/lpMOnkg
KMuBXG6qZ653wNl29an+prx+hxY36FSP6q/Fu4hezu6TrKn+OmxS77noEF6X
6q+DpOSaPteDvr82OiQULQ7Zcqs21V+Hy8ZrKVu3W1L9dfCtaBg9dkMtqr8O
F3IeysJTaD246zA/5FOwdmgNqr8OJ0r/crK0/IXqr0PAu8l3V66oTvXXIeOw
c/bCHQLVX4eNFe4Vp1RfaP3r8ER+tvHmcR9o/etwbGhS1DLpG1r/OowoSj2O
7c9p/euwOn9O0Klaj2j961A/+nJz9wdGWv86PJ8/RDb6He0XGh1Cng39t8Dy
Cq1/HY40C05KbVZI61+HMMt7FZG+BbT/62Dwcoia6JJH+78O3YLP7gv1O077
vw7TNrnt1HfKpf1fh0W3nE70DNlH+78O19rZXr85aQ/t/zqE3i5w6RhD+2OR
DgPaJb1vf2Ez7f86uJ/fm16vEfVTjTpcsb82KLMd7bflOgx3wLtuk1fT/q+D
+qXVilPz6feiSoclMy8vTe1Fvz9CKvC1y4lGnvT7ZpmKwKYvn3u8UNH+n4oc
h9N/dJ5Gv6f2qVjZcmbJ6iCx7/8ASpZPew==
           
           "]]}}, {{}, {}}}, {{}, {{}, {}, 
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
xmXy/Y9EGrfsdvdVkaEBR/nHxZRPY5b04v0UqbzrmByFYkDAMSL1jF8U/VvV
MN5fkQYt3lM1728+f4JIo++/smp7+Xjeb5E2ZZ/KORzJ69GJFNZnyIovi/n+
KIrUdMHaqX/VTgw4S6TgfjuPPSybwf3w14/Mb3CudVLADpEamIZ9mVTE+Z0i
VTwu0Z6LSgk4V6T2recUntuQyv0SaULnjXHfVfH+FfrXf/6Tbav76Lh/Iu2Y
cr4lBfN+l4iUdetOvz4WHneLFPXDod1jRvP8Mv96O0T+OLaY63tEupPQOcQ6
iPffK9KWt2Yl3w+O436LtKBO7pk+nccGXClSn7aTH21eOor7b6H2N02rG95m
B1no0f4B4w2Ho7n/FjqVeLyrt+0E7r+FelxRhNmH8feN3EKlplfPJh7gegoL
xZrijBvyvuD+W6hV7vqjMiGe+2+hiqT2sv6lbLKQeq/eNr5FAvffQhM7Nz1v
eMbjKgsl2vKTO81ix1ho/q97v5IOcf/UFhoTvflmtxNcL8FCB49OOek6PZn7
b6EBbWIT8v/k9eks9P7uqhWdW7NFC3lHza5ovo+vjywLnTakZjkusu0WcjSa
ZCrP4eMdFto6ucnyLh4+v9NC2c6CKXVP8npyLdQ2NvvMzqVTuf8W+rX56oVT
d/P3b6GF3mzuUx+tz/2TLNRwZGzLmbXTuP8WKpyQ3GTbHv58ui30vPx071TF
bO6/hdaNXhnTXLWA+2+hmsEXs5dX8v3Ba6G+E/5e11jG92ufP9/JS0evLOX7
daU/z2dXSpoO5fuLYKW63qnr93v5+yfISoNfXdr0/ZaruP9WSvpgzo1zmfx9
E2ylrK2eb51z+PtEbqWrdO9KjZzF3H//+fbFH/CssXP/rTQzdmfkyLMLuf/+
41vF/DMok9dPVpJPOl0S/Wg+999Kx2TzNt2+ylZZaYGtTuve3fn4GCu9safG
jIiNbLWVasl6N9zchc+fYKWu6hkdTm1ha6x0/9jQXdeU/HtFZyXd5EVTVi5j
i1b645teC55fYGdZqVODVtNX1+L1263Usp2my5G6bIeVQvctvK29xMc7rfTT
wbCBA+awc61UmF36Qb0TXN9lJW3PVffv5vN6C6104+62V9668TX330o/T1vk
Hf/tPO6/lYJbbf9w7d453H9//mTLuZ12G/ffnye2Vb+Og/5/f7fS0ubXF058
zvcPr3//vPWo1gX+feezUuOaezLWP+b7Q6WVogrPRS58l69fwUaei4/Od6jg
35NBNlo/e+qKWoM+4f7bqKjgneKR2kjuv40ajbgWUjWZ789yGy05PPXCiuNd
uf82Umyv2tKuF/+eVtpoTNnV8n0dW3D/bbTvjUYr93RpyP23Ua+Lv53bX8rP
J1E2+mFWZeryb/h5QGWjLfNGHy6w3wo4xkbPj8b9rNHz87faRp/vGjq/172z
ASfYSJuSe6njpuP8vOE/X/LBolnG4oB1NgofuON1x9yt/PzhH+/VRX3v0PKA
s2zUZe3TujW3z+XnERsVxP/jd3zADhs5wtwv3zc5bVQa5Xr5vijXVv19kMtG
uXHnB1nzDAEX2miUpZ70hTaTn99tFPzKhtuLvp0TcAnYbaOkV/J9kZvZZf79
2nxrRuQ+kZ/vwV4b5fzd4eX7KZ9/vSFJOaszrQFX2ujNLZs3PBxr4+f/zOoO
yqQjw6d2iuiq5/cBmfS4quzl+oPBcrACrASHZtLglrSliZHfz1Emva14++X7
uiiwChwDVmfSq96T9pMvvuT+Z1LuplP+euO4/2AdWARnge1gB9gJzs2kuY8O
/et9LbgQLIFLwG5wGdgD9oJ94EqwMLu6g8Cy2ST8+y8YLAcrwEpwKJjAUWAV
OAasBieANWAdWARnge1gB9gJzgW7wIVgCVwCdoPLwB6wF+wDV4KFOdUdBJaB
g8FysAKsBIeCCRwFVoFjwGpwAlgD1oFFcBbYDnaAneBcsAtcCJbAJWA3uAzs
AXvBPnAlWJhb3UFgGTgYLAcrwEpwKJjAUWAVOAasBieANWAdWARnge1gB9gJ
zgW7wIVgCVwCdoPLwB6wF+wDV4KFrOoOAsvAwWA5WAFWgkPBBI4Cq8AxYDU4
AawB68AiOAtsBzvATnAu2AUuBEvgErAbXAb2gL1gH7gSLMyr7iCwDBwMloMV
YCU4FEzgKLAKHANWgxPAGrAOLIKzwHawA+wE54Jd4EKwBC4Bu8FlYA/YC/aB
K8HCV9UdBJaBg8FysAKsBIeCCRwFVoFjwGpwAlgD1oFFcBbYDnaAneBcsAtc
CJbAJWA3uAzsAXvBPnAlWPi6uoPAMnDwS/8HL2EnEg==
           "]]}}, {{}, {}}}},
      AspectRatio->NCache[
        Rational[1, 10], 0.1],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{1.7763568394002505`*^-15, 1.1368683772161603`*^-13}, {
       0., 0.}},
      ImageSize->700,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 867.}, {-0.1, 0.25}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {367.5, -341.25}, 
     ImageScaled[{0.5, 0.5}], {700, 70.}]}, {}},
  ImageSize->{
    UpTo[600], 
    UpTo[351]},
  PlotRange->{{0, 735.}, {-379.16666666666663`, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.8257754113034697`*^9, {3.825775497085698*^9, 3.825775509138315*^9}, 
   3.825775542947028*^9, 3.825865074378841*^9, 3.8259261364518557`*^9, 
   3.8260397518305607`*^9, 3.826039944896064*^9, 3.826040010957356*^9, {
   3.8260433757990294`*^9, 3.8260433913087463`*^9}, 3.826043422855598*^9, 
   3.8260436090417967`*^9, 3.826128005870101*^9, 3.8261282810864363`*^9, 
   3.8261297310041847`*^9, {3.8262924834627647`*^9, 3.826292512751976*^9}, 
   3.826293005135646*^9, 3.8262935373462143`*^9, 3.8262935739494247`*^9, 
   3.826294038069433*^9, 3.826295058249445*^9, 3.8264640140338793`*^9, 
   3.826537743951481*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"94e6a4b4-658a-4536-8407-5daafb2f13a4"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[{
           {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
           {AbsoluteThickness[1.5], Dashing[{}], 
            CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.560181, 0.691569, 0.194885]]}],
        TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
      2.0764712319067944`}}, {{2., 6.999573557985706}}, {{3., 
      0.544496212526245}}, {{4., 0.00011085064390526313`}}, {{5., 
      0.00011296049893684193`}}}]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[{
           {GrayLevel[1], 
            PolygonBox[
             NCache[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
               Offset[{2 3^Rational[1, 2], -2}]}, {
              Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
               Offset[{3.4641016151377544`, -2}]}]]}, 
           {AbsoluteThickness[1.5], Dashing[{}], 
            JoinedCurveBox[NCache[
             Line[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                Offset[{2 3^Rational[1, 2], -2}], Offset[{0, 4}]}], 
              Line[{Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                Offset[{3.4641016151377544`, -2}], Offset[{0, 4}]}]],
             CurveClosed->True]}}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]]}],
        TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
      0.008551616967473686}}, {{2., 2.618155827609768}}, {{3., 
      8.718888054177222}}, {{4., 9.725064931461457}}, {{5., 
      0.005787507524663158}}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Subtask Variance\"", TraditionalForm], None}, {
     FormBox["\"Neuron\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 9.725064931461457}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8257754113034697`*^9, {3.825775497085698*^9, 3.825775509138315*^9}, 
   3.825775542947028*^9, 3.825865074378841*^9, 3.8259261364518557`*^9, 
   3.8260397518305607`*^9, 3.826039944896064*^9, 3.826040010957356*^9, {
   3.8260433757990294`*^9, 3.8260433913087463`*^9}, 3.826043422855598*^9, 
   3.8260436090417967`*^9, 3.826128005870101*^9, 3.8261282810864363`*^9, 
   3.8261297310041847`*^9, {3.8262924834627647`*^9, 3.826292512751976*^9}, 
   3.826293005135646*^9, 3.8262935373462143`*^9, 3.8262935739494247`*^9, 
   3.826294038069433*^9, 3.826295058249445*^9, 3.8264640140338793`*^9, 
   3.826537744108259*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"b7631662-32af-4e7e-b949-ed041b928046"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Together", "Section",
 CellChangeTimes->{{3.826127635167426*^9, 3.8261276575390797`*^9}, {
  3.826128025915163*^9, 3.8261280267909937`*^9}, {3.8261281722879343`*^9, 
  3.8261281786875353`*^9}, {3.826292360821279*^9, 
  3.826292361619844*^9}},ExpressionUUID->"70900523-5f5f-4dd7-8e9a-\
63c36d9ac9b5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Variance", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba1", ",", "bc1"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Variance", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba2", ",", "bc2"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Variance", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba3", ",", "bc3"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Variance", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba4", ",", "bc4"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Variance", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba5", ",", "bc5"}], "}"}], "]"}], "]"}], "]"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Variance", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa1", ",", "ac1"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Variance", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa2", ",", "ac2"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Variance", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa3", ",", "ac3"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Variance", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa4", ",", "ac4"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Variance", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa5", ",", "ac5"}], "}"}], "]"}], "]"}], "]"}]}], "}"}]}],
     "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Neuron\>\"", ",", "\"\<Total Variance\>\""}], "}"}]}], ",", 
   
   RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[FilledCircle]", ",", "\[EmptyCircle]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<TotalCombinedVar.eps\>\"", ",", "%"}], "]"}], ";"}]}], "Input",\

 CellChangeTimes->{{3.826043543187524*^9, 3.826043586853676*^9}, {
   3.826295686764242*^9, 3.826295693829627*^9}, {3.82629575396395*^9, 
   3.82629576127779*^9}, 3.8262958744576797`*^9},
 CellLabel->
  "In[285]:=",ExpressionUUID->"38050836-29ce-432b-abd8-662bc05a28e6"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
     GeometricTransformationBox[InsetBox[
       StyleBox["\[FilledCircle]",
        StripOnInput->False,
        GraphicsBoxOptions->{DefaultBaseStyle->Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]]}], {0., 0.}], {{{1., 0.06950047394718602}}, {{2., 
      0.025677401914238895`}}, {{3., 0.1536261852163368}}, {{4., 
      0.13149060043191474`}}, {{5., 0.22217052053713965`}}}]}, 
    {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
     GeometricTransformationBox[InsetBox[
       StyleBox["\[EmptyCircle]",
        StripOnInput->False,
        GraphicsBoxOptions->{DefaultBaseStyle->Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]]}], {0., 0.}], {{{1., 0.14872814487618027`}}, {{2., 
      0.03792218923485484}}, {{3., 0.12929751549802315`}}, {{4., 
      0.021985810277795094`}}, {{5., 0.006833101754012972}}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Total Variance\"", TraditionalForm], None}, {
     FormBox["\"Neuron\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 0.22217052053713965`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.826295756427292*^9, 3.826295761667282*^9}, 
   3.826464014806939*^9, 3.826537744615069*^9},
 CellLabel->
  "Out[285]=",ExpressionUUID->"81b94460-246b-497e-ab9d-277923103c26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba1", ",", "bc1"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba2", ",", "bc2"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba3", ",", "bc3"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba4", ",", "bc4"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"ba5", ",", "bc5"}], "}"}], "]"}], "]"}], "]"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa1", ",", "ac1"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa2", ",", "ac2"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa3", ",", "ac3"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa4", ",", "ac4"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", 
         RowBox[{"Catenate", "[", 
          RowBox[{"{", 
           RowBox[{"aa5", ",", "ac5"}], "}"}], "]"}], "]"}], "]"}]}], "}"}]}],
     "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Neuron\>\"", ",", "\"\<Total Variance\>\""}], "}"}]}], ",", 
   
   RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[FilledCircle]", ",", "\[EmptyCircle]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<TotalTaskVar.eps\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.826295895481399*^9, 3.8262959437313433`*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"9348a504-0bec-4a45-a0ae-21d28bc2c776"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
     GeometricTransformationBox[InsetBox[
       StyleBox["\[FilledCircle]",
        StripOnInput->False,
        GraphicsBoxOptions->{DefaultBaseStyle->Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]]}], {0., 0.}], {{{1., 37.314278584892726`}}, {{2., 
      16.63849792249841}}, {{3., 88.21451407588528}}, {{4., 
      43.00029671217713}}, {{5., 6.179628912173005}}}]}, 
    {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
     GeometricTransformationBox[InsetBox[
       StyleBox["\[EmptyCircle]",
        StripOnInput->False,
        GraphicsBoxOptions->{DefaultBaseStyle->Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]]}], {0., 0.}], {{{1., 82.33336525522746}}, {{2., 
      11.887527123609056`}}, {{3., 69.96861860876383}}, {{4., 
      13.07603990902027}}, {{5., 0.004316883033800014}}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Total Variance\"", TraditionalForm], None}, {
     FormBox["\"Neuron\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 88.21451407588528}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.826295939613945*^9, 3.826295944194778*^9}, 
   3.826464015334689*^9, 3.8265377450840473`*^9},
 CellLabel->
  "Out[287]=",ExpressionUUID->"9f910baf-c511-44ac-9bc7-c39876ee7724"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ba1", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ba2", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ba3", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ba4", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ba5", "]"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "bc1", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "bc2", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "bc3", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "bc4", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "bc5", "]"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "aa1", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "aa2", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "aa3", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "aa4", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "aa5", "]"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ac1", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ac2", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ac3", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ac4", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Variance", "[", "ac5", "]"}], "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Neuron\>\"", ",", "\"\<Subtask Variance\>\""}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\[FilledCircle]", ",", "\[FilledUpTriangle]", ",", "\[EmptyCircle]", 
      ",", "\[EmptyUpTriangle]"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<SubTask_Values.eps\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.826295998084996*^9, 3.826296030731361*^9}, {
   3.826296068597179*^9, 3.82629608449084*^9}, 3.826296120117918*^9},
 CellLabel->
  "In[289]:=",ExpressionUUID->"93c9fd50-089c-447d-9957-283683484651"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       StyleBox["\[FilledCircle]",
        StripOnInput->False,
        GraphicsBoxOptions->{DefaultBaseStyle->Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}], {0., 0.}], {{{1., 
      0.4164667532309053}}, {{2., 0.00016474762788421077`}}, {{3., 
      0.006297680350610919}}, {{4., 6.86153462799107}}, {{5., 
      2.606543011134748}}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       StyleBox["\[FilledUpTriangle]",
        StripOnInput->False,
        GraphicsBoxOptions->{DefaultBaseStyle->Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]]}], {0., 0.}], {{{1., 21.530643540814}}, {{
      2., 14.997945632611989`}}, {{3., 13.549001913099312`}}, {{4., 
      5.239150710515735}}, {{5., 0.4430323108280568}}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       StyleBox["\[EmptyCircle]",
        StripOnInput->False,
        GraphicsBoxOptions->{DefaultBaseStyle->Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]]}], {0., 0.}], {{{1., 
      2.0764712319067944`}}, {{2., 6.999573557985706}}, {{3., 
      0.544496212526245}}, {{4., 0.00011085064390526313`}}, {{5., 
      0.00011296049893684193`}}}]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       StyleBox["\[EmptyUpTriangle]",
        StripOnInput->False,
        GraphicsBoxOptions->{DefaultBaseStyle->Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]]}], {0., 0.}], {{{1., 
      0.008551616967473686}}, {{2., 2.618155827609768}}, {{3., 
      8.718888054177222}}, {{4., 9.725064931461457}}, {{5., 
      0.005787507524663158}}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Subtask Variance\"", TraditionalForm], None}, {
     FormBox["\"Neuron\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->250,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 21.530643540814}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8262960848844137`*^9, 3.826296120987906*^9, 
  3.826464015827414*^9, 3.826537745553739*^9},
 CellLabel->
  "Out[289]=",ExpressionUUID->"ca47f3e5-594f-4288-8c7f-2a65dd40e693"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{867, 906},
WindowMargins->{{Automatic, 124}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 9, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0ab390a0-00de-454a-bc48-995edc36972f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 211, 4, 98, "Title",ExpressionUUID->"0e3017fc-6971-47e6-ace5-241f0c24c458"],
Cell[794, 28, 617, 15, 73, "Input",ExpressionUUID->"c1f4041e-1d89-4e10-a752-4fee3d8691be"],
Cell[CellGroupData[{
Cell[1436, 47, 152, 3, 69, "Chapter",ExpressionUUID->"ce993321-b2b2-44e4-90e1-6dc5732a63e3"],
Cell[1591, 52, 2290, 65, 220, "Input",ExpressionUUID->"bf5cecf0-a8ce-4152-883c-668c497770f0"],
Cell[3884, 119, 2025, 61, 220, "Input",ExpressionUUID->"6ed39aba-d4a9-40b7-abf0-03335a350299"],
Cell[CellGroupData[{
Cell[5934, 184, 1313, 35, 94, "Input",ExpressionUUID->"2ff1fa49-72e7-471f-9048-e9585932a572"],
Cell[7250, 221, 532, 10, 34, "Output",ExpressionUUID->"ec5443ba-ef2b-414d-8442-f215cc5ae2f0"],
Cell[7785, 233, 520, 10, 34, "Output",ExpressionUUID->"d100ed24-05d8-47fc-808c-39a45d07a653"],
Cell[8308, 245, 530, 10, 34, "Output",ExpressionUUID->"f4ff0463-6fc8-4e9e-9875-74aff7fe971a"],
Cell[8841, 257, 528, 10, 34, "Output",ExpressionUUID->"75db8623-80e8-443f-bf0a-1f3fd7dbeb96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9406, 272, 981, 20, 73, "Input",ExpressionUUID->"290648d5-4169-467f-87af-e6f1bc5fa2f0"],
Cell[10390, 294, 5740, 127, 182, "Output",ExpressionUUID->"967f3524-2e72-455c-b168-f589341822ff"],
Cell[16133, 423, 390, 5, 34, "Output",ExpressionUUID->"8c441079-73fd-4858-ac95-3fb4354d1fb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16560, 433, 689, 16, 52, "Input",ExpressionUUID->"9b79c062-929c-4a30-bb42-da22a59f0991"],
Cell[17252, 451, 377, 7, 34, "Output",ExpressionUUID->"57d0bf94-84f1-45dd-b397-73362a17e5aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17666, 463, 1492, 35, 94, "Input",ExpressionUUID->"48aed63a-e238-4857-8f25-e526f0e8b74d"],
Cell[19161, 500, 5922, 158, 123, "Output",ExpressionUUID->"ff615ae2-c84a-45be-8332-fcb5d9e288d7"],
Cell[25086, 660, 396, 6, 34, "Output",ExpressionUUID->"50125b16-0f28-4f67-88fc-bf621a3700b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25519, 671, 1354, 33, 94, "Input",ExpressionUUID->"e3abc855-a115-4e3d-b11d-6847d96403a1"],
Cell[26876, 706, 5873, 153, 125, "Output",ExpressionUUID->"81e9149a-6a6d-4bc5-aff6-4035ec823b48"],
Cell[32752, 861, 319, 4, 34, "Output",ExpressionUUID->"1caf1f35-26ac-4e28-9184-7b1cf6a4ba6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33108, 870, 1057, 23, 94, "Input",ExpressionUUID->"fdf4cdc9-7297-4699-8469-a9ed020f845e"],
Cell[34168, 895, 2157, 55, 172, "Output",ExpressionUUID->"532545db-6f4e-4f2d-a57a-daa191ca3606"],
Cell[36328, 952, 392, 5, 34, "Output",ExpressionUUID->"2316438e-6ba0-4676-a9b7-e82c3cbac5e6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36769, 963, 150, 3, 69, "Chapter",ExpressionUUID->"0d65dc1e-a295-4f2b-ab1b-80d63a9b51dc"],
Cell[CellGroupData[{
Cell[36944, 970, 265, 4, 67, "Section",ExpressionUUID->"6d6065f0-19ab-4f8b-a668-3f5063252d1a"],
Cell[37212, 976, 2295, 66, 220, "Input",ExpressionUUID->"4c1009df-a675-416e-a9f9-eb947f9d7678"],
Cell[CellGroupData[{
Cell[39532, 1046, 222, 4, 54, "Subsection",ExpressionUUID->"ce187f5b-13e5-472b-be1c-64d9826cd14a"],
Cell[CellGroupData[{
Cell[39779, 1054, 1875, 47, 157, "Input",ExpressionUUID->"a91ef87f-16c0-4388-a11e-689c973da5c2"],
Cell[41657, 1103, 1995, 51, 182, "Output",ExpressionUUID->"4f2b9732-ecd9-4c6a-bab4-4764adba2966"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43701, 1160, 178, 3, 54, "Subsection",ExpressionUUID->"83cb1999-a583-4472-84a4-e3ade2097d4c"],
Cell[CellGroupData[{
Cell[43904, 1167, 6741, 165, 808, "Input",ExpressionUUID->"d5216cad-eb1c-4eb0-9bf9-34a069108eab"],
Cell[50648, 1334, 57945, 1034, 330, "Output",ExpressionUUID->"31e37146-910a-4e3b-805f-c25d41527805"],
Cell[108596, 2370, 2001, 50, 187, "Output",ExpressionUUID->"67011eca-76d8-4ace-b35f-b231aa493bb1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110646, 2426, 177, 3, 54, "Subsection",ExpressionUUID->"d03c7290-8569-4efd-9bcc-66101fc1844a"],
Cell[110826, 2431, 261, 6, 30, "Input",ExpressionUUID->"63a83ac8-cc27-46a5-81f4-ae67176adeda"],
Cell[CellGroupData[{
Cell[111112, 2441, 10581, 255, 892, "Input",ExpressionUUID->"d16cabfa-523e-4dbe-9a6a-75ff1a93c30e"],
Cell[121696, 2698, 104224, 1799, 330, "Output",ExpressionUUID->"e0fe8825-d5da-4bb1-903a-b2fcb370803d"],
Cell[225923, 4499, 3002, 67, 187, "Output",ExpressionUUID->"a3c81941-6cd8-4bab-a556-81d7180ad7b5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[228986, 4573, 278, 4, 67, "Section",ExpressionUUID->"d5336de3-5690-4ec4-9688-7780906f206d"],
Cell[229267, 4579, 2099, 63, 220, "Input",ExpressionUUID->"591a8f32-e48e-4e3c-b8ac-8ff236677dfb"],
Cell[CellGroupData[{
Cell[231391, 4646, 222, 4, 54, "Subsection",ExpressionUUID->"fcae8cc8-c918-4792-b671-86b819c178cc"],
Cell[CellGroupData[{
Cell[231638, 4654, 1930, 48, 157, "Input",ExpressionUUID->"81c3e3da-35e0-4531-be6c-31c558fe7948"],
Cell[233571, 4704, 2304, 58, 182, "Output",ExpressionUUID->"0c63f602-95a9-48b8-bce7-6acd3b09700e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[235924, 4768, 178, 3, 54, "Subsection",ExpressionUUID->"3d16fbb4-9f87-4b4a-98c8-b7e6e085d6b8"],
Cell[CellGroupData[{
Cell[236127, 4775, 6797, 166, 808, "Input",ExpressionUUID->"81310172-3a82-4bcf-ac0e-1a2354993f00"],
Cell[242927, 4943, 52514, 945, 330, "Output",ExpressionUUID->"5e886e4e-9a26-4a5f-85da-7739a678c55f"],
Cell[295444, 5890, 2298, 58, 187, "Output",ExpressionUUID->"c57a51f6-1e24-4f03-8942-cbfe293e3160"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[297791, 5954, 177, 3, 54, "Subsection",ExpressionUUID->"95d3d14e-060e-4a7c-86af-a91db54ac388"],
Cell[297971, 5959, 261, 6, 30, "Input",ExpressionUUID->"1973b3d3-5155-474e-bebd-781f9a9b21b6"],
Cell[CellGroupData[{
Cell[298257, 5969, 10786, 261, 913, "Input",ExpressionUUID->"8af01070-ab75-48d0-8753-162a07068f83"],
Cell[309046, 6232, 93180, 1618, 330, "Output",ExpressionUUID->"94e6a4b4-658a-4536-8407-5daafb2f13a4"],
Cell[402229, 7852, 4066, 90, 190, "Output",ExpressionUUID->"b7631662-32af-4e7e-b949-ed041b928046"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[406356, 7949, 305, 5, 67, "Section",ExpressionUUID->"70900523-5f5f-4dd7-8e9a-63c36d9ac9b5"],
Cell[CellGroupData[{
Cell[406686, 7958, 3131, 81, 220, "Input",ExpressionUUID->"38050836-29ce-432b-abd8-662bc05a28e6"],
Cell[409820, 8041, 2388, 58, 182, "Output",ExpressionUUID->"81b94460-246b-497e-ab9d-277923103c26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412245, 8104, 3008, 78, 241, "Input",ExpressionUUID->"9348a504-0bec-4a45-a0ae-21d28bc2c776"],
Cell[415256, 8184, 2366, 58, 187, "Output",ExpressionUUID->"9f910baf-c511-44ac-9bc7-c39876ee7724"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417659, 8247, 3022, 75, 262, "Input",ExpressionUUID->"93c9fd50-089c-447d-9957-283683484651"],
Cell[420684, 8324, 3652, 81, 187, "Output",ExpressionUUID->"ca47f3e5-594f-4288-8c7f-2a65dd40e693"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

